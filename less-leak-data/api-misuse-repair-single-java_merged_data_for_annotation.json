[
        {
                "data_len": 29
        },
        [
                {
                        "id": "pretrain_java_data_1735700",
                        "content": "<reponame>HomHomLin/Dilutions\npackage com.linhonghong.dilutions;\nimport org.objectweb.asm.ClassWriter;\nimport org.objectweb.asm.FieldVisitor;\nimport org.objectweb.asm.MethodVisitor;\nimport org.objectweb.asm.Opcodes;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Map;\n/**\n* Created by Linhh on 17/6/23.\n*/\npublic class DilutionsMetasWriter implements Opcodes{\npublic byte[] makeMetas(String pkg, HashMap<String, ArrayList<String>> metas){\nClassWriter cw = new ClassWriter(0);\nFieldVisitor fv;\nMethodVisitor mv;\ncw.visit(Opcodes.V1_7, Opcodes.ACC_PUBLIC + Opcodes.ACC_SUPER, pkg, null, \"java/lang/Object\", null);\nfv = cw.visitField(Opcodes.ACC_PUBLIC + Opcodes.ACC_STATIC, \"map\", \"Ljava/util/HashMap;\", \"Ljava/util/HashMap<Ljava/lang/String;Ljava/util/ArrayList<Ljava/lang/String;>;>;\", null);\nfv.visitEnd();\nmv = cw.visitMethod(Opcodes.ACC_PUBLIC, \"<init>\", \"()V\", null, null);\nmv.visitCode();\nmv.visitVarInsn(Opcodes.ALOAD, 0);\nmv.visitMethodInsn(Opcodes.INVOKESPECIAL, \"java/lang/Object\", \"<init>\", \"()V\", false);\nmv.visitInsn(Opcodes.RETURN);\nmv.visitMaxs(1, 1);\nmv.visitEnd();\nmv = cw.visitMethod(Opcodes.ACC_PUBLIC, \"getMap\", \"()Ljava/util/HashMap;\", \"()Ljava/util/HashMap<Ljava/lang/String;Ljava/util/ArrayList<Ljava/lang/String;>;>;\", null);\nmv.visitCode();\nmv.visitFieldInsn(Opcodes.GETSTATIC, pkg, \"map\", \"Ljava/util/HashMap;\");\nmv.visitInsn(Opcodes.ARETURN);\nmv.visitMaxs(1, 1);\nmv.visitEnd();\nmv = cw.visitMethod(Opcodes.ACC_STATIC, \"<clinit>\", \"()V\", null, null);\nmv.visitCode();\nmv.visitTypeInsn(Opcodes.NEW, \"java/util/HashMap\");\nmv.visitInsn(Opcodes.DUP);\nmv.visitMethodInsn(Opcodes.INVOKESPECIAL, \"java/util/HashMap\", \"<init>\", \"()V\", false);\nmv.visitFieldInsn(Opcodes.PUTSTATIC, pkg, \"map\", \"Ljava/util/HashMap;\");\nfor(Map.Entry<String, ArrayList<String>> entrySet: metas.entrySet()){\nString key = entrySet.getKey();\nArrayList<String> v = entrySet.getValue();\n//\u521b\u5efa\u4e00\u4e2alist\nmv.visitTypeInsn(Opcodes.NEW, \"java/util/ArrayList\");\nmv.visitInsn(Opcodes.DUP);\nmv.visitMethodInsn(Opcodes.INVOKESPECIAL, \"java/util/ArrayList\", \"<init>\", \"()V\", false);\nmv.visitVarInsn(Opcodes.ASTORE, 0);\nfor(String s : v){\nmv.visitVarInsn(Opcodes.ALOAD, 0);\nmv.visitLdcInsn(s);\nmv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, \"java/util/ArrayList\", \"add\", \"(Ljava/lang/Object;)Z\", false);\nmv.visitInsn(Opcodes.POP);\n}\nmv.visitFieldInsn(Opcodes.GETSTATIC, pkg, \"map\", \"Ljava/util/HashMap;\");\nmv.visitLdcInsn(key);\nmv.visitVarInsn(Opcodes.ALOAD, 0);\nmv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, \"java/util/HashMap\", \"put\", \"(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\", false);\nmv.visitInsn(Opcodes.POP);\n}\nmv.visitInsn(Opcodes.RETURN);\nmv.visitMaxs(3, 1);\nmv.visitEnd();\ncw.visitEnd();\nreturn cw.toByteArray();\n}\n}",
                        "max_stars_repo_name": "HomHomLin/Dilutions",
                        "max_stars_count": 32,
                        "max_stars_repo_path": "dilutionsPlugin/src/main/java/com/linhonghong/dilutions/DilutionsMetasWriter.java",
                        "__cluster__": 2164
                },
                {
                        "id": "test_api-misuse-repair-single_data_2165",
                        "content": "public byte[] makeMetas(String pkg, HashMap<String, ArrayList<String>> metas) { ClassWriter cw = new ClassWriter(0); FieldVisitor fv; MethodVisitor mv; cw.visit(Opcodes.V1_7, Opcodes.ACC_PUBLIC + Opcodes.ACC_SUPER, pkg, null, \"com/meetyou/anna/client/impl/IAnnaReceiver\", null); fv = cw.visitField(Opcodes.ACC_PUBLIC + Opcodes.ACC_STATIC, \"map\", \"Ljava/util/HashMap;\", \"Ljava/util/HashMap<Ljava/lang/String;Ljava/util/ArrayList<Ljava/lang/String;>;>;\", null); fv.visitEnd(); mv = cw.visitMethod(Opcodes.ACC_PUBLIC, \"<init>\", \"()V\", null, null); mv.visitCode(); mv.visitVarInsn(Opcodes.ALOAD, 0); mv.visitMethodInsn(Opcodes.INVOKESPECIAL, \"java/lang/Object\", \"<init>\", \"()V\", false); mv.visitInsn(Opcodes.RETURN); mv.visitMaxs(1, 1); mv.visitEnd(); mv = cw.visitMethod(Opcodes.ACC_PUBLIC, \"getMap\", \"()Ljava/util/HashMap;\", \"()Ljava/util/HashMap<Ljava/lang/String;Ljava/util/ArrayList<Ljava/lang/String;>;>;\", null); mv.visitCode(); mv.visitFieldInsn(Opcodes.GETSTATIC, pkg, \"map\", \"Ljava/util/HashMap;\"); mv.visitInsn(Opcodes.ARETURN); mv.visitMaxs(1, 1); mv.visitEnd(); mv = cw.visitMethod(Opcodes.ACC_STATIC, \"<clinit>\", \"()V\", null, null); mv.visitCode(); mv.visitTypeInsn(Opcodes.NEW, \"java/util/HashMap\"); mv.visitInsn(Opcodes.DUP); mv.visitMethodInsn(Opcodes.INVOKESPECIAL, \"java/util/HashMap\", \"<init>\", \"()V\", false); mv.visitFieldInsn(Opcodes.PUTSTATIC, pkg, \"map\", \"Ljava/util/HashMap;\"); for (Map.Entry<String, ArrayList<String>> entrySet : metas.entrySet()) { String key = entrySet.getKey(); ArrayList<String> v = entrySet.getValue(); mv.visitTypeInsn(Opcodes.NEW, \"java/util/ArrayList\"); mv.visitInsn(Opcodes.DUP); mv.visitMethodInsn(Opcodes.INVOKESPECIAL, \"java/util/ArrayList\", \"<init>\", \"()V\", false); mv.visitVarInsn(Opcodes.ASTORE, 0); for (String s : v) { mv.visitVarInsn(Opcodes.ALOAD, 0); mv.visitLdcInsn(s); mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, \"java/util/ArrayList\", \"add\", \"(Ljava/lang/Object;)Z\", false); mv.visitInsn(Opcodes.POP); } mv.visitFieldInsn(Opcodes.GETSTATIC, pkg, \"map\", \"Ljava/util/HashMap;\"); mv.visitLdcInsn(key); mv.visitVarInsn(Opcodes.ALOAD, 0); mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, \"java/util/HashMap\", \"put\", \"(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\", false); mv.visitInsn(Opcodes.POP); } mv.visitInsn(Opcodes.RETURN); mv.visitMaxs(3, 1); mv.visitEnd(); cw.visitEnd(); return cw.toByteArray(); }\npublic byte[] makeMetas(String pkg, HashMap<String, ArrayList<String>> metas) { ClassWriter cw = new ClassWriter(0); FieldVisitor fv; MethodVisitor mv; cw.visit(Opcodes.V1_7, Opcodes.ACC_PUBLIC + Opcodes.ACC_SUPER, pkg, null, \"java/lang/Object\", null); fv = cw.visitField(Opcodes.ACC_PUBLIC + Opcodes.ACC_STATIC, \"map\", \"Ljava/util/HashMap;\", \"Ljava/util/HashMap<Ljava/lang/String;Ljava/util/ArrayList<Ljava/lang/String;>;>;\", null); fv.visitEnd(); mv = cw.visitMethod(Opcodes.ACC_PUBLIC, \"<init>\", \"()V\", null, null); mv.visitCode(); mv.visitVarInsn(Opcodes.ALOAD, 0); mv.visitMethodInsn(Opcodes.INVOKESPECIAL, \"java/lang/Object\", \"<init>\", \"()V\", false); mv.visitInsn(Opcodes.RETURN); mv.visitMaxs(1, 1); mv.visitEnd(); mv = cw.visitMethod(Opcodes.ACC_PUBLIC, \"getMap\", \"()Ljava/util/HashMap;\", \"()Ljava/util/HashMap<Ljava/lang/String;Ljava/util/ArrayList<Ljava/lang/String;>;>;\", null); mv.visitCode(); mv.visitFieldInsn(Opcodes.GETSTATIC, pkg, \"map\", \"Ljava/util/HashMap;\"); mv.visitInsn(Opcodes.ARETURN); mv.visitMaxs(1, 1); mv.visitEnd(); mv = cw.visitMethod(Opcodes.ACC_STATIC, \"<clinit>\", \"()V\", null, null); mv.visitCode(); mv.visitTypeInsn(Opcodes.NEW, \"java/util/HashMap\"); mv.visitInsn(Opcodes.DUP); mv.visitMethodInsn(Opcodes.INVOKESPECIAL, \"java/util/HashMap\", \"<init>\", \"()V\", false); mv.visitFieldInsn(Opcodes.PUTSTATIC, pkg, \"map\", \"Ljava/util/HashMap;\"); for (Map.Entry<String, ArrayList<String>> entrySet : metas.entrySet()) { String key = entrySet.getKey(); ArrayList<String> v = entrySet.getValue(); mv.visitTypeInsn(Opcodes.NEW, \"java/util/ArrayList\"); mv.visitInsn(Opcodes.DUP); mv.visitMethodInsn(Opcodes.INVOKESPECIAL, \"java/util/ArrayList\", \"<init>\", \"()V\", false); mv.visitVarInsn(Opcodes.ASTORE, 0); for (String s : v) { mv.visitVarInsn(Opcodes.ALOAD, 0); mv.visitLdcInsn(s); mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, \"java/util/ArrayList\", \"add\", \"(Ljava/lang/Object;)Z\", false); mv.visitInsn(Opcodes.POP); } mv.visitFieldInsn(Opcodes.GETSTATIC, pkg, \"map\", \"Ljava/util/HashMap;\"); mv.visitLdcInsn(key); mv.visitVarInsn(Opcodes.ALOAD, 0); mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, \"java/util/HashMap\", \"put\", \"(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\", false); mv.visitInsn(Opcodes.POP); } mv.visitInsn(Opcodes.RETURN); mv.visitMaxs(3, 1); mv.visitEnd(); cw.visitEnd(); return cw.toByteArray(); }",
                        "max_stars_repo_name": "NA",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "NA",
                        "__cluster__": 2164
                },
                {
                        "real_dup": 2
                }
        ],


        [
                {
                        "id": "test_api-misuse-repair-single_data_1410",
                        "content": "public static void main(String[] args) { System.out.println(\"Hello, World!!!!!!!!!\"); }\npublic static void main(String[] args) { System.out.println(\"Hello, World\"); }",
                        "max_stars_repo_name": "NA",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "NA",
                        "__cluster__": 1159
                },
                {
                        "id": "pretrain_java_data_1748574",
                        "content": "class Source2Image {\npublic static void main(String[] args) {\nSystem.out.println(\"Hello, Source2Image @ RivieraDev\");\n}\n}",
                        "max_stars_repo_name": "l0rd/containerspatterns",
                        "max_stars_count": 189,
                        "max_stars_repo_path": "S2I/src/main/java/Source2Image.java",
                        "__cluster__": 1159
                },
                {
                        "real_dup": 0
                }
        ],


        [
                {
                        "id": "test_api-misuse-repair-single_data_1410",
                        "content": "public static void main(String[] args) { System.out.println(\"Hello, World!!!!!!!!!\"); }\npublic static void main(String[] args) { System.out.println(\"Hello, World\"); }",
                        "max_stars_repo_name": "NA",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "NA",
                        "__cluster__": 1409
                },
                {
                        "id": "pretrain_java_data_17649655",
                        "content": "public class Java_2 {\npublic static void main(String[] args) {\ndisplay();\n}\npublic static void display() {\nSystem.out.println(\"Hello World!\");\n}\n}",
                        "max_stars_repo_name": "JStearsman/hello-worlds",
                        "max_stars_count": 81,
                        "max_stars_repo_path": "examples/Java_2.java",
                        "__cluster__": 1409
                },
                {
                        "real_dup": 1
                }
        ],


        [
                {
                        "id": "test_api-misuse-repair-single_data_1410",
                        "content": "public static void main(String[] args) { System.out.println(\"Hello, World!!!!!!!!!\"); }\npublic static void main(String[] args) { System.out.println(\"Hello, World\"); }",
                        "max_stars_repo_name": "NA",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "NA",
                        "__cluster__": 1409
                },
                {
                        "id": "pretrain_java_data_8111740",
                        "content": "public class HelloWorld99 {\npublic static void main(String[] args) {\nSystem.out.println(\"Hello World :D\");\n}\n}",
                        "max_stars_repo_name": "leilaapsilva/BabySteps",
                        "max_stars_count": 37,
                        "max_stars_repo_path": "HelloWorld/java/HelloWorld99.java",
                        "__cluster__": 1409
                },
                {
                        "real_dup": 2
                }
        ],


        [
                {
                        "id": "test_api-misuse-repair-single_data_1410",
                        "content": "public static void main(String[] args) { System.out.println(\"Hello, World!!!!!!!!!\"); }\npublic static void main(String[] args) { System.out.println(\"Hello, World\"); }",
                        "max_stars_repo_name": "NA",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "NA",
                        "__cluster__": 1409
                },
                {
                        "id": "pretrain_java_data_9670796",
                        "content": "public class DexTest {\npublic static void main(String[] args) {\nSystem.out.println(\"Hello, emulator\");\n}\n}",
                        "max_stars_repo_name": "Diffblue-benchmarks/emulator",
                        "max_stars_count": 1,
                        "max_stars_repo_path": "src/test/resources/example_binaries/DexTest.java",
                        "__cluster__": 1409
                },
                {
                        "real_dup": 0
                }
        ],


        [
                {
                        "id": "test_api-misuse-repair-single_data_1410",
                        "content": "public static void main(String[] args) { System.out.println(\"Hello, World!!!!!!!!!\"); }\npublic static void main(String[] args) { System.out.println(\"Hello, World\"); }",
                        "max_stars_repo_name": "NA",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "NA",
                        "__cluster__": 1409
                },
                {
                        "id": "pretrain_java_data_11324916",
                        "content": "\nclass Hello{\npublic static void main(String[] args) {\nSystem.out.println(\"Java: Hello, World!\");\n}\n}",
                        "max_stars_repo_name": "korbenzhang/langs_demo",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "tasks/hello/Hello.java",
                        "__cluster__": 1409
                },
                {
                        "real_dup": 1
                }
        ],


        [
                {
                        "id": "test_api-misuse-repair-single_data_1410",
                        "content": "public static void main(String[] args) { System.out.println(\"Hello, World!!!!!!!!!\"); }\npublic static void main(String[] args) { System.out.println(\"Hello, World\"); }",
                        "max_stars_repo_name": "NA",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "NA",
                        "__cluster__": 1409
                },
                {
                        "id": "pretrain_java_data_1876723",
                        "content": "public class main {\npublic static void main(String[] args) {\nint number = 10\nSystem.out.println(\"Hello, World!\");\nSystem.out.println(number)\n}\n}",
                        "max_stars_repo_name": "BlazerYoo/ninjaspect.github.io",
                        "max_stars_count": 4,
                        "max_stars_repo_path": "Java/src/main.java",
                        "__cluster__": 1409
                },
                {
                        "real_dup": 1
                }
        ],


        [
                {
                        "id": "test_api-misuse-repair-single_data_5267",
                        "content": "public static ExpiryDayValidator getExpiryDay(String periodType, int expiryDays, String period) { switch(periodType) { case DateConstants.PERIOD_FINANCIAL_APRIL: return new FinancialYearAprilExpiryDayValidator(expiryDays, period); case DateConstants.PERIOD_FINANCIAL_JULY: return new FinancialYearJulyExpiryDayValidator(expiryDays, period); case DateConstants.PERIOD_FINANCIAL_OCT: return new FinancialYearOctExpiryDayValidator(expiryDays, period); case DateConstants.PERIOD_YEARLY: return new YearlyExpiryDayValidator(expiryDays, period); case DateConstants.PERIOD_QUARTERLY: return new QuarterlyExpiryDayValidator(expiryDays, period); case DateConstants.PERIOD_SIX_MONTHLY_APRIL: return new SixMonthlyAprilExpiryDayValidator(expiryDays, period); case DateConstants.PERIOD_SIX_MONTHLY: return new SixMonthlyExpiryDayValidator(expiryDays, period); case DateConstants.PERIOD_BIMONTHLY: return new ExpiryDayBimonthlyValidator(expiryDays, period); case DateConstants.PERIOD_MONTHLY: return new MonthlyExpiryDayValidator(expiryDays, period); case DateConstants.PERIOD_WEEKLY_WEDNESDAY: return new WeeklyExpiryDayValidator(expiryDays, period); case DateConstants.PERIOD_WEEKLY_THURSDAY: return new WeeklyThursdayExpiryDayValidator(expiryDays, period); case DateConstants.PERIOD_WEEKLY_SATURDAY: return new WeeklySaturdayExpiryDayValidator(expiryDays, period); case DateConstants.PERIOD_WEEKLY_SUNDAY: return new WeeklySundayExpiryDayValidator(expiryDays, period); case DateConstants.PERIOD_WEEKLY: return new WeeklyExpiryDayValidator(expiryDays, period); default: return new ExpiryDayValidator(expiryDays, period); } }\npublic static ExpiryDayValidator getExpiryDay(String periodType, int expiryDays, String period) { switch(periodType) { case DateConstants.PERIOD_FINANCIAL_APRIL: return new FinancialYearAprilExpiryDayValidator(expiryDays, period); case DateConstants.PERIOD_FINANCIAL_JULY: return new FinancialYearJulyExpiryDayValidator(expiryDays, period); case DateConstants.PERIOD_FINANCIAL_OCT: return new FinancialYearOctExpiryDayValidator(expiryDays, period); case DateConstants.PERIOD_YEARLY: return new YearlyExpiryDayValidator(expiryDays, period); case DateConstants.PERIOD_QUARTERLY: return new QuarterlyExpiryDayValidator(expiryDays, period); case DateConstants.PERIOD_SIX_MONTHLY_APRIL: return new SixMonthlyAprilExpiryDayValidator(expiryDays, period); case DateConstants.PERIOD_SIX_MONTHLY: return new SixMonthlyExpiryDayValidator(expiryDays, period); case DateConstants.PERIOD_BIMONTHLY: return new BimonthlyExpiryDayValidator(expiryDays, period); case DateConstants.PERIOD_MONTHLY: return new MonthlyExpiryDayValidator(expiryDays, period); case DateConstants.PERIOD_WEEKLY_WEDNESDAY: return new WeeklyExpiryDayValidator(expiryDays, period); case DateConstants.PERIOD_WEEKLY_THURSDAY: return new WeeklyThursdayExpiryDayValidator(expiryDays, period); case DateConstants.PERIOD_WEEKLY_SATURDAY: return new WeeklySaturdayExpiryDayValidator(expiryDays, period); case DateConstants.PERIOD_WEEKLY_SUNDAY: return new WeeklySundayExpiryDayValidator(expiryDays, period); case DateConstants.PERIOD_WEEKLY: return new WeeklyExpiryDayValidator(expiryDays, period); default: return new ExpiryDayValidator(expiryDays, period); } }",
                        "max_stars_repo_name": "NA",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "NA",
                        "__cluster__": 5266
                },
                {
                        "id": "pretrain_java_data_19458579",
                        "content": "<gh_stars>1-10\npackage org.dhis2.mobile.utils.date.expiryday;\nimport org.dhis2.mobile.utils.date.DateConstants;\npublic class ExpiryDayValidatorFactory {\npublic static ExpiryDayValidator getExpiryDay(String periodType, int expiryDays,\nString period) {\nswitch (periodType) {\ncase DateConstants.PERIOD_FINANCIAL_APRIL:\nreturn new FinancialYearAprilExpiryDayValidator(expiryDays, period);\ncase DateConstants.PERIOD_FINANCIAL_JULY:\nreturn new FinancialYearJulyExpiryDayValidator(expiryDays, period);\ncase DateConstants.PERIOD_FINANCIAL_OCT:\nreturn new FinancialYearOctExpiryDayValidator(expiryDays, period);\ncase DateConstants.PERIOD_YEARLY:\nreturn new YearlyExpiryDayValidator(expiryDays, period);\ncase DateConstants.PERIOD_QUARTERLY:\nreturn new QuarterlyExpiryDayValidator(expiryDays, period);\ncase DateConstants.PERIOD_SIX_MONTHLY_APRIL:\nreturn new SixMonthlyAprilExpiryDayValidator(expiryDays, period);\ncase DateConstants.PERIOD_SIX_MONTHLY:\nreturn new SixMonthlyExpiryDayValidator(expiryDays, period);\ncase DateConstants.PERIOD_BIMONTHLY:\nreturn new BimonthlyExpiryDayValidator(expiryDays, period);\ncase DateConstants.PERIOD_MONTHLY:\nreturn new MonthlyExpiryDayValidator(expiryDays, period);\ncase DateConstants.PERIOD_WEEKLY_WEDNESDAY:\nreturn new WeeklyWednesdayExpiryDayValidator(expiryDays, period);\ncase DateConstants.PERIOD_WEEKLY_THURSDAY:\nreturn new WeeklyThursdayExpiryDayValidator(expiryDays, period);\ncase DateConstants.PERIOD_WEEKLY_SATURDAY:\nreturn new WeeklySaturdayExpiryDayValidator(expiryDays, period);\ncase DateConstants.PERIOD_WEEKLY_SUNDAY:\nreturn new WeeklySundayExpiryDayValidator(expiryDays, period);\ncase DateConstants.PERIOD_WEEKLY:\nreturn new WeeklyExpiryDayValidator(expiryDays, period);\ncase DateConstants.PERIOD_BIWEEKLY:\nreturn new BiWeeklyExpiryDayValidator(expiryDays, period);\ndefault:\nreturn new ExpiryDayValidator(expiryDays, period);\n}\n}\n}",
                        "max_stars_repo_name": "AusseKalega/DHIS2-OLAPI-Android",
                        "max_stars_count": 10,
                        "max_stars_repo_path": "dhis2-android-app/src/main/java/org/dhis2/mobile/utils/date/expiryday/ExpiryDayValidatorFactory.java",
                        "__cluster__": 5266
                },
                {
                        "real_dup": "1"
                }
        ],


        [
                {
                        "id": "test_api-misuse-repair-single_data_1410",
                        "content": "public static void main(String[] args) { System.out.println(\"Hello, World!!!!!!!!!\"); }\npublic static void main(String[] args) { System.out.println(\"Hello, World\"); }",
                        "max_stars_repo_name": "NA",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "NA",
                        "__cluster__": 1409
                },
                {
                        "id": "pretrain_java_data_6660753",
                        "content": "public class HelloWorld {\npublic static void main(String[] args) {\nHWCom.msg = \"World\";\nSystem.out.println(\"Hello \" + HWCom.msg);\n}\n}",
                        "max_stars_repo_name": "GuilhermeEsdras/Coffe-Shop",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "Programas Simples/HelloSimpleProj/src/HelloWorld.java",
                        "__cluster__": 1409
                },
                {
                        "real_dup": 1
                }
        ],


        [
                {
                        "id": "test_api-misuse-repair-single_data_353",
                        "content": "public static void main(String[] args) { Message message = new Message(); (new Thread(new Writer(message))).start(); (new Thread(new Writer(message))).start(); }\npublic static void main(String[] args) { Message message = new Message(); (new Thread(new Writer(message))).start(); (new Thread(new Reader(message))).start(); }",
                        "max_stars_repo_name": "NA",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "NA",
                        "__cluster__": 352
                },
                {
                        "id": "pretrain_java_data_6676203",
                        "content": "package com.company;\npublic class Main {\npublic static void main(String[] args) {\nMessage message = new Message();\n(new Thread(new Writer(message))).start();\n(new Thread(new Reader(message))).start();\n}\n}",
                        "max_stars_repo_name": "DorkinsTheOwl/owl-learning-java",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "MultipleThreads - Messages/src/com/company/Main.java",
                        "__cluster__": 352
                },
                {
                        "real_dup": 2
                }
        ],


        [
                {
                        "id": "test_api-misuse-repair-single_data_1410",
                        "content": "public static void main(String[] args) { System.out.println(\"Hello, World!!!!!!!!!\"); }\npublic static void main(String[] args) { System.out.println(\"Hello, World\"); }",
                        "max_stars_repo_name": "NA",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "NA",
                        "__cluster__": 1409
                },
                {
                        "id": "pretrain_java_data_13033174",
                        "content": "public static void main(String[] args) {\nSystem.out.println(1337);\n}",
                        "max_stars_repo_name": "rockwotj/mjc",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "src/test/resources/LexerFullTests/testcaseA5-04.java",
                        "__cluster__": 1409
                },
                {
                        "real_dup": "1"
                }
        ],


        [
                {
                        "id": "test_api-misuse-repair-single_data_1410",
                        "content": "public static void main(String[] args) { System.out.println(\"Hello, World!!!!!!!!!\"); }\npublic static void main(String[] args) { System.out.println(\"Hello, World\"); }",
                        "max_stars_repo_name": "NA",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "NA",
                        "__cluster__": 1409
                },
                {
                        "id": "pretrain_java_data_14784550",
                        "content": "public class MyFirstProgram {\npublic static void main(String[] args){\nSystem.out.println(\"Hello, Serg!\");\n}\n}",
                        "max_stars_repo_name": "meowme0w/java_pft",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "sandbox/src/main/java/MyFirstProgram.java",
                        "__cluster__": 1409
                },
                {
                        "real_dup": 1
                }
        ],


        [
                {
                        "id": "test_api-misuse-repair-single_data_1410",
                        "content": "public static void main(String[] args) { System.out.println(\"Hello, World!!!!!!!!!\"); }\npublic static void main(String[] args) { System.out.println(\"Hello, World\"); }",
                        "max_stars_repo_name": "NA",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "NA",
                        "__cluster__": 1409
                },
                {
                        "id": "pretrain_java_data_16487268",
                        "content": "public class HelloWorld{\npublic static void main(String args[]){\nSystem.out.println(\"Hello,, World!!\");\n}}",
                        "max_stars_repo_name": "mannaandgit/javaPrograms",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "HelloWorld.java",
                        "__cluster__": 1409
                },
                {
                        "real_dup": 1
                }
        ],


        [
                {
                        "id": "test_api-misuse-repair-single_data_1410",
                        "content": "public static void main(String[] args) { System.out.println(\"Hello, World!!!!!!!!!\"); }\npublic static void main(String[] args) { System.out.println(\"Hello, World\"); }",
                        "max_stars_repo_name": "NA",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "NA",
                        "__cluster__": 1409
                },
                {
                        "id": "pretrain_java_data_5386258",
                        "content": "public class MohammedHelloWorld{\nstatic String x = \"Hello\";\nstatic String y = \"World\";\npublic static void main(String[] args) {\nSystem.out.println(x + y);\n}\n}",
                        "max_stars_repo_name": "saurabhcommand/Hello-world",
                        "max_stars_count": 1428,
                        "max_stars_repo_path": "Java/MohammedHelloWorld.java",
                        "__cluster__": 1409
                },
                {
                        "real_dup": "1"
                }
        ],


        [
                {
                        "id": "test_api-misuse-repair-single_data_1410",
                        "content": "public static void main(String[] args) { System.out.println(\"Hello, World!!!!!!!!!\"); }\npublic static void main(String[] args) { System.out.println(\"Hello, World\"); }",
                        "max_stars_repo_name": "NA",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "NA",
                        "__cluster__": 1409
                },
                {
                        "id": "pretrain_java_data_6974825",
                        "content": "class Main {\npublic static void main(String args[]) {\nif (true) {\nSystem.out.println(\"Hello, World!\");\n}\n}\n}\n",
                        "max_stars_repo_name": "dandion/codeql-action",
                        "max_stars_count": 541,
                        "max_stars_repo_path": "tests/multi-language-repo/Main.java",
                        "__cluster__": 1409
                },
                {
                        "real_dup": 2
                }
        ],


        [
                {
                        "id": "pretrain_java_data_14876902",
                        "content": "\npublic class Mashuying_Hello\n{\n/**\n*\n*\n* Hello\n*/\npublic static void main(String[] args)\n{\nSystem.out.println(\" Hello  World !\");\n}//main\n}//class",
                        "max_stars_repo_name": "fanghon/antiplag",
                        "max_stars_count": 236,
                        "max_stars_repo_path": "testdata/javajishusim/Mashuying_Hello.java",
                        "__cluster__": 1159
                },
                {
                        "id": "test_api-misuse-repair-single_data_1410",
                        "content": "public static void main(String[] args) { System.out.println(\"Hello, World!!!!!!!!!\"); }\npublic static void main(String[] args) { System.out.println(\"Hello, World\"); }",
                        "max_stars_repo_name": "NA",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "NA",
                        "__cluster__": 1159
                },
                {
                        "real_dup": 1
                }
        ],


        [
                {
                        "id": "test_api-misuse-repair-single_data_1410",
                        "content": "public static void main(String[] args) { System.out.println(\"Hello, World!!!!!!!!!\"); }\npublic static void main(String[] args) { System.out.println(\"Hello, World\"); }",
                        "max_stars_repo_name": "NA",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "NA",
                        "__cluster__": 1409
                },
                {
                        "id": "pretrain_java_data_18226673",
                        "content": "package helloWord;\npublic class helloWord {\npublic static void main(String[] args) {\nSystem.out.println(\"Hello\");\n}\n}",
                        "max_stars_repo_name": "aszx87414/Learngit",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "src/helloWord/helloWord.java",
                        "__cluster__": 1409
                },
                {
                        "real_dup": 1
                }
        ],


        [
                {
                        "id": "test_api-misuse-repair-single_data_1410",
                        "content": "public static void main(String[] args) { System.out.println(\"Hello, World!!!!!!!!!\"); }\npublic static void main(String[] args) { System.out.println(\"Hello, World\"); }",
                        "max_stars_repo_name": "NA",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "NA",
                        "__cluster__": 1409
                },
                {
                        "id": "pretrain_java_data_18426133",
                        "content": "public class A {\npublic static void main(String[] args){\nSystem.out.println(\"Hello, wolrld!\");\n}\n}",
                        "max_stars_repo_name": "lisiynos/lisiynos.github.io",
                        "max_stars_count": 1,
                        "max_stars_repo_path": "s1/java/A.java",
                        "__cluster__": 1409
                },
                {
                        "real_dup": 1
                }
        ],


        [
                {
                        "id": "pretrain_java_data_15267478",
                        "content": "package Hexel.util;\nimport java.awt.event.KeyEvent;\npublic class CharToKeyEvent {\npublic static int convert(char character) {\nswitch (character) {\ncase 'a': return KeyEvent.VK_A;\ncase 'b': return KeyEvent.VK_B;\ncase 'c': return KeyEvent.VK_C;\ncase 'd': return KeyEvent.VK_D;\ncase 'e': return KeyEvent.VK_E;\ncase 'f': return KeyEvent.VK_F;\ncase 'g': return KeyEvent.VK_G;\ncase 'h': return KeyEvent.VK_H;\ncase 'i': return KeyEvent.VK_I;\ncase 'j': return KeyEvent.VK_J;\ncase 'k': return KeyEvent.VK_K;\ncase 'l': return KeyEvent.VK_L;\ncase 'm': return KeyEvent.VK_M;\ncase 'n': return KeyEvent.VK_N;\ncase 'o': return KeyEvent.VK_O;\ncase 'p': return KeyEvent.VK_P;\ncase 'q': return KeyEvent.VK_Q;\ncase 'r': return KeyEvent.VK_R;\ncase 's': return KeyEvent.VK_S;\ncase 't': return KeyEvent.VK_T;\ncase 'u': return KeyEvent.VK_U;\ncase 'v': return KeyEvent.VK_V;\ncase 'w': return KeyEvent.VK_W;\ncase 'x': return KeyEvent.VK_X;\ncase 'y': return KeyEvent.VK_Y;\ncase 'z': return KeyEvent.VK_Z;\ncase 'A': return KeyEvent.VK_A;\ncase 'B': return KeyEvent.VK_B;\ncase 'C': return KeyEvent.VK_C;\ncase 'D': return KeyEvent.VK_D;\ncase 'E': return KeyEvent.VK_E;\ncase 'F': return KeyEvent.VK_F;\ncase 'G': return KeyEvent.VK_G;\ncase 'H': return KeyEvent.VK_H;\ncase 'I': return KeyEvent.VK_I;\ncase 'J': return KeyEvent.VK_J;\ncase 'K': return KeyEvent.VK_K;\ncase 'L': return KeyEvent.VK_L;\ncase 'M': return KeyEvent.VK_M;\ncase 'N': return KeyEvent.VK_N;\ncase 'O': return KeyEvent.VK_O;\ncase 'P': return KeyEvent.VK_P;\ncase 'Q': return KeyEvent.VK_Q;\ncase 'R': return KeyEvent.VK_R;\ncase 'S': return KeyEvent.VK_S;\ncase 'T': return KeyEvent.VK_T;\ncase 'U': return KeyEvent.VK_U;\ncase 'V': return KeyEvent.VK_V;\ncase 'W': return KeyEvent.VK_W;\ncase 'X': return KeyEvent.VK_X;\ncase 'Y': return KeyEvent.VK_Y;\ncase 'Z': return KeyEvent.VK_Z;\ncase '`': return KeyEvent.VK_BACK_QUOTE;\ncase '0': return KeyEvent.VK_0;\ncase '1': return KeyEvent.VK_1;\ncase '2': return KeyEvent.VK_2;\ncase '3': return KeyEvent.VK_3;\ncase '4': return KeyEvent.VK_4;\ncase '5': return KeyEvent.VK_5;\ncase '6': return KeyEvent.VK_6;\ncase '7': return KeyEvent.VK_7;\ncase '8': return KeyEvent.VK_8;\ncase '9': return KeyEvent.VK_9;\ncase '-': return KeyEvent.VK_MINUS;\ncase '=': return KeyEvent.VK_EQUALS;\ncase '!': return KeyEvent.VK_EXCLAMATION_MARK;\ncase '@': return KeyEvent.VK_AT;\ncase '#': return KeyEvent.VK_NUMBER_SIGN;\ncase '$': return KeyEvent.VK_DOLLAR;\ncase '^': return KeyEvent.VK_CIRCUMFLEX;\ncase '&': return KeyEvent.VK_AMPERSAND;\ncase '*': return KeyEvent.VK_ASTERISK;\ncase '(': return KeyEvent.VK_LEFT_PARENTHESIS;\ncase ')': return KeyEvent.VK_RIGHT_PARENTHESIS;\ncase '_': return KeyEvent.VK_UNDERSCORE;\ncase '+': return KeyEvent.VK_PLUS;\ncase '\\t':return KeyEvent.VK_TAB;\ncase '\\n':return KeyEvent.VK_ENTER;\ncase '[': return KeyEvent.VK_OPEN_BRACKET;\ncase ']': return KeyEvent.VK_CLOSE_BRACKET;\ncase '\\\\':return KeyEvent.VK_BACK_SLASH;\ncase ';': return KeyEvent.VK_SEMICOLON;\ncase ':': return KeyEvent.VK_COLON;\ncase '\\'':return KeyEvent.VK_QUOTE;\ncase '\"': return KeyEvent.VK_QUOTEDBL;\ncase ',': return KeyEvent.VK_COMMA;\ncase '<': return KeyEvent.VK_LESS;\ncase '.': return KeyEvent.VK_PERIOD;\ncase '>': return KeyEvent.VK_GREATER;\ncase '/': return KeyEvent.VK_SLASH;\ncase ' ': return KeyEvent.VK_SPACE;\ndefault:\nthrow new IllegalArgumentException(\"Cannot convert character \" + character);\n}\n}\n}\n",
                        "max_stars_repo_name": "xyuan/Hexel",
                        "max_stars_count": 1,
                        "max_stars_repo_path": "src/Hexel/util/CharToKeyEvent.java",
                        "__cluster__": 162
                },
                {
                        "id": "test_api-misuse-repair-single_data_163",
                        "content": "public void type(char character) { switch(character) { case 'a': doType(KeyEvent.VK_A); break; case 'b': doType(KeyEvent.VK_B); break; case 'c': doType(KeyEvent.VK_C); break; case 'd': doType(KeyEvent.VK_D); break; case 'e': doType(KeyEvent.VK_E); break; case 'f': doType(KeyEvent.VK_F); break; case 'g': doType(KeyEvent.VK_G); break; case 'h': doType(KeyEvent.VK_H); break; case 'i': doType(KeyEvent.VK_I); break; case 'j': doType(KeyEvent.VK_J); break; case 'k': doType(KeyEvent.VK_K); break; case 'l': doType(KeyEvent.VK_L); break; case 'm': doType(KeyEvent.VK_M); break; case 'n': doType(KeyEvent.VK_N); break; case 'o': doType(KeyEvent.VK_O); break; case 'p': doType(KeyEvent.VK_P); break; case 'q': doType(KeyEvent.VK_Q); break; case 'r': doType(KeyEvent.VK_R); break; case 's': doType(KeyEvent.VK_S); break; case 't': doType(KeyEvent.VK_T); break; case 'u': doType(KeyEvent.VK_U); break; case 'v': doType(KeyEvent.VK_V); break; case 'w': doType(KeyEvent.VK_W); break; case 'x': doType(KeyEvent.VK_X); break; case 'y': doType(KeyEvent.VK_Y); break; case 'z': doType(KeyEvent.VK_Z); break; case 'A': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_A); break; case 'B': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_B); break; case 'C': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_C); break; case 'D': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_D); break; case 'E': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_E); break; case 'F': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_F); break; case 'G': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_G); break; case 'H': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_H); break; case 'I': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_I); break; case 'J': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_J); break; case 'K': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_K); break; case 'L': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_L); break; case 'M': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_M); break; case 'N': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_N); break; case 'O': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_O); break; case 'P': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_P); break; case 'Q': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_Q); break; case 'R': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_R); break; case 'S': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_S); break; case 'T': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_T); break; case 'U': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_U); break; case 'V': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_V); break; case 'W': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_W); break; case 'X': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_X); break; case 'Y': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_Y); break; case 'Z': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_Z); break; case '`': doType(KeyEvent.VK_BACK_QUOTE); break; case '0': doType(KeyEvent.VK_0); break; case '1': doType(KeyEvent.VK_1); break; case '2': doType(KeyEvent.VK_2); break; case '3': doType(KeyEvent.VK_3); break; case '4': doType(KeyEvent.VK_4); break; case '5': doType(KeyEvent.VK_5); break; case '6': doType(KeyEvent.VK_6); break; case '7': doType(KeyEvent.VK_7); break; case '8': doType(KeyEvent.VK_8); break; case '9': doType(KeyEvent.VK_9); break; case '-': doType(KeyEvent.VK_MINUS); break; case '=': doType(KeyEvent.VK_EQUALS); break; case '~': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_BACK_QUOTE); break; case '!': doType(KeyEvent.VK_EXCLAMATION_MARK); break; case '@': doType(KeyEvent.VK_AT); break; case '#': doType(KeyEvent.VK_NUMBER_SIGN); break; case '$': doType(KeyEvent.VK_DOLLAR); break; case '%': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_5); break; case '^': doType(KeyEvent.VK_CIRCUMFLEX); break; case '&': doType(KeyEvent.VK_AMPERSAND); break; case '*': doType(KeyEvent.VK_ASTERISK); break; case '(': doType(KeyEvent.VK_LEFT_PARENTHESIS); break; case ')': doType(KeyEvent.VK_RIGHT_PARENTHESIS); break; case '_': doType(KeyEvent.VK_UNDERSCORE); break; case '+': doType(KeyEvent.VK_PLUS); break; case '\\t': doType(KeyEvent.VK_TAB); break; case '\\n': doType(KeyEvent.VK_ENTER); break; case '[': doType(KeyEvent.VK_OPEN_BRACKET); break; case ']': doType(KeyEvent.VK_CLOSE_BRACKET); break; case '\\\\': doType(KeyEvent.VK_BACK_SLASH); break; case '{': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_OPEN_BRACKET); break; case '}': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_CLOSE_BRACKET); break; case '|': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_BACK_SLASH); break; case ';': doType(KeyEvent.VK_SEMICOLON); break; case ':': doType(KeyEvent.VK_COLON); break; case '\\'': doType(KeyEvent.VK_QUOTE); break; case '\"': doType(KeyEvent.VK_QUOTEDBL); break; case ',': doType(KeyEvent.VK_COMMA); break; case '<': doType(KeyEvent.VK_LESS); break; case '.': doType(KeyEvent.VK_PERIOD); break; case '>': doType(KeyEvent.VK_GREATER); break; case '/': doType(KeyEvent.VK_SLASH); break; case '?': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_SLASH); break; case ' ': doType(KeyEvent.VK_SPACE); break; default: throw new IllegalArgumentException(\"Cannot type character \" + character); } }\npublic void type(char character) { switch(character) { case 'a': doType(KeyEvent.VK_A); break; case 'b': doType(KeyEvent.VK_B); break; case 'c': doType(KeyEvent.VK_C); break; case 'd': doType(KeyEvent.VK_D); break; case 'e': doType(KeyEvent.VK_E); break; case 'f': doType(KeyEvent.VK_F); break; case 'g': doType(KeyEvent.VK_G); break; case 'h': doType(KeyEvent.VK_H); break; case 'i': doType(KeyEvent.VK_I); break; case 'j': doType(KeyEvent.VK_J); break; case 'k': doType(KeyEvent.VK_K); break; case 'l': doType(KeyEvent.VK_L); break; case 'm': doType(KeyEvent.VK_M); break; case 'n': doType(KeyEvent.VK_N); break; case 'o': doType(KeyEvent.VK_O); break; case 'p': doType(KeyEvent.VK_P); break; case 'q': doType(KeyEvent.VK_Q); break; case 'r': doType(KeyEvent.VK_R); break; case 's': doType(KeyEvent.VK_S); break; case 't': doType(KeyEvent.VK_T); break; case 'u': doType(KeyEvent.VK_U); break; case 'v': doType(KeyEvent.VK_V); break; case 'w': doType(KeyEvent.VK_W); break; case 'x': doType(KeyEvent.VK_X); break; case 'y': doType(KeyEvent.VK_Y); break; case 'z': doType(KeyEvent.VK_Z); break; case 'A': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_A); break; case 'B': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_B); break; case 'C': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_C); break; case 'D': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_D); break; case 'E': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_E); break; case 'F': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_F); break; case 'G': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_G); break; case 'H': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_H); break; case 'I': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_I); break; case 'J': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_J); break; case 'K': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_K); break; case 'L': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_L); break; case 'M': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_M); break; case 'N': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_N); break; case 'O': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_O); break; case 'P': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_P); break; case 'Q': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_Q); break; case 'R': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_R); break; case 'S': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_S); break; case 'T': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_T); break; case 'U': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_U); break; case 'V': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_V); break; case 'W': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_W); break; case 'X': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_X); break; case 'Y': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_Y); break; case 'Z': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_Z); break; case '`': doType(KeyEvent.VK_BACK_QUOTE); break; case '0': doType(KeyEvent.VK_0); break; case '1': doType(KeyEvent.VK_1); break; case '2': doType(KeyEvent.VK_2); break; case '3': doType(KeyEvent.VK_3); break; case '4': doType(KeyEvent.VK_4); break; case '5': doType(KeyEvent.VK_5); break; case '6': doType(KeyEvent.VK_6); break; case '7': doType(KeyEvent.VK_7); break; case '8': doType(KeyEvent.VK_8); break; case '9': doType(KeyEvent.VK_9); break; case '-': doType(KeyEvent.VK_MINUS); break; case '=': doType(KeyEvent.VK_EQUALS); break; case '~': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_BACK_QUOTE); break; case '!': doType(KeyEvent.VK_EXCLAMATION_MARK); break; case '@': doType(KeyEvent.VK_AT); break; case '#': doType(KeyEvent.VK_NUMBER_SIGN); break; case '$': doType(KeyEvent.VK_DOLLAR); break; case '%': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_5); break; case '^': doType(KeyEvent.VK_CIRCUMFLEX); break; case '&': doType(KeyEvent.VK_AMPERSAND); break; case '*': doType(KeyEvent.VK_ASTERISK); break; case '(': doType(KeyEvent.VK_LEFT_PARENTHESIS); break; case ')': doType(KeyEvent.VK_RIGHT_PARENTHESIS); break; case '_': doType(KeyEvent.VK_UNDERSCORE); break; case '+': doType(KeyEvent.VK_PLUS); break; case '\\t': doType(KeyEvent.VK_TAB); break; case '\\n': doType(KeyEvent.VK_ENTER); break; case '[': doType(KeyEvent.VK_OPEN_BRACKET); break; case ']': doType(KeyEvent.VK_CLOSE_BRACKET); break; case '\\\\': doType(KeyEvent.VK_BACK_SLASH); break; case '{': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_OPEN_BRACKET); break; case '}': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_CLOSE_BRACKET); break; case '|': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_BACK_SLASH); break; case ';': doType(KeyEvent.VK_SEMICOLON); break; case ':': doType(KeyEvent.VK_COLON); break; case '\\'': doType(KeyEvent.VK_QUOTE); break; case '\"': doType(KeyEvent.SHIFT_MASK, KeyEvent.VK_QUOTE); break; case ',': doType(KeyEvent.VK_COMMA); break; case '<': doType(KeyEvent.VK_LESS); break; case '.': doType(KeyEvent.VK_PERIOD); break; case '>': doType(KeyEvent.VK_GREATER); break; case '/': doType(KeyEvent.VK_SLASH); break; case '?': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_SLASH); break; case ' ': doType(KeyEvent.VK_SPACE); break; default: throw new IllegalArgumentException(\"Cannot type character \" + character); } }",
                        "max_stars_repo_name": "NA",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "NA",
                        "__cluster__": 162
                },
                {
                        "real_dup": "3"
                }
        ],


        [
                {
                        "id": "pretrain_java_data_18735025",
                        "content": "/// \u53cd\u9988\u5904\nclass feed {\npublic static void main(String[] args) {\nSystem.out.println(\"Hello, welcome feed!\");\n}\n}",
                        "max_stars_repo_name": "IDEAL-YANG/JoinToLearnGitRebase",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "feed.java",
                        "__cluster__": 1409
                },
                {
                        "id": "test_api-misuse-repair-single_data_1410",
                        "content": "public static void main(String[] args) { System.out.println(\"Hello, World!!!!!!!!!\"); }\npublic static void main(String[] args) { System.out.println(\"Hello, World\"); }",
                        "max_stars_repo_name": "NA",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "NA",
                        "__cluster__": 1409
                },
                {
                        "real_dup": 1
                }
        ],


        [
                {
                        "id": "pretrain_java_data_9133794",
                        "content": "class Hello{\npublic static void main(String[] args){\nSystem.out.println(\"Hello Jenkins\");\n}\n}",
                        "max_stars_repo_name": "bhattarairazu/HelloWorldJava",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "HelloWorld.java",
                        "__cluster__": 1409
                },
                {
                        "id": "test_api-misuse-repair-single_data_1410",
                        "content": "public static void main(String[] args) { System.out.println(\"Hello, World!!!!!!!!!\"); }\npublic static void main(String[] args) { System.out.println(\"Hello, World\"); }",
                        "max_stars_repo_name": "NA",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "NA",
                        "__cluster__": 1409
                },
                {
                        "real_dup": 1
                }
        ],


        [
                {
                        "id": "pretrain_java_data_12388792",
                        "content": "public class tutorial1 {\npublic static void main(String[] args) {\nSystem.out.println('Hello Guys');\n}\n}",
                        "max_stars_repo_name": "shreyash14s/OVIDE",
                        "max_stars_count": 6,
                        "max_stars_repo_path": "tutorial/tutorial1.java",
                        "__cluster__": 1409
                },
                {
                        "id": "test_api-misuse-repair-single_data_1410",
                        "content": "public static void main(String[] args) { System.out.println(\"Hello, World!!!!!!!!!\"); }\npublic static void main(String[] args) { System.out.println(\"Hello, World\"); }",
                        "max_stars_repo_name": "NA",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "NA",
                        "__cluster__": 1409
                },
                {
                        "real_dup": 1
                }
        ],


        [
                {
                        "id": "pretrain_java_data_13861387",
                        "content": "public class HelloWorld3 {\n//Some Changes\npublic static void main(String[] args)\n{\nSystem.out.println(\"Hello World\");\n}\n}",
                        "max_stars_repo_name": "Amruta2002/Program",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "HelloWorld3.java",
                        "__cluster__": 1409
                },
                {
                        "id": "test_api-misuse-repair-single_data_1410",
                        "content": "public static void main(String[] args) { System.out.println(\"Hello, World!!!!!!!!!\"); }\npublic static void main(String[] args) { System.out.println(\"Hello, World\"); }",
                        "max_stars_repo_name": "NA",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "NA",
                        "__cluster__": 1409
                },
                {
                        "real_dup": 1
                }
        ],


        [
                {
                        "id": "test_api-misuse-repair-single_data_1410",
                        "content": "public static void main(String[] args) { System.out.println(\"Hello, World!!!!!!!!!\"); }\npublic static void main(String[] args) { System.out.println(\"Hello, World\"); }",
                        "max_stars_repo_name": "NA",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "NA",
                        "__cluster__": 1409
                },
                {
                        "id": "pretrain_java_data_15401864",
                        "content": "public class World\n{\npublic static void main(String[] args)\n{\nSystem.out.println(\"World\");\n}\n}",
                        "max_stars_repo_name": "BazghaHanif/CS625",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "World.java",
                        "__cluster__": 1409
                },
                {
                        "real_dup": 1
                }
        ],


        [
                {
                        "id": "pretrain_java_data_10882219",
                        "content": "package is.tagomor.woothee.crawler;\nimport java.util.Map;\nimport is.tagomor.woothee.AgentCategory;\nimport is.tagomor.woothee.DataSet;\npublic class Crawlers extends AgentCategory {\npublic static boolean challenge(final String ua, final Map<String,String> result) {\nif (ua.indexOf(\"Yahoo\") > -1 ||\nua.indexOf(\"help.yahoo.co.jp/help/jp/\") > -1 ||\nua.indexOf(\"listing.yahoo.co.jp/support/faq/\") > -1 ) {\nif (ua.indexOf(\"compatible; Yahoo! Slurp\") > -1) {\nupdateMap(result, DataSet.get(\"YahooSlurp\"));\nreturn true;\n}\nelse if (ua.indexOf(\"YahooFeedSeekerJp\") > -1 || ua.indexOf(\"YahooFeedSeekerBetaJp\") > -1) {\nupdateMap(result, DataSet.get(\"YahooJP\"));\nreturn true;\n}\nelse if (ua.indexOf(\"crawler (http://listing.yahoo.co.jp/support/faq/\") > -1 ||\nua.indexOf(\"crawler (http://help.yahoo.co.jp/help/jp/\") > -1) {\nupdateMap(result, DataSet.get(\"YahooJP\"));\nreturn true;\n}\nelse if (ua.indexOf(\"Y!J-BRZ/YATSHA crawler\") > -1 ||\nua.indexOf(\"Y!J-BRY/YATSH crawler\") > -1) {\nupdateMap(result, DataSet.get(\"YahooJP\"));\nreturn true;\n}\nelse if (ua.indexOf(\"Yahoo Pipes\") > -1) {\nupdateMap(result, DataSet.get(\"YahooPipes\"));\nreturn true;\n}\n}\nelse if (ua.indexOf(\"msnbot\") > -1) {\nupdateMap(result, DataSet.get(\"msnbot\"));\nreturn true;\n}\nelse if (ua.indexOf(\"bingbot\") > -1) {\nif (ua.indexOf(\"compatible; bingbot\") > -1) {\nupdateMap(result, DataSet.get(\"bingbot\"));\nreturn true;\n}\n}\nelse if (ua.indexOf(\"BingPreview\") > -1) {\nupdateMap(result, DataSet.get(\"BingPreview\"));\nreturn true;\n}\nelse if (ua.indexOf(\"Baidu\") > -1) {\nif (ua.indexOf(\"compatible; Baiduspider\") > -1 || ua.indexOf(\"Baiduspider+\") > -1 || ua.indexOf(\"Baiduspider-image+\") > -1) {\nupdateMap(result, DataSet.get(\"Baiduspider\"));\nreturn true;\n}\n}\nelse if (ua.indexOf(\"Yeti\") > -1) {\nif (ua.indexOf(\"http://help.naver.com/robots\") > -1 || ua.indexOf(\"http://help.naver.com/support/robots.html\") > -1 || ua.indexOf(\"http://naver.me/bot\") > -1) {\nupdateMap(result, DataSet.get(\"Yeti\"));\nreturn true;\n}\n}\nelse if (ua.indexOf(\"FeedBurner/\") > -1) {\nupdateMap(result, DataSet.get(\"FeedBurner\"));\nreturn true;\n}\nelse if (ua.indexOf(\"facebookexternalhit\") > -1) {\nupdateMap(result, DataSet.get(\"facebook\"));\nreturn true;\n}\nelse if (ua.indexOf(\"Twitterbot/\") > -1) {\nupdateMap(result, DataSet.get(\"twitter\"));\nreturn true;\n}\nelse if (ua.indexOf(\"ichiro\") > -1) {\nif (ua.indexOf(\"http://help.goo.ne.jp/door/crawler.html\") > -1 || ua.indexOf(\"compatible; ichiro/mobile goo;\") > -1) {\nupdateMap(result, DataSet.get(\"goo\"));\nreturn true;\n}\n}\nelse if (ua.indexOf(\"gooblogsearch/\") > -1) {\nupdateMap(result, DataSet.get(\"goo\"));\nreturn true;\n}\nelse if (ua.indexOf(\"Apple-PubSub\") > -1) {\nupdateMap(result, DataSet.get(\"ApplePubSub\"));\nreturn true;\n}\nelse if (ua.indexOf(\"(www.radian6.com/crawler)\") > -1) {\nupdateMap(result, DataSet.get(\"radian6\"));\nreturn true;\n}\nelse if (ua.indexOf(\"Genieo/\") > -1) {\nupdateMap(result, DataSet.get(\"Genieo\"));\nreturn true;\n}\nelse if (ua.indexOf(\"labs.topsy.com/butterfly/\") > -1) {\nupdateMap(result, DataSet.get(\"topsyButterfly\"));\nreturn true;\n}\nelse if (ua.indexOf(\"rogerbot/1.0 (http://www.seomoz.org/dp/rogerbot\") > -1) {\nupdateMap(result, DataSet.get(\"rogerbot\"));\nreturn true;\n}\nelse if (ua.indexOf(\"compatible; AhrefsBot/\") > -1) {\nupdateMap(result, DataSet.get(\"AhrefsBot\"));\nreturn true;\n}\nelse if (ua.indexOf(\"livedoor FeedFetcher\") > -1 || ua.indexOf(\"Fastladder FeedFetcher\") > -1) {\nupdateMap(result, DataSet.get(\"livedoorFeedFetcher\"));\nreturn true;\n}\nelse if (ua.indexOf(\"Hatena \") > -1) {\nif (ua.indexOf(\"<NAME>\") > -1 || ua.indexOf(\"Hatena Pagetitle Agent\") > -1 || ua.indexOf(\"<NAME>\") > -1) {\nupdateMap(result, DataSet.get(\"Hatena\"));\nreturn true;\n}\n}\nelse if (ua.indexOf(\"mixi-check\") > -1 || ua.indexOf(\"mixi-crawler\") > -1 || ua.indexOf(\"mixi-news-crawler\") > -1) {\nupdateMap(result, DataSet.get(\"mixi\"));\nreturn true;\n}\nelse if (ua.indexOf(\"Indy Library\") > -1) {\nif (ua.indexOf(\"compatible; Indy Library\") > -1) {\nupdateMap(result, DataSet.get(\"IndyLibrary\"));\nreturn true;\n}\n}\nelse if (ua.indexOf(\"trendictionbot\") > -1) {\nupdateMap(result, DataSet.get(\"trendictionbot\"));\nreturn true;\n}\nreturn false;\n}\n}",
                        "max_stars_repo_name": "OBSLabs/woothee-java",
                        "max_stars_count": 57,
                        "max_stars_repo_path": "src/main/java/is/tagomor/woothee/crawler/Crawlers.java",
                        "__cluster__": 4939
                },
                {
                        "id": "test_api-misuse-repair-single_data_4940",
                        "content": "public static boolean challenge(final String ua, final Map<String, String> result) { if (ua.indexOf(\"Yahoo\") > -1 || ua.indexOf(\"help.yahoo.co.jp/help/jp/\") > -1 || ua.indexOf(\"listing.yahoo.co.jp/support/faq/\") > -1) { if (ua.indexOf(\"compatible; Yahoo! Slurp\") > -1) { updateMap(result, DataSet.get(\"YahooSlurp\")); return true; } else if (ua.indexOf(\"YahooFeedSeekerJp\") > -1 || ua.indexOf(\"YahooFeedSeekerBetaJp\") > -1) { updateMap(result, DataSet.get(\"YahooJP\")); return true; } else if (ua.indexOf(\"crawler (http://listing.yahoo.co.jp/support/faq/\") > -1 || ua.indexOf(\"crawler (http://help.yahoo.co.jp/help/jp/\") > -1) { updateMap(result, DataSet.get(\"YahooJP\")); return true; } else if (ua.indexOf(\"Y!J-BRZ/YATSHA crawler\") > -1 || ua.indexOf(\"Y!J-BRY/YATSH crawler\") > -1) { updateMap(result, DataSet.get(\"YahooJP\")); return true; } else if (ua.indexOf(\"Yahoo Pipes\") > -1) { updateMap(result, DataSet.get(\"YahooPipes\")); return true; } } else if (ua.indexOf(\"msnbot\") > -1) { updateMap(result, DataSet.get(\"msnbot\")); return true; } else if (ua.indexOf(\"bingbot\") > -1) { if (ua.indexOf(\"compatible; bingbot\") > -1) { updateMap(result, DataSet.get(\"bingbot\")); return true; } } else if (ua.indexOf(\"BingPreview\") > -1) { updateMap(result, DataSet.get(\"BingPreview\")); return true; } else if (ua.indexOf(\"Baidu\") > -1) { if (ua.indexOf(\"compatible; Baiduspider\") > -1 || ua.indexOf(\"Baiduspider+\") > -1 || ua.indexOf(\"Baiduspider-image+\") > -1) { updateMap(result, DataSet.get(\"Baiduspider\")); return true; } } else if (ua.indexOf(\"Yeti\") > -1) { if (ua.indexOf(\"http://help.naver.com/robots\") > -1 || ua.indexOf(\"http://help.naver.com/support/robots.html\") > -1 || ua.indexOf(\"http://naver.me/bot\") > -1) { updateMap(result, DataSet.get(\"Yeti\")); return true; } } else if (ua.indexOf(\"FeedBurner/\") > -1) { updateMap(result, DataSet.get(\"FeedBurner\")); return true; } else if (ua.indexOf(\"facebookexternalhit\") > -1) { updateMap(result, DataSet.get(\"facebook\")); return true; } else if (ua.indexOf(\"Twitterbot/\") > -1) { updateMap(result, DataSet.get(\"twitter\")); return true; } else if (ua.indexOf(\"ichiro\") > -1) { if (ua.indexOf(\"http://help.goo.ne.jp/door/crawler.html\") > -1 || ua.indexOf(\"compatible; ichiro/mobile goo;\") > -1) { updateMap(result, DataSet.get(\"goo\")); return true; } } else if (ua.indexOf(\"gooblogsearch/\") > -1) { updateMap(result, DataSet.get(\"goo\")); return true; } else if (ua.indexOf(\"Apple-PubSub\") > -1) { updateMap(result, DataSet.get(\"ApplePubSub\")); return true; } else if (ua.indexOf(\"(www.radian6.com/crawler)\") > -1) { updateMap(result, DataSet.get(\"radian6\")); return true; } else if (ua.indexOf(\"Genieo/\") > -1) { updateMap(result, DataSet.get(\"Genieo\")); return true; } else if (ua.indexOf(\"labs.topsy.com/butterfly/\") > -1) { updateMap(result, DataSet.get(\"topsyButterfly\")); return true; } else if (ua.indexOf(\"rogerbot/1.0 (http://www.seomoz.org/dp/rogerbot\") > -1) { updateMap(result, DataSet.get(\"rogerbot\")); return true; } else if (ua.indexOf(\"compatible; AhrefsBot/\") > -1) { updateMap(result, DataSet.get(\"AhrefsBot\")); return true; } else if (ua.indexOf(\"livedoor FeedFetcher\") > -1 || ua.indexOf(\"Fastladder FeedFetcher\") > -1) { updateMap(result, DataSet.get(\"livedoorFeedFetcher\")); return true; } else if (ua.indexOf(\"Hatena \") > -1) { if (ua.indexOf(\"Hatena Antenna\") > -1 || ua.indexOf(\"Hatena Pagetitle Agent\") > -1 || ua.indexOf(\"Hatena Diary RSS\") > -1) { updateMap(result, DataSet.get(\"Hatena\")); return true; } } else if (ua.indexOf(\"mixi-check\") > -1 || ua.indexOf(\"mixi-crawler\") > -1 || ua.indexOf(\"mixi-news-crawler\") > -1) { updateMap(result, DataSet.get(\"mixi\")); return true; } else if (ua.indexOf(\"Indy Library\") > -1) { if (ua.indexOf(\"compatible; Indy Library\") > -1) { updateMap(result, DataSet.get(\"IndyLibrary\")); return true; } } else if (ua.indexOf(\"trendictionbot\") > -1) { updateMap(result, DataSet.get(\"trendiction\")); return true; } return false; }\npublic static boolean challenge(final String ua, final Map<String, String> result) { if (ua.indexOf(\"Yahoo\") > -1 || ua.indexOf(\"help.yahoo.co.jp/help/jp/\") > -1 || ua.indexOf(\"listing.yahoo.co.jp/support/faq/\") > -1) { if (ua.indexOf(\"compatible; Yahoo! Slurp\") > -1) { updateMap(result, DataSet.get(\"YahooSlurp\")); return true; } else if (ua.indexOf(\"YahooFeedSeekerJp\") > -1 || ua.indexOf(\"YahooFeedSeekerBetaJp\") > -1) { updateMap(result, DataSet.get(\"YahooJP\")); return true; } else if (ua.indexOf(\"crawler (http://listing.yahoo.co.jp/support/faq/\") > -1 || ua.indexOf(\"crawler (http://help.yahoo.co.jp/help/jp/\") > -1) { updateMap(result, DataSet.get(\"YahooJP\")); return true; } else if (ua.indexOf(\"Y!J-BRZ/YATSHA crawler\") > -1 || ua.indexOf(\"Y!J-BRY/YATSH crawler\") > -1) { updateMap(result, DataSet.get(\"YahooJP\")); return true; } else if (ua.indexOf(\"Yahoo Pipes\") > -1) { updateMap(result, DataSet.get(\"YahooPipes\")); return true; } } else if (ua.indexOf(\"msnbot\") > -1) { updateMap(result, DataSet.get(\"msnbot\")); return true; } else if (ua.indexOf(\"bingbot\") > -1) { if (ua.indexOf(\"compatible; bingbot\") > -1) { updateMap(result, DataSet.get(\"bingbot\")); return true; } } else if (ua.indexOf(\"BingPreview\") > -1) { updateMap(result, DataSet.get(\"BingPreview\")); return true; } else if (ua.indexOf(\"Baidu\") > -1) { if (ua.indexOf(\"compatible; Baiduspider\") > -1 || ua.indexOf(\"Baiduspider+\") > -1 || ua.indexOf(\"Baiduspider-image+\") > -1) { updateMap(result, DataSet.get(\"Baiduspider\")); return true; } } else if (ua.indexOf(\"Yeti\") > -1) { if (ua.indexOf(\"http://help.naver.com/robots\") > -1 || ua.indexOf(\"http://help.naver.com/support/robots.html\") > -1 || ua.indexOf(\"http://naver.me/bot\") > -1) { updateMap(result, DataSet.get(\"Yeti\")); return true; } } else if (ua.indexOf(\"FeedBurner/\") > -1) { updateMap(result, DataSet.get(\"FeedBurner\")); return true; } else if (ua.indexOf(\"facebookexternalhit\") > -1) { updateMap(result, DataSet.get(\"facebook\")); return true; } else if (ua.indexOf(\"Twitterbot/\") > -1) { updateMap(result, DataSet.get(\"twitter\")); return true; } else if (ua.indexOf(\"ichiro\") > -1) { if (ua.indexOf(\"http://help.goo.ne.jp/door/crawler.html\") > -1 || ua.indexOf(\"compatible; ichiro/mobile goo;\") > -1) { updateMap(result, DataSet.get(\"goo\")); return true; } } else if (ua.indexOf(\"gooblogsearch/\") > -1) { updateMap(result, DataSet.get(\"goo\")); return true; } else if (ua.indexOf(\"Apple-PubSub\") > -1) { updateMap(result, DataSet.get(\"ApplePubSub\")); return true; } else if (ua.indexOf(\"(www.radian6.com/crawler)\") > -1) { updateMap(result, DataSet.get(\"radian6\")); return true; } else if (ua.indexOf(\"Genieo/\") > -1) { updateMap(result, DataSet.get(\"Genieo\")); return true; } else if (ua.indexOf(\"labs.topsy.com/butterfly/\") > -1) { updateMap(result, DataSet.get(\"topsyButterfly\")); return true; } else if (ua.indexOf(\"rogerbot/1.0 (http://www.seomoz.org/dp/rogerbot\") > -1) { updateMap(result, DataSet.get(\"rogerbot\")); return true; } else if (ua.indexOf(\"compatible; AhrefsBot/\") > -1) { updateMap(result, DataSet.get(\"AhrefsBot\")); return true; } else if (ua.indexOf(\"livedoor FeedFetcher\") > -1 || ua.indexOf(\"Fastladder FeedFetcher\") > -1) { updateMap(result, DataSet.get(\"livedoorFeedFetcher\")); return true; } else if (ua.indexOf(\"Hatena \") > -1) { if (ua.indexOf(\"Hatena Antenna\") > -1 || ua.indexOf(\"Hatena Pagetitle Agent\") > -1 || ua.indexOf(\"Hatena Diary RSS\") > -1) { updateMap(result, DataSet.get(\"Hatena\")); return true; } } else if (ua.indexOf(\"mixi-check\") > -1 || ua.indexOf(\"mixi-crawler\") > -1 || ua.indexOf(\"mixi-news-crawler\") > -1) { updateMap(result, DataSet.get(\"mixi\")); return true; } else if (ua.indexOf(\"Indy Library\") > -1) { if (ua.indexOf(\"compatible; Indy Library\") > -1) { updateMap(result, DataSet.get(\"IndyLibrary\")); return true; } } else if (ua.indexOf(\"trendictionbot\") > -1) { updateMap(result, DataSet.get(\"trendictionbot\")); return true; } return false; }",
                        "max_stars_repo_name": "NA",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "NA",
                        "__cluster__": 4939
                },
                {
                        "real_dup": "3"
                }
        ],


        [
                {
                        "id": "pretrain_java_data_1435572",
                        "content": "\npublic class byeworld{\npublic static void main(String[] args){\nSystem.out.println(\"Bye World\");\n}\n}",
                        "max_stars_repo_name": "Shrinitha1724/testrep",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "byeworld.java",
                        "__cluster__": 1409
                },
                {
                        "id": "test_api-misuse-repair-single_data_1410",
                        "content": "public static void main(String[] args) { System.out.println(\"Hello, World!!!!!!!!!\"); }\npublic static void main(String[] args) { System.out.println(\"Hello, World\"); }",
                        "max_stars_repo_name": "NA",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "NA",
                        "__cluster__": 1409
                },
                {
                        "real_dup": 1
                }
        ],


        [
                {
                        "id": "pretrain_java_data_6284509",
                        "content": "package com.rilixtech.widget.countrycodepicker;\nimport android.content.Context;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n/**\n* Util related to Country\n* Created by joielechong 11 May 2017.\n*\n* Simplify name\n* Updated by joielechong 16 May 2017.\n*/\npublic class CountryUtils {\nprivate static List<Country> countries;\nprivate static Map<String, List<String>> timeZoneAndCountryISOs;\n/**\n* Get all countries\n*\n* @param context caller context\n* @return List of Country\n*/\nstatic List<Country> getAllCountries(Context context) {\nif (countries != null) return countries;\ncountries = new ArrayList<>();\ncountries.add(new Country(context.getString(R.string.country_afghanistan_code),\ncontext.getString(R.string.country_afghanistan_number),\ncontext.getString(R.string.country_afghanistan_name)));\ncountries.add(new Country(context.getString(R.string.country_albania_code),\ncontext.getString(R.string.country_albania_number),\ncontext.getString(R.string.country_albania_name)));\ncountries.add(new Country(context.getString(R.string.country_algeria_code),\ncontext.getString(R.string.country_algeria_number),\ncontext.getString(R.string.country_algeria_name)));\ncountries.add(new Country(context.getString(R.string.country_andorra_code),\ncontext.getString(R.string.country_andorra_number),\ncontext.getString(R.string.country_andorra_name)));\ncountries.add(new Country(context.getString(R.string.country_angola_code),\ncontext.getString(R.string.country_angola_number),\ncontext.getString(R.string.country_angola_name)));\ncountries.add(new Country(context.getString(R.string.country_anguilla_code),\ncontext.getString(R.string.country_anguilla_number),\ncontext.getString(R.string.country_anguilla_name)));\ncountries.add(new Country(context.getString(R.string.country_antarctica_code),\ncontext.getString(R.string.country_antarctica_number),\ncontext.getString(R.string.country_antarctica_name)));\ncountries.add(new Country(context.getString(R.string.country_antigua_and_barbuda_code),\ncontext.getString(R.string.country_antigua_and_barbuda_number),\ncontext.getString(R.string.country_antigua_and_barbuda_name)));\ncountries.add(new Country(context.getString(R.string.country_argentina_code),\ncontext.getString(R.string.country_argentina_number),\ncontext.getString(R.string.country_argentina_name)));\ncountries.add(new Country(context.getString(R.string.country_armenia_code),\ncontext.getString(R.string.country_armenia_number),\ncontext.getString(R.string.country_armenia_name)));\ncountries.add(new Country(context.getString(R.string.country_aruba_code),\ncontext.getString(R.string.country_aruba_number),\ncontext.getString(R.string.country_aruba_name)));\ncountries.add(new Country(context.getString(R.string.country_australia_code),\ncontext.getString(R.string.country_australia_number),\ncontext.getString(R.string.country_australia_name)));\ncountries.add(new Country(context.getString(R.string.country_austria_code),\ncontext.getString(R.string.country_austria_number),\ncontext.getString(R.string.country_austria_name)));\ncountries.add(new Country(context.getString(R.string.country_azerbaijan_code),\ncontext.getString(R.string.country_azerbaijan_number),\ncontext.getString(R.string.country_azerbaijan_name)));\ncountries.add(new Country(context.getString(R.string.country_bahamas_code),\ncontext.getString(R.string.country_bahamas_number),\ncontext.getString(R.string.country_bahamas_name)));\ncountries.add(new Country(context.getString(R.string.country_bahrain_code),\ncontext.getString(R.string.country_bahrain_number),\ncontext.getString(R.string.country_bahrain_name)));\ncountries.add(new Country(context.getString(R.string.country_bangladesh_code),\ncontext.getString(R.string.country_bangladesh_number),\ncontext.getString(R.string.country_bangladesh_name)));\ncountries.add(new Country(context.getString(R.string.country_barbados_code),\ncontext.getString(R.string.country_barbados_number),\ncontext.getString(R.string.country_barbados_name)));\ncountries.add(new Country(context.getString(R.string.country_belarus_code),\ncontext.getString(R.string.country_belarus_number),\ncontext.getString(R.string.country_belarus_name)));\ncountries.add(new Country(context.getString(R.string.country_belgium_code),\ncontext.getString(R.string.country_belgium_number),\ncontext.getString(R.string.country_belgium_name)));\ncountries.add(new Country(context.getString(R.string.country_belize_code),\ncontext.getString(R.string.country_belize_number),\ncontext.getString(R.string.country_belize_name)));\ncountries.add(new Country(context.getString(R.string.country_benin_code),\ncontext.getString(R.string.country_benin_number),\ncontext.getString(R.string.country_benin_name)));\ncountries.add(new Country(context.getString(R.string.country_bermuda_code),\ncontext.getString(R.string.country_bermuda_number),\ncontext.getString(R.string.country_bermuda_name)));\ncountries.add(new Country(context.getString(R.string.country_bhutan_code),\ncontext.getString(R.string.country_bhutan_number),\ncontext.getString(R.string.country_bhutan_name)));\ncountries.add(new Country(context.getString(R.string.country_bolivia_code),\ncontext.getString(R.string.country_bolivia_number),\ncontext.getString(R.string.country_bolivia_name)));\ncountries.add(new Country(context.getString(R.string.country_bosnia_and_herzegovina_code),\ncontext.getString(R.string.country_bosnia_and_herzegovina_number),\ncontext.getString(R.string.country_bosnia_and_herzegovina_name)));\ncountries.add(new Country(context.getString(R.string.country_botswana_code),\ncontext.getString(R.string.country_botswana_number),\ncontext.getString(R.string.country_botswana_name)));\ncountries.add(new Country(context.getString(R.string.country_brazil_code),\ncontext.getString(R.string.country_brazil_number),\ncontext.getString(R.string.country_brazil_name)));\ncountries.add(new Country(context.getString(R.string.country_british_virgin_islands_code),\ncontext.getString(R.string.country_british_virgin_islands_number),\ncontext.getString(R.string.country_british_virgin_islands_name)));\ncountries.add(new Country(context.getString(R.string.country_brunei_darussalam_code),\ncontext.getString(R.string.country_brunei_darussalam_number),\ncontext.getString(R.string.country_brunei_darussalam_name)));\ncountries.add(new Country(context.getString(R.string.country_bulgaria_code),\ncontext.getString(R.string.country_bulgaria_number),\ncontext.getString(R.string.country_bulgaria_name)));\ncountries.add(new Country(context.getString(R.string.country_burkina_faso_code),\ncontext.getString(R.string.country_burkina_faso_number),\ncontext.getString(R.string.country_burkina_faso_name)));\ncountries.add(new Country(context.getString(R.string.country_burundi_code),\ncontext.getString(R.string.country_burundi_number),\ncontext.getString(R.string.country_burundi_name)));\ncountries.add(new Country(context.getString(R.string.country_cambodia_code),\ncontext.getString(R.string.country_cambodia_number),\ncontext.getString(R.string.country_cambodia_name)));\ncountries.add(new Country(context.getString(R.string.country_cameroon_code),\ncontext.getString(R.string.country_cameroon_number),\ncontext.getString(R.string.country_cameroon_name)));\ncountries.add(new Country(context.getString(R.string.country_canada_code),\ncontext.getString(R.string.country_canada_number),\ncontext.getString(R.string.country_canada_name)));\ncountries.add(new Country(context.getString(R.string.country_cape_verde_code),\ncontext.getString(R.string.country_cape_verde_number),\ncontext.getString(R.string.country_cape_verde_name)));\ncountries.add(new Country(context.getString(R.string.country_cayman_islands_code),\ncontext.getString(R.string.country_cayman_islands_number),\ncontext.getString(R.string.country_cayman_islands_name)));\ncountries.add(new Country(context.getString(R.string.country_central_african_republic_code),\ncontext.getString(R.string.country_central_african_republic_number),\ncontext.getString(R.string.country_central_african_republic_name)));\ncountries.add(new Country(context.getString(R.string.country_chad_code),\ncontext.getString(R.string.country_chad_number),\ncontext.getString(R.string.country_chad_name)));\ncountries.add(new Country(context.getString(R.string.country_chile_code),\ncontext.getString(R.string.country_chile_number),\ncontext.getString(R.string.country_chile_name)));\ncountries.add(new Country(context.getString(R.string.country_china_code),\ncontext.getString(R.string.country_china_number),\ncontext.getString(R.string.country_china_name)));\ncountries.add(new Country(context.getString(R.string.country_christmas_island_code),\ncontext.getString(R.string.country_christmas_island_number),\ncontext.getString(R.string.country_christmas_island_name)));\ncountries.add(new Country(context.getString(R.string.country_cocos_keeling_islands_code),\ncontext.getString(R.string.country_cocos_keeling_islands_number),\ncontext.getString(R.string.country_cocos_keeling_islands_name)));\ncountries.add(new Country(context.getString(R.string.country_colombia_code),\ncontext.getString(R.string.country_colombia_number),\ncontext.getString(R.string.country_colombia_name)));\ncountries.add(new Country(context.getString(R.string.country_comoros_code),\ncontext.getString(R.string.country_comoros_number),\ncontext.getString(R.string.country_comoros_name)));\ncountries.add(new Country(context.getString(R.string.country_congo_code),\ncontext.getString(R.string.country_congo_number),\ncontext.getString(R.string.country_congo_name)));\ncountries.add(\nnew Country(context.getString(R.string.country_the_democratic_republic_of_congo_code),\ncontext.getString(R.string.country_the_democratic_republic_of_congo_number),\ncontext.getString(R.string.country_the_democratic_republic_of_congo_name)));\ncountries.add(new Country(context.getString(R.string.country_cook_islands_code),\ncontext.getString(R.string.country_cook_islands_number),\ncontext.getString(R.string.country_cook_islands_name)));\ncountries.add(new Country(context.getString(R.string.country_costa_rica_code),\ncontext.getString(R.string.country_costa_rica_number),\ncontext.getString(R.string.country_costa_rica_name)));\ncountries.add(new Country(context.getString(R.string.country_croatia_code),\ncontext.getString(R.string.country_croatia_number),\ncontext.getString(R.string.country_croatia_name)));\ncountries.add(new Country(context.getString(R.string.country_cuba_code),\ncontext.getString(R.string.country_cuba_number),\ncontext.getString(R.string.country_cuba_name)));\ncountries.add(new Country(context.getString(R.string.country_cyprus_code),\ncontext.getString(R.string.country_cyprus_number),\ncontext.getString(R.string.country_cyprus_name)));\ncountries.add(new Country(context.getString(R.string.country_czech_republic_code),\ncontext.getString(R.string.country_czech_republic_number),\ncontext.getString(R.string.country_czech_republic_name)));\ncountries.add(new Country(context.getString(R.string.country_denmark_code),\ncontext.getString(R.string.country_denmark_number),\ncontext.getString(R.string.country_denmark_name)));\ncountries.add(new Country(context.getString(R.string.country_djibouti_code),\ncontext.getString(R.string.country_djibouti_number),\ncontext.getString(R.string.country_djibouti_name)));\ncountries.add(new Country(context.getString(R.string.country_dominica_code),\ncontext.getString(R.string.country_dominica_number),\ncontext.getString(R.string.country_dominica_name)));\ncountries.add(new Country(context.getString(R.string.country_dominican_republic_code),\ncontext.getString(R.string.country_dominican_republic_number),\ncontext.getString(R.string.country_dominican_republic_name)));\ncountries.add(new Country(context.getString(R.string.country_timor_leste_code),\ncontext.getString(R.string.country_timor_leste_number),\ncontext.getString(R.string.country_timor_leste_name)));\ncountries.add(new Country(context.getString(R.string.country_ecuador_code),\ncontext.getString(R.string.country_ecuador_number),\ncontext.getString(R.string.country_ecuador_name)));\ncountries.add(new Country(context.getString(R.string.country_egypt_code),\ncontext.getString(R.string.country_egypt_number),\ncontext.getString(R.string.country_egypt_name)));\ncountries.add(new Country(context.getString(R.string.country_el_salvador_code),\ncontext.getString(R.string.country_el_salvador_number),\ncontext.getString(R.string.country_el_salvador_name)));\ncountries.add(new Country(context.getString(R.string.country_equatorial_guinea_code),\ncontext.getString(R.string.country_equatorial_guinea_number),\ncontext.getString(R.string.country_equatorial_guinea_name)));\ncountries.add(new Country(context.getString(R.string.country_eritrea_code),\ncontext.getString(R.string.country_eritrea_number),\ncontext.getString(R.string.country_eritrea_name)));\ncountries.add(new Country(context.getString(R.string.country_estonia_code),\ncontext.getString(R.string.country_estonia_number),\ncontext.getString(R.string.country_estonia_name)));\ncountries.add(new Country(context.getString(R.string.country_ethiopia_code),\ncontext.getString(R.string.country_ethiopia_number),\ncontext.getString(R.string.country_ethiopia_name)));\ncountries.add(new Country(context.getString(R.string.country_falkland_islands_malvinas_code),\ncontext.getString(R.string.country_falkland_islands_malvinas_number),\ncontext.getString(R.string.country_falkland_islands_malvinas_name)));\ncountries.add(new Country(context.getString(R.string.country_faroe_islands_code),\ncontext.getString(R.string.country_faroe_islands_number),\ncontext.getString(R.string.country_faroe_islands_name)));\ncountries.add(new Country(context.getString(R.string.country_fiji_code),\ncontext.getString(R.string.country_fiji_number),\ncontext.getString(R.string.country_fiji_name)));\ncountries.add(new Country(context.getString(R.string.country_finland_code),\ncontext.getString(R.string.country_finland_number),\ncontext.getString(R.string.country_finland_name)));\ncountries.add(new Country(context.getString(R.string.country_france_code),\ncontext.getString(R.string.country_france_number),\ncontext.getString(R.string.country_france_name)));\ncountries.add(new Country(context.getString(R.string.country_french_guyana_code),\ncontext.getString(R.string.country_french_guyana_number),\ncontext.getString(R.string.country_french_guyana_name)));\ncountries.add(new Country(context.getString(R.string.country_french_polynesia_code),\ncontext.getString(R.string.country_french_polynesia_number),\ncontext.getString(R.string.country_french_polynesia_name)));\ncountries.add(new Country(context.getString(R.string.country_gabon_code),\ncontext.getString(R.string.country_gabon_number),\ncontext.getString(R.string.country_gabon_name)));\ncountries.add(new Country(context.getString(R.string.country_gambia_code),\ncontext.getString(R.string.country_gambia_number),\ncontext.getString(R.string.country_gambia_name)));\ncountries.add(new Country(context.getString(R.string.country_georgia_code),\ncontext.getString(R.string.country_georgia_number),\ncontext.getString(R.string.country_georgia_name)));\ncountries.add(new Country(context.getString(R.string.country_germany_code),\ncontext.getString(R.string.country_germany_number),\ncontext.getString(R.string.country_germany_name)));\ncountries.add(new Country(context.getString(R.string.country_ghana_code),\ncontext.getString(R.string.country_ghana_number),\ncontext.getString(R.string.country_ghana_name)));\ncountries.add(new Country(context.getString(R.string.country_gibraltar_code),\ncontext.getString(R.string.country_gibraltar_number),\ncontext.getString(R.string.country_gibraltar_name)));\ncountries.add(new Country(context.getString(R.string.country_greece_code),\ncontext.getString(R.string.country_greece_number),\ncontext.getString(R.string.country_greece_name)));\ncountries.add(new Country(context.getString(R.string.country_greenland_code),\ncontext.getString(R.string.country_greenland_number),\ncontext.getString(R.string.country_greenland_name)));\ncountries.add(new Country(context.getString(R.string.country_grenada_code),\ncontext.getString(R.string.country_grenada_number),\ncontext.getString(R.string.country_grenada_name)));\ncountries.add(new Country(context.getString(R.string.country_guatemala_code),\ncontext.getString(R.string.country_guatemala_number),\ncontext.getString(R.string.country_guatemala_name)));\ncountries.add(new Country(context.getString(R.string.country_guinea_code),\ncontext.getString(R.string.country_guinea_number),\ncontext.getString(R.string.country_guinea_name)));\ncountries.add(new Country(context.getString(R.string.country_guinea_bissau_code),\ncontext.getString(R.string.country_guinea_bissau_number),\ncontext.getString(R.string.country_guinea_bissau_name)));\ncountries.add(new Country(context.getString(R.string.country_guyana_code),\ncontext.getString(R.string.country_guyana_number),\ncontext.getString(R.string.country_guyana_name)));\ncountries.add(new Country(context.getString(R.string.country_haiti_code),\ncontext.getString(R.string.country_haiti_number),\ncontext.getString(R.string.country_haiti_name)));\ncountries.add(new Country(context.getString(R.string.country_honduras_code),\ncontext.getString(R.string.country_honduras_number),\ncontext.getString(R.string.country_honduras_name)));\ncountries.add(new Country(context.getString(R.string.country_hong_kong_code),\ncontext.getString(R.string.country_hong_kong_number),\ncontext.getString(R.string.country_hong_kong_name)));\ncountries.add(new Country(context.getString(R.string.country_hungary_code),\ncontext.getString(R.string.country_hungary_number),\ncontext.getString(R.string.country_hungary_name)));\ncountries.add(new Country(context.getString(R.string.country_iceland_code),\ncontext.getString(R.string.country_iceland_number),\ncontext.getString(R.string.country_iceland_name)));\ncountries.add(new Country(context.getString(R.string.country_india_code),\ncontext.getString(R.string.country_india_number),\ncontext.getString(R.string.country_india_name)));\ncountries.add(new Country(context.getString(R.string.country_indonesia_code),\ncontext.getString(R.string.country_indonesia_number),\ncontext.getString(R.string.country_indonesia_name)));\ncountries.add(new Country(context.getString(R.string.country_iran_code),\ncontext.getString(R.string.country_iran_number),\ncontext.getString(R.string.country_iran_name)));\ncountries.add(new Country(context.getString(R.string.country_iraq_code),\ncontext.getString(R.string.country_iraq_number),\ncontext.getString(R.string.country_iraq_name)));\ncountries.add(new Country(context.getString(R.string.country_ireland_code),\ncontext.getString(R.string.country_ireland_number),\ncontext.getString(R.string.country_ireland_name)));\ncountries.add(new Country(context.getString(R.string.country_isle_of_man_code),\ncontext.getString(R.string.country_isle_of_man_number),\ncontext.getString(R.string.country_isle_of_man_name)));\ncountries.add(new Country(context.getString(R.string.country_israel_code),\ncontext.getString(R.string.country_israel_number),\ncontext.getString(R.string.country_israel_name)));\ncountries.add(new Country(context.getString(R.string.country_italy_code),\ncontext.getString(R.string.country_italy_number),\ncontext.getString(R.string.country_italy_name)));\ncountries.add(new Country(context.getString(R.string.country_cote_d_ivoire_code),\ncontext.getString(R.string.country_cote_d_ivoire_number),\ncontext.getString(R.string.country_cote_d_ivoire_name)));\ncountries.add(new Country(context.getString(R.string.country_jamaica_code),\ncontext.getString(R.string.country_jamaica_number),\ncontext.getString(R.string.country_jamaica_name)));\ncountries.add(new Country(context.getString(R.string.country_japan_code),\ncontext.getString(R.string.country_japan_number),\ncontext.getString(R.string.country_japan_name)));\ncountries.add(new Country(context.getString(R.string.country_jordan_code),\ncontext.getString(R.string.country_jordan_number),\ncontext.getString(R.string.country_jordan_name)));\ncountries.add(new Country(context.getString(R.string.country_kazakhstan_code),\ncontext.getString(R.string.country_kazakhstan_number),\ncontext.getString(R.string.country_kazakhstan_name)));\ncountries.add(new Country(context.getString(R.string.country_kenya_code),\ncontext.getString(R.string.country_kenya_number),\ncontext.getString(R.string.country_kenya_name)));\ncountries.add(new Country(context.getString(R.string.country_kiribati_code),\ncontext.getString(R.string.country_kiribati_number),\ncontext.getString(R.string.country_kiribati_name)));\ncountries.add(new Country(context.getString(R.string.country_kosovo_code),\ncontext.getString(R.string.country_kosovo_number),\ncontext.getString(R.string.country_kosovo_name)));\ncountries.add(new Country(context.getString(R.string.country_kuwait_code),\ncontext.getString(R.string.country_kuwait_number),\ncontext.getString(R.string.country_kuwait_name)));\ncountries.add(new Country(context.getString(R.string.country_kyrgyzstan_code),\ncontext.getString(R.string.country_kyrgyzstan_number),\ncontext.getString(R.string.country_kyrgyzstan_name)));\ncountries.add(\nnew Country(context.getString(R.string.country_lao_peoples_democratic_republic_code),\ncontext.getString(R.string.country_lao_peoples_democratic_republic_number),\ncontext.getString(R.string.country_lao_peoples_democratic_republic_name)));\ncountries.add(new Country(context.getString(R.string.country_latvia_code),\ncontext.getString(R.string.country_latvia_number),\ncontext.getString(R.string.country_latvia_name)));\ncountries.add(new Country(context.getString(R.string.country_lebanon_code),\ncontext.getString(R.string.country_lebanon_number),\ncontext.getString(R.string.country_lebanon_name)));\ncountries.add(new Country(context.getString(R.string.country_lesotho_code),\ncontext.getString(R.string.country_lesotho_number),\ncontext.getString(R.string.country_lesotho_name)));\ncountries.add(new Country(context.getString(R.string.country_liberia_code),\ncontext.getString(R.string.country_liberia_number),\ncontext.getString(R.string.country_liberia_name)));\ncountries.add(new Country(context.getString(R.string.country_libya_code),\ncontext.getString(R.string.country_libya_number),\ncontext.getString(R.string.country_libya_name)));\ncountries.add(new Country(context.getString(R.string.country_liechtenstein_code),\ncontext.getString(R.string.country_liechtenstein_number),\ncontext.getString(R.string.country_liechtenstein_name)));\ncountries.add(new Country(context.getString(R.string.country_lithuania_code),\ncontext.getString(R.string.country_lithuania_number),\ncontext.getString(R.string.country_lithuania_name)));\ncountries.add(new Country(context.getString(R.string.country_luxembourg_code),\ncontext.getString(R.string.country_luxembourg_number),\ncontext.getString(R.string.country_luxembourg_name)));\ncountries.add(new Country(context.getString(R.string.country_macao_code),\ncontext.getString(R.string.country_macao_number),\ncontext.getString(R.string.country_macao_name)));\ncountries.add(new Country(context.getString(R.string.country_macedonia_code),\ncontext.getString(R.string.country_macedonia_number),\ncontext.getString(R.string.country_macedonia_name)));\ncountries.add(new Country(context.getString(R.string.country_madagascar_code),\ncontext.getString(R.string.country_madagascar_number),\ncontext.getString(R.string.country_madagascar_name)));\ncountries.add(new Country(context.getString(R.string.country_malawi_code),\ncontext.getString(R.string.country_malawi_number),\ncontext.getString(R.string.country_malawi_name)));\ncountries.add(new Country(context.getString(R.string.country_malaysia_code),\ncontext.getString(R.string.country_malaysia_number),\ncontext.getString(R.string.country_malaysia_name)));\ncountries.add(new Country(context.getString(R.string.country_maldives_code),\ncontext.getString(R.string.country_maldives_number),\ncontext.getString(R.string.country_maldives_name)));\ncountries.add(new Country(context.getString(R.string.country_mali_code),\ncontext.getString(R.string.country_mali_number),\ncontext.getString(R.string.country_mali_name)));\ncountries.add(new Country(context.getString(R.string.country_malta_code),\ncontext.getString(R.string.country_malta_number),\ncontext.getString(R.string.country_malta_name)));\ncountries.add(new Country(context.getString(R.string.country_marshall_islands_code),\ncontext.getString(R.string.country_marshall_islands_number),\ncontext.getString(R.string.country_marshall_islands_name)));\ncountries.add(new Country(context.getString(R.string.country_martinique_code),\ncontext.getString(R.string.country_martinique_number),\ncontext.getString(R.string.country_martinique_name)));\ncountries.add(new Country(context.getString(R.string.country_mauritania_code),\ncontext.getString(R.string.country_mauritania_number),\ncontext.getString(R.string.country_mauritania_name)));\ncountries.add(new Country(context.getString(R.string.country_mauritius_code),\ncontext.getString(R.string.country_mauritius_number),\ncontext.getString(R.string.country_mauritius_name)));\ncountries.add(new Country(context.getString(R.string.country_mayotte_code),\ncontext.getString(R.string.country_mayotte_number),\ncontext.getString(R.string.country_mayotte_name)));\ncountries.add(new Country(context.getString(R.string.country_mexico_code),\ncontext.getString(R.string.country_mexico_number),\ncontext.getString(R.string.country_mexico_name)));\ncountries.add(new Country(context.getString(R.string.country_micronesia_code),\ncontext.getString(R.string.country_micronesia_number),\ncontext.getString(R.string.country_micronesia_name)));\ncountries.add(new Country(context.getString(R.string.country_moldova_code),\ncontext.getString(R.string.country_moldova_number),\ncontext.getString(R.string.country_moldova_name)));\ncountries.add(new Country(context.getString(R.string.country_monaco_code),\ncontext.getString(R.string.country_monaco_number),\ncontext.getString(R.string.country_monaco_name)));\ncountries.add(new Country(context.getString(R.string.country_mongolia_code),\ncontext.getString(R.string.country_mongolia_number),\ncontext.getString(R.string.country_mongolia_name)));\ncountries.add(new Country(context.getString(R.string.country_montserrat_code),\ncontext.getString(R.string.country_montserrat_number),\ncontext.getString(R.string.country_montserrat_name)));\ncountries.add(new Country(context.getString(R.string.country_montenegro_code),\ncontext.getString(R.string.country_montenegro_number),\ncontext.getString(R.string.country_montenegro_name)));\ncountries.add(new Country(context.getString(R.string.country_morocco_code),\ncontext.getString(R.string.country_morocco_number),\ncontext.getString(R.string.country_morocco_name)));\ncountries.add(new Country(context.getString(R.string.country_myanmar_code),\ncontext.getString(R.string.country_myanmar_number),\ncontext.getString(R.string.country_myanmar_name)));\ncountries.add(new Country(context.getString(R.string.country_mozambique_code),\ncontext.getString(R.string.country_mozambique_number),\ncontext.getString(R.string.country_mozambique_name)));\ncountries.add(new Country(context.getString(R.string.country_namibia_code),\ncontext.getString(R.string.country_namibia_number),\ncontext.getString(R.string.country_namibia_name)));\ncountries.add(new Country(context.getString(R.string.country_nauru_code),\ncontext.getString(R.string.country_nauru_number),\ncontext.getString(R.string.country_nauru_name)));\ncountries.add(new Country(context.getString(R.string.country_nepal_code),\ncontext.getString(R.string.country_nepal_number),\ncontext.getString(R.string.country_nepal_name)));\ncountries.add(new Country(context.getString(R.string.country_netherlands_code),\ncontext.getString(R.string.country_netherlands_number),\ncontext.getString(R.string.country_netherlands_name)));\ncountries.add(new Country(context.getString(R.string.country_netherlands_antilles_code),\ncontext.getString(R.string.country_netherlands_antilles_number),\ncontext.getString(R.string.country_netherlands_antilles_name)));\ncountries.add(new Country(context.getString(R.string.country_new_caledonia_code),\ncontext.getString(R.string.country_new_caledonia_number),\ncontext.getString(R.string.country_new_caledonia_name)));\ncountries.add(new Country(context.getString(R.string.country_new_zealand_code),\ncontext.getString(R.string.country_new_zealand_number),\ncontext.getString(R.string.country_new_zealand_name)));\ncountries.add(new Country(context.getString(R.string.country_nicaragua_code),\ncontext.getString(R.string.country_nicaragua_number),\ncontext.getString(R.string.country_nicaragua_name)));\ncountries.add(new Country(context.getString(R.string.country_niger_code),\ncontext.getString(R.string.country_niger_number),\ncontext.getString(R.string.country_niger_name)));\ncountries.add(new Country(context.getString(R.string.country_nigeria_code),\ncontext.getString(R.string.country_nigeria_number),\ncontext.getString(R.string.country_nigeria_name)));\ncountries.add(new Country(context.getString(R.string.country_niue_code),\ncontext.getString(R.string.country_niue_number),\ncontext.getString(R.string.country_niue_name)));\ncountries.add(new Country(context.getString(R.string.country_north_korea_code),\ncontext.getString(R.string.country_north_korea_number),\ncontext.getString(R.string.country_north_korea_name)));\ncountries.add(new Country(context.getString(R.string.country_norway_code),\ncontext.getString(R.string.country_norway_number),\ncontext.getString(R.string.country_norway_name)));\ncountries.add(new Country(context.getString(R.string.country_oman_code),\ncontext.getString(R.string.country_oman_number),\ncontext.getString(R.string.country_oman_name)));\ncountries.add(new Country(context.getString(R.string.country_pakistan_code),\ncontext.getString(R.string.country_pakistan_number),\ncontext.getString(R.string.country_pakistan_name)));\ncountries.add(new Country(context.getString(R.string.country_palau_code),\ncontext.getString(R.string.country_palau_number),\ncontext.getString(R.string.country_palau_name)));\ncountries.add(new Country(context.getString(R.string.country_panama_code),\ncontext.getString(R.string.country_panama_number),\ncontext.getString(R.string.country_panama_name)));\ncountries.add(new Country(context.getString(R.string.country_papua_new_guinea_code),\ncontext.getString(R.string.country_papua_new_guinea_number),\ncontext.getString(R.string.country_papua_new_guinea_name)));\ncountries.add(new Country(context.getString(R.string.country_paraguay_code),\ncontext.getString(R.string.country_paraguay_number),\ncontext.getString(R.string.country_paraguay_name)));\ncountries.add(new Country(context.getString(R.string.country_peru_code),\ncontext.getString(R.string.country_peru_number),\ncontext.getString(R.string.country_peru_name)));\ncountries.add(new Country(context.getString(R.string.country_philippines_code),\ncontext.getString(R.string.country_philippines_number),\ncontext.getString(R.string.country_philippines_name)));\ncountries.add(new Country(context.getString(R.string.country_pitcairn_code),\ncontext.getString(R.string.country_pitcairn_number),\ncontext.getString(R.string.country_pitcairn_name)));\ncountries.add(new Country(context.getString(R.string.country_poland_code),\ncontext.getString(R.string.country_poland_number),\ncontext.getString(R.string.country_poland_name)));\ncountries.add(new Country(context.getString(R.string.country_portugal_code),\ncontext.getString(R.string.country_portugal_number),\ncontext.getString(R.string.country_portugal_name)));\ncountries.add(new Country(context.getString(R.string.country_puerto_rico_code),\ncontext.getString(R.string.country_puerto_rico_number),\ncontext.getString(R.string.country_puerto_rico_name)));\ncountries.add(new Country(context.getString(R.string.country_qatar_code),\ncontext.getString(R.string.country_qatar_number),\ncontext.getString(R.string.country_qatar_name)));\ncountries.add(new Country(context.getString(R.string.country_reunion_code),\ncontext.getString(R.string.country_reunion_number),\ncontext.getString(R.string.country_reunion_name)));\ncountries.add(new Country(context.getString(R.string.country_romania_code),\ncontext.getString(R.string.country_romania_number),\ncontext.getString(R.string.country_romania_name)));\ncountries.add(new Country(context.getString(R.string.country_russian_federation_code),\ncontext.getString(R.string.country_russian_federation_number),\ncontext.getString(R.string.country_russian_federation_name)));\ncountries.add(new Country(context.getString(R.string.country_rwanda_code),\ncontext.getString(R.string.country_rwanda_number),\ncontext.getString(R.string.country_rwanda_name)));\ncountries.add(new Country(context.getString(R.string.country_saint_barthelemy_code),\ncontext.getString(R.string.country_saint_barthelemy_number),\ncontext.getString(R.string.country_saint_barthelemy_name)));\ncountries.add(new Country(context.getString(R.string.country_saint_kitts_and_nevis_code),\ncontext.getString(R.string.country_saint_kitts_and_nevis_number),\ncontext.getString(R.string.country_saint_kitts_and_nevis_name)));\ncountries.add(new Country(context.getString(R.string.country_saint_lucia_code),\ncontext.getString(R.string.country_saint_lucia_number),\ncontext.getString(R.string.country_saint_lucia_name)));\ncountries.add(new Country(context.getString(R.string.country_saint_vincent_the_grenadines_code),\ncontext.getString(R.string.country_saint_vincent_the_grenadines_number),\ncontext.getString(R.string.country_saint_vincent_the_grenadines_name)));\ncountries.add(new Country(context.getString(R.string.country_samoa_code),\ncontext.getString(R.string.country_samoa_number),\ncontext.getString(R.string.country_samoa_name)));\ncountries.add(new Country(context.getString(R.string.country_san_marino_code),\ncontext.getString(R.string.country_san_marino_number),\ncontext.getString(R.string.country_san_marino_name)));\ncountries.add(new Country(context.getString(R.string.country_sao_tome_and_principe_code),\ncontext.getString(R.string.country_sao_tome_and_principe_number),\ncontext.getString(R.string.country_sao_tome_and_principe_name)));\ncountries.add(new Country(context.getString(R.string.country_saudi_arabia_code),\ncontext.getString(R.string.country_saudi_arabia_number),\ncontext.getString(R.string.country_saudi_arabia_name)));\ncountries.add(new Country(context.getString(R.string.country_senegal_code),\ncontext.getString(R.string.country_senegal_number),\ncontext.getString(R.string.country_senegal_name)));\ncountries.add(new Country(context.getString(R.string.country_serbia_code),\ncontext.getString(R.string.country_serbia_number),\ncontext.getString(R.string.country_serbia_name)));\ncountries.add(new Country(context.getString(R.string.country_seychelles_code),\ncontext.getString(R.string.country_seychelles_number),\ncontext.getString(R.string.country_seychelles_name)));\ncountries.add(new Country(context.getString(R.string.country_sierra_leone_code),\ncontext.getString(R.string.country_sierra_leone_number),\ncontext.getString(R.string.country_sierra_leone_name)));\ncountries.add(new Country(context.getString(R.string.country_singapore_code),\ncontext.getString(R.string.country_singapore_number),\ncontext.getString(R.string.country_singapore_name)));\ncountries.add(new Country(context.getString(R.string.country_sint_maarten_code),\ncontext.getString(R.string.country_sint_maarten_number),\ncontext.getString(R.string.country_sint_maarten_name)));\ncountries.add(new Country(context.getString(R.string.country_slovakia_code),\ncontext.getString(R.string.country_slovakia_number),\ncontext.getString(R.string.country_slovakia_name)));\ncountries.add(new Country(context.getString(R.string.country_slovenia_code),\ncontext.getString(R.string.country_slovenia_number),\ncontext.getString(R.string.country_slovenia_name)));\ncountries.add(new Country(context.getString(R.string.country_solomon_islands_code),\ncontext.getString(R.string.country_solomon_islands_number),\ncontext.getString(R.string.country_solomon_islands_name)));\ncountries.add(new Country(context.getString(R.string.country_somalia_code),\ncontext.getString(R.string.country_somalia_number),\ncontext.getString(R.string.country_somalia_name)));\ncountries.add(new Country(context.getString(R.string.country_south_africa_code),\ncontext.getString(R.string.country_south_africa_number),\ncontext.getString(R.string.country_south_africa_name)));\ncountries.add(new Country(context.getString(R.string.country_south_korea_code),\ncontext.getString(R.string.country_south_korea_number),\ncontext.getString(R.string.country_south_korea_name)));\ncountries.add(new Country(context.getString(R.string.country_spain_code),\ncontext.getString(R.string.country_spain_number),\ncontext.getString(R.string.country_spain_name)));\ncountries.add(new Country(context.getString(R.string.country_sri_lanka_code),\ncontext.getString(R.string.country_sri_lanka_number),\ncontext.getString(R.string.country_sri_lanka_name)));\ncountries.add(new Country(context.getString(R.string.country_saint_helena_code),\ncontext.getString(R.string.country_saint_helena_number),\ncontext.getString(R.string.country_saint_helena_name)));\ncountries.add(new Country(context.getString(R.string.country_saint_pierre_and_miquelon_code),\ncontext.getString(R.string.country_saint_pierre_and_miquelon_number),\ncontext.getString(R.string.country_saint_pierre_and_miquelon_name)));\ncountries.add(new Country(context.getString(R.string.country_south_sudan_code),\ncontext.getString(R.string.country_south_sudan_number),\ncontext.getString(R.string.country_south_sudan_name)));\ncountries.add(new Country(context.getString(R.string.country_sudan_code),\ncontext.getString(R.string.country_sudan_number),\ncontext.getString(R.string.country_sudan_name)));\ncountries.add(new Country(context.getString(R.string.country_suriname_code),\ncontext.getString(R.string.country_suriname_number),\ncontext.getString(R.string.country_suriname_name)));\ncountries.add(new Country(context.getString(R.string.country_swaziland_code),\ncontext.getString(R.string.country_swaziland_number),\ncontext.getString(R.string.country_swaziland_name)));\ncountries.add(new Country(context.getString(R.string.country_sweden_code),\ncontext.getString(R.string.country_sweden_number),\ncontext.getString(R.string.country_sweden_name)));\ncountries.add(new Country(context.getString(R.string.country_switzerland_code),\ncontext.getString(R.string.country_switzerland_number),\ncontext.getString(R.string.country_switzerland_name)));\ncountries.add(new Country(context.getString(R.string.country_syrian_arab_republic_code),\ncontext.getString(R.string.country_syrian_arab_republic_number),\ncontext.getString(R.string.country_syrian_arab_republic_name)));\ncountries.add(new Country(context.getString(R.string.country_taiwan_code),\ncontext.getString(R.string.country_taiwan_number),\ncontext.getString(R.string.country_taiwan_name)));\ncountries.add(new Country(context.getString(R.string.country_tajikistan_code),\ncontext.getString(R.string.country_tajikistan_number),\ncontext.getString(R.string.country_tajikistan_name)));\ncountries.add(new Country(context.getString(R.string.country_tanzania_code),\ncontext.getString(R.string.country_tanzania_number),\ncontext.getString(R.string.country_tanzania_name)));\ncountries.add(new Country(context.getString(R.string.country_thailand_code),\ncontext.getString(R.string.country_thailand_number),\ncontext.getString(R.string.country_thailand_name)));\ncountries.add(new Country(context.getString(R.string.country_togo_code),\ncontext.getString(R.string.country_togo_number),\ncontext.getString(R.string.country_togo_name)));\ncountries.add(new Country(context.getString(R.string.country_tokelau_code),\ncontext.getString(R.string.country_tokelau_number),\ncontext.getString(R.string.country_tokelau_name)));\ncountries.add(new Country(context.getString(R.string.country_tonga_code),\ncontext.getString(R.string.country_tonga_number),\ncontext.getString(R.string.country_tonga_name)));\ncountries.add(new Country(context.getString(R.string.country_trinidad_tobago_code),\ncontext.getString(R.string.country_trinidad_tobago_number),\ncontext.getString(R.string.country_trinidad_tobago_name)));\ncountries.add(new Country(context.getString(R.string.country_tunisia_code),\ncontext.getString(R.string.country_tunisia_number),\ncontext.getString(R.string.country_tunisia_name)));\ncountries.add(new Country(context.getString(R.string.country_turkey_code),\ncontext.getString(R.string.country_turkey_number),\ncontext.getString(R.string.country_turkey_name)));\ncountries.add(new Country(context.getString(R.string.country_turkmenistan_code),\ncontext.getString(R.string.country_turkmenistan_number),\ncontext.getString(R.string.country_turkmenistan_name)));\ncountries.add(new Country(context.getString(R.string.country_turks_and_caicos_islands_code),\ncontext.getString(R.string.country_turks_and_caicos_islands_number),\ncontext.getString(R.string.country_turks_and_caicos_islands_name)));\ncountries.add(new Country(context.getString(R.string.country_tuvalu_code),\ncontext.getString(R.string.country_tuvalu_number),\ncontext.getString(R.string.country_tuvalu_name)));\ncountries.add(new Country(context.getString(R.string.country_united_arab_emirates_code),\ncontext.getString(R.string.country_united_arab_emirates_number),\ncontext.getString(R.string.country_united_arab_emirates_name)));\ncountries.add(new Country(context.getString(R.string.country_uganda_code),\ncontext.getString(R.string.country_uganda_number),\ncontext.getString(R.string.country_uganda_name)));\ncountries.add(new Country(context.getString(R.string.country_united_kingdom_code),\ncontext.getString(R.string.country_united_kingdom_number),\ncontext.getString(R.string.country_united_kingdom_name)));\ncountries.add(new Country(context.getString(R.string.country_ukraine_code),\ncontext.getString(R.string.country_ukraine_number),\ncontext.getString(R.string.country_ukraine_name)));\ncountries.add(new Country(context.getString(R.string.country_uruguay_code),\ncontext.getString(R.string.country_uruguay_number),\ncontext.getString(R.string.country_uruguay_name)));\ncountries.add(new Country(context.getString(R.string.country_united_states_code),\ncontext.getString(R.string.country_united_states_number),\ncontext.getString(R.string.country_united_states_name)));\ncountries.add(new Country(context.getString(R.string.country_us_virgin_islands_code),\ncontext.getString(R.string.country_us_virgin_islands_number),\ncontext.getString(R.string.country_us_virgin_islands_name)));\ncountries.add(new Country(context.getString(R.string.country_uzbekistan_code),\ncontext.getString(R.string.country_uzbekistan_number),\ncontext.getString(R.string.country_uzbekistan_name)));\ncountries.add(new Country(context.getString(R.string.country_vanuatu_code),\ncontext.getString(R.string.country_vanuatu_number),\ncontext.getString(R.string.country_vanuatu_name)));\ncountries.add(new Country(context.getString(R.string.country_holy_see_vatican_city_state_code),\ncontext.getString(R.string.country_holy_see_vatican_city_state_number),\ncontext.getString(R.string.country_holy_see_vatican_city_state_name)));\ncountries.add(new Country(context.getString(R.string.country_venezuela_code),\ncontext.getString(R.string.country_venezuela_number),\ncontext.getString(R.string.country_venezuela_name)));\ncountries.add(new Country(context.getString(R.string.country_viet_nam_code),\ncontext.getString(R.string.country_viet_nam_number),\ncontext.getString(R.string.country_viet_nam_name)));\ncountries.add(new Country(context.getString(R.string.country_wallis_and_futuna_code),\ncontext.getString(R.string.country_wallis_and_futuna_number),\ncontext.getString(R.string.country_wallis_and_futuna_name)));\ncountries.add(new Country(context.getString(R.string.country_yemen_code),\ncontext.getString(R.string.country_yemen_number),\ncontext.getString(R.string.country_yemen_name)));\ncountries.add(new Country(context.getString(R.string.country_zambia_code),\ncontext.getString(R.string.country_zambia_number),\ncontext.getString(R.string.country_zambia_name)));\ncountries.add(new Country(context.getString(R.string.country_zimbabwe_code),\ncontext.getString(R.string.country_zimbabwe_number),\ncontext.getString(R.string.country_zimbabwe_name)));\ncountries.add(new Country(context.getString(R.string.country_aland_islands_code),\ncontext.getString(R.string.country_aland_islands_number),\ncontext.getString(R.string.country_aland_islands_name)));\ncountries.add(new Country(context.getString(R.string.country_american_samoa_code),\ncontext.getString(R.string.country_american_samoa_number),\ncontext.getString(R.string.country_american_samoa_name)));\ncountries.add(\nnew Country(context.getString(R.string.country_british_indian_ocean_territory_code),\ncontext.getString(R.string.country_british_indian_ocean_territory_number),\ncontext.getString(R.string.country_british_indian_ocean_territory_name)));\ncountries.add(new Country(context.getString(R.string.country_guadeloupe_code),\ncontext.getString(R.string.country_guadeloupe_number),\ncontext.getString(R.string.country_guadeloupe_name)));\ncountries.add(new Country(context.getString(R.string.country_guam_code),\ncontext.getString(R.string.country_guam_number),\ncontext.getString(R.string.country_guam_name)));\ncountries.add(new Country(context.getString(R.string.country_guernsey_code),\ncontext.getString(R.string.country_guernsey_number),\ncontext.getString(R.string.country_guernsey_name)));\ncountries.add(new Country(context.getString(R.string.country_jersey_code),\ncontext.getString(R.string.country_jersey_number),\ncontext.getString(R.string.country_jersey_name)));\ncountries.add(new Country(context.getString(R.string.country_norfolk_island_code),\ncontext.getString(R.string.country_norfolk_island_number),\ncontext.getString(R.string.country_norfolk_island_name)));\ncountries.add(new Country(context.getString(R.string.country_northern_mariana_islands_code),\ncontext.getString(R.string.country_northern_mariana_islands_number),\ncontext.getString(R.string.country_northern_mariana_islands_name)));\ncountries.add(new Country(context.getString(R.string.country_palestian_territory_code),\ncontext.getString(R.string.country_palestian_territory_number),\ncontext.getString(R.string.country_palestian_territory_name)));\ncountries.add(new Country(context.getString(R.string.country_saint_martin_code),\ncontext.getString(R.string.country_saint_martin_number),\ncontext.getString(R.string.country_saint_martin_name)));\ncountries.add(new Country(context.getString(R.string.country_south_georgia_code),\ncontext.getString(R.string.country_south_georgia_number),\ncontext.getString(R.string.country_south_georgia_name)));\nCollections.sort(countries, new Comparator<Country>() {\n@Override public int compare(Country country1, Country country2) {\nreturn country1.getName().compareToIgnoreCase(country2.getName());\n}\n});\nreturn countries;\n}\n/**\n* Finds country code by matching substring from left to right from full number.\n* For example. if full number is +819017901357\n* function will ignore \"+\" and try to find match for first character \"8\"\n* if any country found for code \"8\", will return that country. If not, then it will\n* try to find country for \"81\". and so on till first 3 characters ( maximum number of characters\n* in country code is 3).\n*\n* @param preferredCountries countries of preference\n* @param fullNumber full number ( \"+\" (optional)+ country code + carrier number) i.e.\n* +819017901357 / 819017901357 / 918866667722\n* @return Country JP +81(Japan) for +819017901357 or 819017901357\n* Country IN +91(India) for  918866667722\n* null for 2956635321 ( as neither of \"2\", \"29\" and \"295\" matches any country code)\n*/\nstatic Country getByNumber(Context context, List<Country> preferredCountries, String fullNumber) {\nint firstDigit;\nif (fullNumber.length() == 0) return null;\nif (fullNumber.charAt(0) == '+') {\nfirstDigit = 1;\n} else {\nfirstDigit = 0;\n}\nCountry country;\nfor (int i = firstDigit; i < firstDigit + 4; i++) {\nString code = fullNumber.substring(firstDigit, i);\ncountry = getByCode(context, preferredCountries, code);\nif (country != null) return country;\n}\nreturn null;\n}\n/**\n* Search a country which matches @param code.\n*\n* @param preferredCountries list of country with priority,\n* @param code phone code. i.e 91 or 1\n* @return Country that has phone code as @param code.\n* or returns null if no country matches given code.\n*/\nstatic Country getByCode(Context context, List<Country> preferredCountries, int code) {\nreturn getByCode(context, preferredCountries, code + \"\");\n}\n/**\n* Search a country which matches @param code.\n*\n* @param preferredCountries is list of preference countries.\n* @param code phone code. i.e \"91\" or \"1\"\n* @return Country that has phone code as @param code.\n* or returns null if no country matches given code.\n* if same code (e.g. +1) available for more than one country ( US, canada) , this function will\n* return preferred country.\n*/\nprivate static Country getByCode(Context context, List<Country> preferredCountries, String code) {\n//check in preferred countries first\nif (preferredCountries != null && !preferredCountries.isEmpty()) {\nfor (Country country : preferredCountries) {\nif (country.getPhoneCode().equals(code)) {\nreturn country;\n}\n}\n}\nfor (Country country : CountryUtils.getAllCountries(context)) {\nif (country.getPhoneCode().equals(code)) {\nreturn country;\n}\n}\nreturn null;\n}\n/**\n* Search a country which matches @param nameCode.\n*\n* @param nameCode country name code. i.e US or us or Au. See countries.xml for all code names.\n* @return Country that has phone code as @param code.\n* or returns null if no country matches given code.\n*/\nstatic Country getByNameCodeFromCustomCountries(Context context,\nList<Country> customCountries,\nString nameCode) {\nif (customCountries == null || customCountries.size() == 0) {\nreturn getByNameCodeFromAllCountries(context, nameCode);\n} else {\nfor (Country country : customCountries) {\nif (country.getIso().equalsIgnoreCase(nameCode)) {\nreturn country;\n}\n}\n}\nreturn null;\n}\n/**\n* Search a country which matches @param nameCode.\n*\n* @param nameCode country name code. i.e US or us or Au. See countries.xml for all code names.\n* @return Country that has phone code as @param code.\n* or returns null if no country matches given code.\n*/\nstatic Country getByNameCodeFromAllCountries(Context context, String nameCode) {\nList<Country> countries = CountryUtils.getAllCountries(context);\nfor (Country country : countries) {\nif (country.getIso().equalsIgnoreCase(nameCode)) {\nreturn country;\n}\n}\nreturn null;\n}\nstatic List<String> getCountryIsoByTimeZone(Context context, String timeZoneId) {\nMap<String, List<String>> timeZoneAndCountryIsos = getTimeZoneAndCountryISOs(context);\nreturn timeZoneAndCountryIsos.get(timeZoneId);\n}\n/**\n* Return list of Map for timezone and iso country.\n*\n* @param context Caller context\n* @return List of timezone and country.\n*/\nprivate static Map<String, List<String>> getTimeZoneAndCountryISOs(Context context) {\nif (timeZoneAndCountryISOs != null && !timeZoneAndCountryISOs.isEmpty()) {\nreturn timeZoneAndCountryISOs;\n}\ntimeZoneAndCountryISOs = new HashMap<>();\n// Read from raw\nInputStream inputStream = context.getResources().openRawResource(R.raw.zone1970);\nBufferedReader buf = new BufferedReader(new InputStreamReader(inputStream));\nString lineJustFetched;\nString[] wordsArray;\ntry {\nwhile (true) {\nlineJustFetched = buf.readLine();\nif (lineJustFetched == null) {\nbreak;\n} else {\nwordsArray = lineJustFetched.split(\"\\t\");\n// Ignore line which have # as the first character.\nif (!lineJustFetched.substring(0, 1).contains(\"#\")) {\nif (wordsArray.length >= 3) {\n// First word is country code or list of country code separate by comma\nList<String> isos = new ArrayList<>();\nCollections.addAll(isos, wordsArray[0].split(\",\"));\n// Third word in wordsArray is timezone.\ntimeZoneAndCountryISOs.put(wordsArray[2], isos);\n}\n}\n}\n}\n} catch (IOException e) {\ne.printStackTrace();\n}\nreturn timeZoneAndCountryISOs;\n}\n}",
                        "max_stars_repo_name": "naman14/CountryCodePicker",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "countrycodepicker/src/main/java/com/rilixtech/widget/countrycodepicker/CountryUtils.java",
                        "__cluster__": 295
                },
                {
                        "id": "test_api-misuse-repair-single_data_296",
                        "content": "static List<Country> getAllCountries(Context context) { if (countries != null) { return countries; } countries = new ArrayList<>(); countries.add(new Country(context.getString(R.string.country_afghanistan_code), context.getString(R.string.country_afghanistan_number), context.getString(R.string.country_afghanistan_name))); countries.add(new Country(context.getString(R.string.country_albania_code), context.getString(R.string.country_albania_number), context.getString(R.string.country_albania_name))); countries.add(new Country(context.getString(R.string.country_algeria_code), context.getString(R.string.country_algeria_number), context.getString(R.string.country_algeria_name))); countries.add(new Country(context.getString(R.string.country_andorra_code), context.getString(R.string.country_andorra_number), context.getString(R.string.country_andorra_name))); countries.add(new Country(context.getString(R.string.country_angola_code), context.getString(R.string.country_angola_number), context.getString(R.string.country_angola_name))); countries.add(new Country(context.getString(R.string.country_anguilla_code), context.getString(R.string.country_anguilla_number), context.getString(R.string.country_anguilla_name))); countries.add(new Country(context.getString(R.string.country_antarctica_code), context.getString(R.string.country_antarctica_number), context.getString(R.string.country_antarctica_name))); countries.add(new Country(context.getString(R.string.country_antigua_and_barbuda_code), context.getString(R.string.country_antigua_and_barbuda_number), context.getString(R.string.country_antigua_and_barbuda_name))); countries.add(new Country(context.getString(R.string.country_argentina_code), context.getString(R.string.country_argentina_number), context.getString(R.string.country_argentina_name))); countries.add(new Country(context.getString(R.string.country_armenia_code), context.getString(R.string.country_armenia_number), context.getString(R.string.country_armenia_name))); countries.add(new Country(context.getString(R.string.country_aruba_code), context.getString(R.string.country_aruba_number), context.getString(R.string.country_aruba_name))); countries.add(new Country(context.getString(R.string.country_australia_code), context.getString(R.string.country_australia_number), context.getString(R.string.country_australia_name))); countries.add(new Country(context.getString(R.string.country_azerbaijan_code), context.getString(R.string.country_azerbaijan_number), context.getString(R.string.country_azerbaijan_name))); countries.add(new Country(context.getString(R.string.country_bahamas_code), context.getString(R.string.country_bahamas_number), context.getString(R.string.country_bahamas_name))); countries.add(new Country(context.getString(R.string.country_bahrain_code), context.getString(R.string.country_bahrain_number), context.getString(R.string.country_bahrain_name))); countries.add(new Country(context.getString(R.string.country_bangladesh_code), context.getString(R.string.country_bangladesh_number), context.getString(R.string.country_bangladesh_name))); countries.add(new Country(context.getString(R.string.country_barbados_code), context.getString(R.string.country_barbados_number), context.getString(R.string.country_barbados_name))); countries.add(new Country(context.getString(R.string.country_belarus_code), context.getString(R.string.country_belarus_number), context.getString(R.string.country_belarus_name))); countries.add(new Country(context.getString(R.string.country_belgium_code), context.getString(R.string.country_belgium_number), context.getString(R.string.country_belgium_name))); countries.add(new Country(context.getString(R.string.country_belize_code), context.getString(R.string.country_belize_number), context.getString(R.string.country_belize_name))); countries.add(new Country(context.getString(R.string.country_benin_code), context.getString(R.string.country_benin_number), context.getString(R.string.country_benin_name))); countries.add(new Country(context.getString(R.string.country_bermuda_code), context.getString(R.string.country_bermuda_number), context.getString(R.string.country_bermuda_name))); countries.add(new Country(context.getString(R.string.country_bhutan_code), context.getString(R.string.country_bhutan_number), context.getString(R.string.country_bhutan_name))); countries.add(new Country(context.getString(R.string.country_bolivia_code), context.getString(R.string.country_bolivia_number), context.getString(R.string.country_bolivia_name))); countries.add(new Country(context.getString(R.string.country_bosnia_and_herzegovina_code), context.getString(R.string.country_bosnia_and_herzegovina_number), context.getString(R.string.country_bosnia_and_herzegovina_name))); countries.add(new Country(context.getString(R.string.country_botswana_code), context.getString(R.string.country_botswana_number), context.getString(R.string.country_botswana_name))); countries.add(new Country(context.getString(R.string.country_brazil_code), context.getString(R.string.country_brazil_number), context.getString(R.string.country_brazil_name))); countries.add(new Country(context.getString(R.string.country_british_virgin_islands_code), context.getString(R.string.country_british_virgin_islands_number), context.getString(R.string.country_british_virgin_islands_name))); countries.add(new Country(context.getString(R.string.country_brunei_darussalam_code), context.getString(R.string.country_brunei_darussalam_number), context.getString(R.string.country_brunei_darussalam_name))); countries.add(new Country(context.getString(R.string.country_bulgaria_code), context.getString(R.string.country_bulgaria_number), context.getString(R.string.country_bulgaria_name))); countries.add(new Country(context.getString(R.string.country_burkina_faso_code), context.getString(R.string.country_burkina_faso_number), context.getString(R.string.country_burkina_faso_name))); countries.add(new Country(context.getString(R.string.country_burundi_code), context.getString(R.string.country_burundi_number), context.getString(R.string.country_burundi_name))); countries.add(new Country(context.getString(R.string.country_cambodia_code), context.getString(R.string.country_cambodia_number), context.getString(R.string.country_cambodia_name))); countries.add(new Country(context.getString(R.string.country_cameroon_code), context.getString(R.string.country_cameroon_number), context.getString(R.string.country_cameroon_name))); countries.add(new Country(context.getString(R.string.country_canada_code), context.getString(R.string.country_canada_number), context.getString(R.string.country_canada_name))); countries.add(new Country(context.getString(R.string.country_cape_verde_code), context.getString(R.string.country_cape_verde_number), context.getString(R.string.country_cape_verde_name))); countries.add(new Country(context.getString(R.string.country_cayman_islands_code), context.getString(R.string.country_cayman_islands_number), context.getString(R.string.country_cayman_islands_name))); countries.add(new Country(context.getString(R.string.country_central_african_republic_code), context.getString(R.string.country_central_african_republic_number), context.getString(R.string.country_central_african_republic_name))); countries.add(new Country(context.getString(R.string.country_chad_code), context.getString(R.string.country_chad_number), context.getString(R.string.country_chad_name))); countries.add(new Country(context.getString(R.string.country_chile_code), context.getString(R.string.country_chile_number), context.getString(R.string.country_chile_name))); countries.add(new Country(context.getString(R.string.country_china_code), context.getString(R.string.country_china_number), context.getString(R.string.country_china_name))); countries.add(new Country(context.getString(R.string.country_christmas_island_code), context.getString(R.string.country_christmas_island_number), context.getString(R.string.country_christmas_island_name))); countries.add(new Country(context.getString(R.string.country_cocos_keeling_islands_code), context.getString(R.string.country_cocos_keeling_islands_number), context.getString(R.string.country_cocos_keeling_islands_name))); countries.add(new Country(context.getString(R.string.country_colombia_code), context.getString(R.string.country_colombia_number), context.getString(R.string.country_colombia_name))); countries.add(new Country(context.getString(R.string.country_comoros_code), context.getString(R.string.country_comoros_number), context.getString(R.string.country_comoros_name))); countries.add(new Country(context.getString(R.string.country_congo_code), context.getString(R.string.country_congo_number), context.getString(R.string.country_congo_name))); countries.add(new Country(context.getString(R.string.country_congo_code), context.getString(R.string.country_congo_number), context.getString(R.string.country_congo_name))); countries.add(new Country(context.getString(R.string.country_cook_islands_code), context.getString(R.string.country_cook_islands_number), context.getString(R.string.country_cook_islands_name))); countries.add(new Country(context.getString(R.string.country_costa_rica_code), context.getString(R.string.country_costa_rica_number), context.getString(R.string.country_costa_rica_name))); countries.add(new Country(context.getString(R.string.country_croatia_code), context.getString(R.string.country_croatia_number), context.getString(R.string.country_croatia_name))); countries.add(new Country(context.getString(R.string.country_cuba_code), context.getString(R.string.country_cuba_number), context.getString(R.string.country_cuba_name))); countries.add(new Country(context.getString(R.string.country_cyprus_code), context.getString(R.string.country_cyprus_number), context.getString(R.string.country_cyprus_name))); countries.add(new Country(context.getString(R.string.country_czech_republic_code), context.getString(R.string.country_czech_republic_number), context.getString(R.string.country_czech_republic_name))); countries.add(new Country(context.getString(R.string.country_denmark_code), context.getString(R.string.country_denmark_number), context.getString(R.string.country_denmark_name))); countries.add(new Country(context.getString(R.string.country_djibouti_code), context.getString(R.string.country_djibouti_number), context.getString(R.string.country_djibouti_name))); countries.add(new Country(context.getString(R.string.country_dominica_code), context.getString(R.string.country_dominica_number), context.getString(R.string.country_dominica_name))); countries.add(new Country(context.getString(R.string.country_dominican_republic_code), context.getString(R.string.country_dominican_republic_number), context.getString(R.string.country_dominican_republic_name))); countries.add(new Country(context.getString(R.string.country_timor_leste_code), context.getString(R.string.country_timor_leste_number), context.getString(R.string.country_timor_leste_name))); countries.add(new Country(context.getString(R.string.country_ecuador_code), context.getString(R.string.country_ecuador_number), context.getString(R.string.country_ecuador_name))); countries.add(new Country(context.getString(R.string.country_egypt_code), context.getString(R.string.country_egypt_number), context.getString(R.string.country_egypt_name))); countries.add(new Country(context.getString(R.string.country_el_salvador_code), context.getString(R.string.country_el_salvador_number), context.getString(R.string.country_el_salvador_name))); countries.add(new Country(context.getString(R.string.country_equatorial_guinea_code), context.getString(R.string.country_equatorial_guinea_number), context.getString(R.string.country_equatorial_guinea_name))); countries.add(new Country(context.getString(R.string.country_eritrea_code), context.getString(R.string.country_eritrea_number), context.getString(R.string.country_eritrea_name))); countries.add(new Country(context.getString(R.string.country_estonia_code), context.getString(R.string.country_estonia_number), context.getString(R.string.country_estonia_name))); countries.add(new Country(context.getString(R.string.country_ethiopia_code), context.getString(R.string.country_ethiopia_number), context.getString(R.string.country_ethiopia_name))); countries.add(new Country(context.getString(R.string.country_falkland_islands_malvinas_code), context.getString(R.string.country_falkland_islands_malvinas_number), context.getString(R.string.country_falkland_islands_malvinas_name))); countries.add(new Country(context.getString(R.string.country_faroe_islands_code), context.getString(R.string.country_faroe_islands_number), context.getString(R.string.country_faroe_islands_name))); countries.add(new Country(context.getString(R.string.country_fiji_code), context.getString(R.string.country_fiji_number), context.getString(R.string.country_fiji_name))); countries.add(new Country(context.getString(R.string.country_finland_code), context.getString(R.string.country_finland_number), context.getString(R.string.country_finland_name))); countries.add(new Country(context.getString(R.string.country_france_code), context.getString(R.string.country_france_number), context.getString(R.string.country_france_name))); countries.add(new Country(context.getString(R.string.country_french_guyana_code), context.getString(R.string.country_french_guyana_number), context.getString(R.string.country_french_guyana_name))); countries.add(new Country(context.getString(R.string.country_french_polynesia_code), context.getString(R.string.country_french_polynesia_number), context.getString(R.string.country_french_polynesia_name))); countries.add(new Country(context.getString(R.string.country_gabon_code), context.getString(R.string.country_gabon_number), context.getString(R.string.country_gabon_name))); countries.add(new Country(context.getString(R.string.country_gambia_code), context.getString(R.string.country_gambia_number), context.getString(R.string.country_gambia_name))); countries.add(new Country(context.getString(R.string.country_georgia_code), context.getString(R.string.country_georgia_number), context.getString(R.string.country_georgia_name))); countries.add(new Country(context.getString(R.string.country_germany_code), context.getString(R.string.country_germany_number), context.getString(R.string.country_germany_name))); countries.add(new Country(context.getString(R.string.country_ghana_code), context.getString(R.string.country_ghana_number), context.getString(R.string.country_ghana_name))); countries.add(new Country(context.getString(R.string.country_gibraltar_code), context.getString(R.string.country_gibraltar_number), context.getString(R.string.country_gibraltar_name))); countries.add(new Country(context.getString(R.string.country_greece_code), context.getString(R.string.country_greece_number), context.getString(R.string.country_greece_name))); countries.add(new Country(context.getString(R.string.country_greenland_code), context.getString(R.string.country_greenland_number), context.getString(R.string.country_greenland_name))); countries.add(new Country(context.getString(R.string.country_grenada_code), context.getString(R.string.country_grenada_number), context.getString(R.string.country_grenada_name))); countries.add(new Country(context.getString(R.string.country_guatemala_code), context.getString(R.string.country_guatemala_number), context.getString(R.string.country_guatemala_name))); countries.add(new Country(context.getString(R.string.country_guinea_code), context.getString(R.string.country_guinea_number), context.getString(R.string.country_guinea_name))); countries.add(new Country(context.getString(R.string.country_guinea_bissau_code), context.getString(R.string.country_guinea_bissau_number), context.getString(R.string.country_guinea_bissau_name))); countries.add(new Country(context.getString(R.string.country_guyana_code), context.getString(R.string.country_guyana_number), context.getString(R.string.country_guyana_name))); countries.add(new Country(context.getString(R.string.country_haiti_code), context.getString(R.string.country_haiti_number), context.getString(R.string.country_haiti_name))); countries.add(new Country(context.getString(R.string.country_honduras_code), context.getString(R.string.country_honduras_number), context.getString(R.string.country_honduras_name))); countries.add(new Country(context.getString(R.string.country_hong_kong_code), context.getString(R.string.country_hong_kong_number), context.getString(R.string.country_hong_kong_name))); countries.add(new Country(context.getString(R.string.country_hungary_code), context.getString(R.string.country_hungary_number), context.getString(R.string.country_hungary_name))); countries.add(new Country(context.getString(R.string.country_india_code), context.getString(R.string.country_india_number), context.getString(R.string.country_india_name))); countries.add(new Country(context.getString(R.string.country_indonesia_code), context.getString(R.string.country_indonesia_number), context.getString(R.string.country_indonesia_name))); countries.add(new Country(context.getString(R.string.country_iran_code), context.getString(R.string.country_iran_number), context.getString(R.string.country_iran_name))); countries.add(new Country(context.getString(R.string.country_iraq_code), context.getString(R.string.country_iraq_number), context.getString(R.string.country_iraq_name))); countries.add(new Country(context.getString(R.string.country_ireland_code), context.getString(R.string.country_ireland_number), context.getString(R.string.country_ireland_name))); countries.add(new Country(context.getString(R.string.country_isle_of_man_code), context.getString(R.string.country_isle_of_man_number), context.getString(R.string.country_isle_of_man_name))); countries.add(new Country(context.getString(R.string.country_israel_code), context.getString(R.string.country_israel_number), context.getString(R.string.country_israel_name))); countries.add(new Country(context.getString(R.string.country_italy_code), context.getString(R.string.country_italy_number), context.getString(R.string.country_italy_name))); countries.add(new Country(context.getString(R.string.country_c\u00f4te_d_ivoire_code), context.getString(R.string.country_c\u00f4te_d_ivoire_number), context.getString(R.string.country_c\u00f4te_d_ivoire_name))); countries.add(new Country(context.getString(R.string.country_jamaica_code), context.getString(R.string.country_jamaica_number), context.getString(R.string.country_jamaica_name))); countries.add(new Country(context.getString(R.string.country_japan_code), context.getString(R.string.country_japan_number), context.getString(R.string.country_japan_name))); countries.add(new Country(context.getString(R.string.country_jordan_code), context.getString(R.string.country_jordan_number), context.getString(R.string.country_jordan_name))); countries.add(new Country(context.getString(R.string.country_kazakhstan_code), context.getString(R.string.country_kazakhstan_number), context.getString(R.string.country_kazakhstan_name))); countries.add(new Country(context.getString(R.string.country_kenya_code), context.getString(R.string.country_kenya_number), context.getString(R.string.country_kenya_name))); countries.add(new Country(context.getString(R.string.country_kiribati_code), context.getString(R.string.country_kiribati_number), context.getString(R.string.country_kiribati_name))); countries.add(new Country(context.getString(R.string.country_kuwait_code), context.getString(R.string.country_kuwait_number), context.getString(R.string.country_kuwait_name))); countries.add(new Country(context.getString(R.string.country_kyrgyzstan_code), context.getString(R.string.country_kyrgyzstan_number), context.getString(R.string.country_kyrgyzstan_name))); countries.add(new Country(context.getString(R.string.country_lao_peoples_democratic_republic_code), context.getString(R.string.country_lao_peoples_democratic_republic_number), context.getString(R.string.country_lao_peoples_democratic_republic_name))); countries.add(new Country(context.getString(R.string.country_latvia_code), context.getString(R.string.country_latvia_number), context.getString(R.string.country_latvia_name))); countries.add(new Country(context.getString(R.string.country_lebanon_code), context.getString(R.string.country_lebanon_number), context.getString(R.string.country_lebanon_name))); countries.add(new Country(context.getString(R.string.country_lesotho_code), context.getString(R.string.country_lesotho_number), context.getString(R.string.country_lesotho_name))); countries.add(new Country(context.getString(R.string.country_liberia_code), context.getString(R.string.country_liberia_number), context.getString(R.string.country_liberia_name))); countries.add(new Country(context.getString(R.string.country_libya_code), context.getString(R.string.country_libya_number), context.getString(R.string.country_libya_name))); countries.add(new Country(context.getString(R.string.country_liechtenstein_code), context.getString(R.string.country_liechtenstein_number), context.getString(R.string.country_liechtenstein_name))); countries.add(new Country(context.getString(R.string.country_lithuania_code), context.getString(R.string.country_lithuania_number), context.getString(R.string.country_lithuania_name))); countries.add(new Country(context.getString(R.string.country_luxembourg_code), context.getString(R.string.country_luxembourg_number), context.getString(R.string.country_luxembourg_name))); countries.add(new Country(context.getString(R.string.country_macao_code), context.getString(R.string.country_macao_number), context.getString(R.string.country_macao_name))); countries.add(new Country(context.getString(R.string.country_macedonia_code), context.getString(R.string.country_macedonia_number), context.getString(R.string.country_macedonia_name))); countries.add(new Country(context.getString(R.string.country_madagascar_code), context.getString(R.string.country_madagascar_number), context.getString(R.string.country_madagascar_name))); countries.add(new Country(context.getString(R.string.country_malawi_code), context.getString(R.string.country_malawi_number), context.getString(R.string.country_malawi_name))); countries.add(new Country(context.getString(R.string.country_malaysia_code), context.getString(R.string.country_malaysia_number), context.getString(R.string.country_malaysia_name))); countries.add(new Country(context.getString(R.string.country_maldives_code), context.getString(R.string.country_maldives_number), context.getString(R.string.country_maldives_name))); countries.add(new Country(context.getString(R.string.country_mali_code), context.getString(R.string.country_mali_number), context.getString(R.string.country_mali_name))); countries.add(new Country(context.getString(R.string.country_malta_code), context.getString(R.string.country_malta_number), context.getString(R.string.country_malta_name))); countries.add(new Country(context.getString(R.string.country_marshall_islands_code), context.getString(R.string.country_marshall_islands_number), context.getString(R.string.country_marshall_islands_name))); countries.add(new Country(context.getString(R.string.country_martinique_code), context.getString(R.string.country_martinique_number), context.getString(R.string.country_martinique_name))); countries.add(new Country(context.getString(R.string.country_mauritania_code), context.getString(R.string.country_mauritania_number), context.getString(R.string.country_mauritania_name))); countries.add(new Country(context.getString(R.string.country_mauritius_code), context.getString(R.string.country_mauritius_number), context.getString(R.string.country_mauritius_name))); countries.add(new Country(context.getString(R.string.country_mayotte_code), context.getString(R.string.country_mayotte_number), context.getString(R.string.country_mayotte_name))); countries.add(new Country(context.getString(R.string.country_mexico_code), context.getString(R.string.country_mexico_number), context.getString(R.string.country_mexico_name))); countries.add(new Country(context.getString(R.string.country_micronesia_code), context.getString(R.string.country_micronesia_number), context.getString(R.string.country_micronesia_name))); countries.add(new Country(context.getString(R.string.country_moldova_code), context.getString(R.string.country_moldova_number), context.getString(R.string.country_moldova_name))); countries.add(new Country(context.getString(R.string.country_monaco_code), context.getString(R.string.country_monaco_number), context.getString(R.string.country_monaco_name))); countries.add(new Country(context.getString(R.string.country_mongolia_code), context.getString(R.string.country_mongolia_number), context.getString(R.string.country_mongolia_name))); countries.add(new Country(context.getString(R.string.country_montserrat_code), context.getString(R.string.country_montserrat_number), context.getString(R.string.country_montserrat_name))); countries.add(new Country(context.getString(R.string.country_montenegro_code), context.getString(R.string.country_montenegro_number), context.getString(R.string.country_montenegro_name))); countries.add(new Country(context.getString(R.string.country_morocco_code), context.getString(R.string.country_morocco_number), context.getString(R.string.country_morocco_name))); countries.add(new Country(context.getString(R.string.country_mozambique_code), context.getString(R.string.country_mozambique_number), context.getString(R.string.country_mozambique_name))); countries.add(new Country(context.getString(R.string.country_namibia_code), context.getString(R.string.country_namibia_number), context.getString(R.string.country_namibia_name))); countries.add(new Country(context.getString(R.string.country_nauru_code), context.getString(R.string.country_nauru_number), context.getString(R.string.country_nauru_name))); countries.add(new Country(context.getString(R.string.country_nepal_code), context.getString(R.string.country_nepal_number), context.getString(R.string.country_nepal_name))); countries.add(new Country(context.getString(R.string.country_netherlands_code), context.getString(R.string.country_netherlands_number), context.getString(R.string.country_netherlands_name))); countries.add(new Country(context.getString(R.string.country_new_caledonia_code), context.getString(R.string.country_new_caledonia_number), context.getString(R.string.country_new_caledonia_name))); countries.add(new Country(context.getString(R.string.country_new_zealand_code), context.getString(R.string.country_new_zealand_number), context.getString(R.string.country_new_zealand_name))); countries.add(new Country(context.getString(R.string.country_nicaragua_code), context.getString(R.string.country_nicaragua_number), context.getString(R.string.country_nicaragua_name))); countries.add(new Country(context.getString(R.string.country_niger_code), context.getString(R.string.country_niger_number), context.getString(R.string.country_niger_name))); countries.add(new Country(context.getString(R.string.country_nigeria_code), context.getString(R.string.country_nigeria_number), context.getString(R.string.country_nigeria_name))); countries.add(new Country(context.getString(R.string.country_niue_code), context.getString(R.string.country_niue_number), context.getString(R.string.country_niue_name))); countries.add(new Country(context.getString(R.string.country_north_korea_code), context.getString(R.string.country_north_korea_number), context.getString(R.string.country_north_korea_name))); countries.add(new Country(context.getString(R.string.country_norway_code), context.getString(R.string.country_norway_number), context.getString(R.string.country_norway_name))); countries.add(new Country(context.getString(R.string.country_oman_code), context.getString(R.string.country_oman_number), context.getString(R.string.country_oman_name))); countries.add(new Country(context.getString(R.string.country_pakistan_code), context.getString(R.string.country_pakistan_number), context.getString(R.string.country_pakistan_name))); countries.add(new Country(context.getString(R.string.country_palau_code), context.getString(R.string.country_palau_number), context.getString(R.string.country_palau_name))); countries.add(new Country(context.getString(R.string.country_panama_code), context.getString(R.string.country_panama_number), context.getString(R.string.country_panama_name))); countries.add(new Country(context.getString(R.string.country_papua_new_guinea_code), context.getString(R.string.country_papua_new_guinea_number), context.getString(R.string.country_papua_new_guinea_name))); countries.add(new Country(context.getString(R.string.country_paraguay_code), context.getString(R.string.country_paraguay_number), context.getString(R.string.country_paraguay_name))); countries.add(new Country(context.getString(R.string.country_peru_code), context.getString(R.string.country_peru_number), context.getString(R.string.country_peru_name))); countries.add(new Country(context.getString(R.string.country_philippines_code), context.getString(R.string.country_philippines_number), context.getString(R.string.country_philippines_name))); countries.add(new Country(context.getString(R.string.country_pitcairn_code), context.getString(R.string.country_pitcairn_number), context.getString(R.string.country_pitcairn_name))); countries.add(new Country(context.getString(R.string.country_poland_code), context.getString(R.string.country_poland_number), context.getString(R.string.country_poland_name))); countries.add(new Country(context.getString(R.string.country_portugal_code), context.getString(R.string.country_portugal_number), context.getString(R.string.country_portugal_name))); countries.add(new Country(context.getString(R.string.country_puerto_rico_code), context.getString(R.string.country_puerto_rico_number), context.getString(R.string.country_puerto_rico_name))); countries.add(new Country(context.getString(R.string.country_qatar_code), context.getString(R.string.country_qatar_number), context.getString(R.string.country_qatar_name))); countries.add(new Country(context.getString(R.string.country_r\u00e9union_code), context.getString(R.string.country_r\u00e9union_number), context.getString(R.string.country_r\u00e9union_name))); countries.add(new Country(context.getString(R.string.country_romania_code), context.getString(R.string.country_romania_number), context.getString(R.string.country_romania_name))); countries.add(new Country(context.getString(R.string.country_russian_federation_code), context.getString(R.string.country_russian_federation_number), context.getString(R.string.country_russian_federation_name))); countries.add(new Country(context.getString(R.string.country_rwanda_code), context.getString(R.string.country_rwanda_number), context.getString(R.string.country_rwanda_name))); countries.add(new Country(context.getString(R.string.country_saint_barth\u00e9lemy_code), context.getString(R.string.country_saint_barth\u00e9lemy_number), context.getString(R.string.country_saint_barth\u00e9lemy_name))); countries.add(new Country(context.getString(R.string.country_saint_kitts_and_nevis_code), context.getString(R.string.country_saint_kitts_and_nevis_number), context.getString(R.string.country_saint_kitts_and_nevis_name))); countries.add(new Country(context.getString(R.string.country_saint_lucia_code), context.getString(R.string.country_saint_lucia_number), context.getString(R.string.country_saint_lucia_name))); countries.add(new Country(context.getString(R.string.country_saint_vincent_the_grenadines_code), context.getString(R.string.country_saint_vincent_the_grenadines_number), context.getString(R.string.country_saint_vincent_the_grenadines_name))); countries.add(new Country(context.getString(R.string.country_samoa_code), context.getString(R.string.country_samoa_number), context.getString(R.string.country_samoa_name))); countries.add(new Country(context.getString(R.string.country_san_marino_code), context.getString(R.string.country_san_marino_number), context.getString(R.string.country_san_marino_name))); countries.add(new Country(context.getString(R.string.country_sao_tome_and_principe_code), context.getString(R.string.country_sao_tome_and_principe_number), context.getString(R.string.country_sao_tome_and_principe_name))); countries.add(new Country(context.getString(R.string.country_saudi_arabia_code), context.getString(R.string.country_saudi_arabia_number), context.getString(R.string.country_saudi_arabia_name))); countries.add(new Country(context.getString(R.string.country_senegal_code), context.getString(R.string.country_senegal_number), context.getString(R.string.country_senegal_name))); countries.add(new Country(context.getString(R.string.country_serbia_code), context.getString(R.string.country_serbia_number), context.getString(R.string.country_serbia_name))); countries.add(new Country(context.getString(R.string.country_seychelles_code), context.getString(R.string.country_seychelles_number), context.getString(R.string.country_seychelles_name))); countries.add(new Country(context.getString(R.string.country_sierra_leone_code), context.getString(R.string.country_sierra_leone_number), context.getString(R.string.country_sierra_leone_name))); countries.add(new Country(context.getString(R.string.country_singapore_code), context.getString(R.string.country_singapore_number), context.getString(R.string.country_singapore_name))); countries.add(new Country(context.getString(R.string.country_sint_maarten_code), context.getString(R.string.country_sint_maarten_number), context.getString(R.string.country_sint_maarten_name))); countries.add(new Country(context.getString(R.string.country_slovakia_code), context.getString(R.string.country_slovakia_number), context.getString(R.string.country_slovakia_name))); countries.add(new Country(context.getString(R.string.country_slovenia_code), context.getString(R.string.country_slovenia_number), context.getString(R.string.country_slovenia_name))); countries.add(new Country(context.getString(R.string.country_solomon_islands_code), context.getString(R.string.country_solomon_islands_number), context.getString(R.string.country_solomon_islands_name))); countries.add(new Country(context.getString(R.string.country_somalia_code), context.getString(R.string.country_somalia_number), context.getString(R.string.country_somalia_name))); countries.add(new Country(context.getString(R.string.country_south_africa_code), context.getString(R.string.country_south_africa_number), context.getString(R.string.country_south_africa_name))); countries.add(new Country(context.getString(R.string.country_south_korea_code), context.getString(R.string.country_south_korea_number), context.getString(R.string.country_south_korea_name))); countries.add(new Country(context.getString(R.string.country_spain_code), context.getString(R.string.country_spain_number), context.getString(R.string.country_spain_name))); countries.add(new Country(context.getString(R.string.country_sri_lanka_code), context.getString(R.string.country_sri_lanka_number), context.getString(R.string.country_sri_lanka_name))); countries.add(new Country(context.getString(R.string.country_saint_helena_code), context.getString(R.string.country_saint_helena_number), context.getString(R.string.country_saint_helena_name))); countries.add(new Country(context.getString(R.string.country_saint_pierre_and_miquelon_code), context.getString(R.string.country_saint_pierre_and_miquelon_number), context.getString(R.string.country_saint_pierre_and_miquelon_name))); countries.add(new Country(context.getString(R.string.country_sudan_code), context.getString(R.string.country_sudan_number), context.getString(R.string.country_sudan_name))); countries.add(new Country(context.getString(R.string.country_suriname_code), context.getString(R.string.country_suriname_number), context.getString(R.string.country_suriname_name))); countries.add(new Country(context.getString(R.string.country_swaziland_code), context.getString(R.string.country_swaziland_number), context.getString(R.string.country_swaziland_name))); countries.add(new Country(context.getString(R.string.country_sweden_code), context.getString(R.string.country_sweden_number), context.getString(R.string.country_sweden_name))); countries.add(new Country(context.getString(R.string.country_switzerland_code), context.getString(R.string.country_switzerland_number), context.getString(R.string.country_switzerland_name))); countries.add(new Country(context.getString(R.string.country_syrian_arab_republic_code), context.getString(R.string.country_syrian_arab_republic_number), context.getString(R.string.country_syrian_arab_republic_name))); countries.add(new Country(context.getString(R.string.country_taiwan_code), context.getString(R.string.country_taiwan_number), context.getString(R.string.country_taiwan_name))); countries.add(new Country(context.getString(R.string.country_tajikistan_code), context.getString(R.string.country_tajikistan_number), context.getString(R.string.country_tajikistan_name))); countries.add(new Country(context.getString(R.string.country_tanzania_code), context.getString(R.string.country_tanzania_number), context.getString(R.string.country_tanzania_name))); countries.add(new Country(context.getString(R.string.country_thailand_code), context.getString(R.string.country_thailand_number), context.getString(R.string.country_thailand_name))); countries.add(new Country(context.getString(R.string.country_togo_code), context.getString(R.string.country_togo_number), context.getString(R.string.country_togo_name))); countries.add(new Country(context.getString(R.string.country_tokelau_code), context.getString(R.string.country_tokelau_number), context.getString(R.string.country_tokelau_name))); countries.add(new Country(context.getString(R.string.country_tonga_code), context.getString(R.string.country_tonga_number), context.getString(R.string.country_tonga_name))); countries.add(new Country(context.getString(R.string.country_trinidad_tobago_code), context.getString(R.string.country_trinidad_tobago_number), context.getString(R.string.country_trinidad_tobago_name))); countries.add(new Country(context.getString(R.string.country_tunisia_code), context.getString(R.string.country_tunisia_number), context.getString(R.string.country_tunisia_name))); countries.add(new Country(context.getString(R.string.country_turkey_code), context.getString(R.string.country_turkey_number), context.getString(R.string.country_turkey_name))); countries.add(new Country(context.getString(R.string.country_turkmenistan_code), context.getString(R.string.country_turkmenistan_number), context.getString(R.string.country_turkmenistan_name))); countries.add(new Country(context.getString(R.string.country_turks_and_caicos_islands_code), context.getString(R.string.country_turks_and_caicos_islands_number), context.getString(R.string.country_turks_and_caicos_islands_name))); countries.add(new Country(context.getString(R.string.country_tuvalu_code), context.getString(R.string.country_tuvalu_number), context.getString(R.string.country_tuvalu_name))); countries.add(new Country(context.getString(R.string.country_united_arab_emirates_code), context.getString(R.string.country_united_arab_emirates_number), context.getString(R.string.country_united_arab_emirates_name))); countries.add(new Country(context.getString(R.string.country_uganda_code), context.getString(R.string.country_uganda_number), context.getString(R.string.country_uganda_name))); countries.add(new Country(context.getString(R.string.country_united_kingdom_code), context.getString(R.string.country_united_kingdom_number), context.getString(R.string.country_united_kingdom_name))); countries.add(new Country(context.getString(R.string.country_ukraine_code), context.getString(R.string.country_ukraine_number), context.getString(R.string.country_ukraine_name))); countries.add(new Country(context.getString(R.string.country_uruguay_code), context.getString(R.string.country_uruguay_number), context.getString(R.string.country_uruguay_name))); countries.add(new Country(context.getString(R.string.country_united_states_code), context.getString(R.string.country_united_states_number), context.getString(R.string.country_united_states_name))); countries.add(new Country(context.getString(R.string.country_us_virgin_islands_code), context.getString(R.string.country_us_virgin_islands_number), context.getString(R.string.country_us_virgin_islands_name))); countries.add(new Country(context.getString(R.string.country_uzbekistan_code), context.getString(R.string.country_uzbekistan_number), context.getString(R.string.country_uzbekistan_name))); countries.add(new Country(context.getString(R.string.country_vanuatu_code), context.getString(R.string.country_vanuatu_number), context.getString(R.string.country_vanuatu_name))); countries.add(new Country(context.getString(R.string.country_holy_see_vatican_city_state_code), context.getString(R.string.country_holy_see_vatican_city_state_number), context.getString(R.string.country_holy_see_vatican_city_state_name))); countries.add(new Country(context.getString(R.string.country_venezuela_code), context.getString(R.string.country_venezuela_number), context.getString(R.string.country_venezuela_name))); countries.add(new Country(context.getString(R.string.country_viet_nam_code), context.getString(R.string.country_viet_nam_number), context.getString(R.string.country_viet_nam_name))); countries.add(new Country(context.getString(R.string.country_wallis_and_futuna_code), context.getString(R.string.country_wallis_and_futuna_number), context.getString(R.string.country_wallis_and_futuna_name))); countries.add(new Country(context.getString(R.string.country_yemen_code), context.getString(R.string.country_yemen_number), context.getString(R.string.country_yemen_name))); countries.add(new Country(context.getString(R.string.country_zambia_code), context.getString(R.string.country_zambia_number), context.getString(R.string.country_zambia_name))); countries.add(new Country(context.getString(R.string.country_zimbabwe_code), context.getString(R.string.country_zimbabwe_number), context.getString(R.string.country_zimbabwe_name))); return countries; }\nstatic List<Country> getAllCountries(Context context) { if (countries != null) { return countries; } countries = new ArrayList<>(); countries.add(new Country(context.getString(R.string.country_afghanistan_code), context.getString(R.string.country_afghanistan_number), context.getString(R.string.country_afghanistan_name))); countries.add(new Country(context.getString(R.string.country_albania_code), context.getString(R.string.country_albania_number), context.getString(R.string.country_albania_name))); countries.add(new Country(context.getString(R.string.country_algeria_code), context.getString(R.string.country_algeria_number), context.getString(R.string.country_algeria_name))); countries.add(new Country(context.getString(R.string.country_andorra_code), context.getString(R.string.country_andorra_number), context.getString(R.string.country_andorra_name))); countries.add(new Country(context.getString(R.string.country_angola_code), context.getString(R.string.country_angola_number), context.getString(R.string.country_angola_name))); countries.add(new Country(context.getString(R.string.country_anguilla_code), context.getString(R.string.country_anguilla_number), context.getString(R.string.country_anguilla_name))); countries.add(new Country(context.getString(R.string.country_antarctica_code), context.getString(R.string.country_antarctica_number), context.getString(R.string.country_antarctica_name))); countries.add(new Country(context.getString(R.string.country_antigua_and_barbuda_code), context.getString(R.string.country_antigua_and_barbuda_number), context.getString(R.string.country_antigua_and_barbuda_name))); countries.add(new Country(context.getString(R.string.country_argentina_code), context.getString(R.string.country_argentina_number), context.getString(R.string.country_argentina_name))); countries.add(new Country(context.getString(R.string.country_armenia_code), context.getString(R.string.country_armenia_number), context.getString(R.string.country_armenia_name))); countries.add(new Country(context.getString(R.string.country_aruba_code), context.getString(R.string.country_aruba_number), context.getString(R.string.country_aruba_name))); countries.add(new Country(context.getString(R.string.country_australia_code), context.getString(R.string.country_australia_number), context.getString(R.string.country_australia_name))); countries.add(new Country(context.getString(R.string.country_azerbaijan_code), context.getString(R.string.country_azerbaijan_number), context.getString(R.string.country_azerbaijan_name))); countries.add(new Country(context.getString(R.string.country_bahamas_code), context.getString(R.string.country_bahamas_number), context.getString(R.string.country_bahamas_name))); countries.add(new Country(context.getString(R.string.country_bahrain_code), context.getString(R.string.country_bahrain_number), context.getString(R.string.country_bahrain_name))); countries.add(new Country(context.getString(R.string.country_bangladesh_code), context.getString(R.string.country_bangladesh_number), context.getString(R.string.country_bangladesh_name))); countries.add(new Country(context.getString(R.string.country_barbados_code), context.getString(R.string.country_barbados_number), context.getString(R.string.country_barbados_name))); countries.add(new Country(context.getString(R.string.country_belarus_code), context.getString(R.string.country_belarus_number), context.getString(R.string.country_belarus_name))); countries.add(new Country(context.getString(R.string.country_belgium_code), context.getString(R.string.country_belgium_number), context.getString(R.string.country_belgium_name))); countries.add(new Country(context.getString(R.string.country_belize_code), context.getString(R.string.country_belize_number), context.getString(R.string.country_belize_name))); countries.add(new Country(context.getString(R.string.country_benin_code), context.getString(R.string.country_benin_number), context.getString(R.string.country_benin_name))); countries.add(new Country(context.getString(R.string.country_bermuda_code), context.getString(R.string.country_bermuda_number), context.getString(R.string.country_bermuda_name))); countries.add(new Country(context.getString(R.string.country_bhutan_code), context.getString(R.string.country_bhutan_number), context.getString(R.string.country_bhutan_name))); countries.add(new Country(context.getString(R.string.country_bolivia_code), context.getString(R.string.country_bolivia_number), context.getString(R.string.country_bolivia_name))); countries.add(new Country(context.getString(R.string.country_bosnia_and_herzegovina_code), context.getString(R.string.country_bosnia_and_herzegovina_number), context.getString(R.string.country_bosnia_and_herzegovina_name))); countries.add(new Country(context.getString(R.string.country_botswana_code), context.getString(R.string.country_botswana_number), context.getString(R.string.country_botswana_name))); countries.add(new Country(context.getString(R.string.country_brazil_code), context.getString(R.string.country_brazil_number), context.getString(R.string.country_brazil_name))); countries.add(new Country(context.getString(R.string.country_british_virgin_islands_code), context.getString(R.string.country_british_virgin_islands_number), context.getString(R.string.country_british_virgin_islands_name))); countries.add(new Country(context.getString(R.string.country_brunei_darussalam_code), context.getString(R.string.country_brunei_darussalam_number), context.getString(R.string.country_brunei_darussalam_name))); countries.add(new Country(context.getString(R.string.country_bulgaria_code), context.getString(R.string.country_bulgaria_number), context.getString(R.string.country_bulgaria_name))); countries.add(new Country(context.getString(R.string.country_burkina_faso_code), context.getString(R.string.country_burkina_faso_number), context.getString(R.string.country_burkina_faso_name))); countries.add(new Country(context.getString(R.string.country_burundi_code), context.getString(R.string.country_burundi_number), context.getString(R.string.country_burundi_name))); countries.add(new Country(context.getString(R.string.country_cambodia_code), context.getString(R.string.country_cambodia_number), context.getString(R.string.country_cambodia_name))); countries.add(new Country(context.getString(R.string.country_cameroon_code), context.getString(R.string.country_cameroon_number), context.getString(R.string.country_cameroon_name))); countries.add(new Country(context.getString(R.string.country_canada_code), context.getString(R.string.country_canada_number), context.getString(R.string.country_canada_name))); countries.add(new Country(context.getString(R.string.country_cape_verde_code), context.getString(R.string.country_cape_verde_number), context.getString(R.string.country_cape_verde_name))); countries.add(new Country(context.getString(R.string.country_cayman_islands_code), context.getString(R.string.country_cayman_islands_number), context.getString(R.string.country_cayman_islands_name))); countries.add(new Country(context.getString(R.string.country_central_african_republic_code), context.getString(R.string.country_central_african_republic_number), context.getString(R.string.country_central_african_republic_name))); countries.add(new Country(context.getString(R.string.country_chad_code), context.getString(R.string.country_chad_number), context.getString(R.string.country_chad_name))); countries.add(new Country(context.getString(R.string.country_chile_code), context.getString(R.string.country_chile_number), context.getString(R.string.country_chile_name))); countries.add(new Country(context.getString(R.string.country_china_code), context.getString(R.string.country_china_number), context.getString(R.string.country_china_name))); countries.add(new Country(context.getString(R.string.country_christmas_island_code), context.getString(R.string.country_christmas_island_number), context.getString(R.string.country_christmas_island_name))); countries.add(new Country(context.getString(R.string.country_cocos_keeling_islands_code), context.getString(R.string.country_cocos_keeling_islands_number), context.getString(R.string.country_cocos_keeling_islands_name))); countries.add(new Country(context.getString(R.string.country_colombia_code), context.getString(R.string.country_colombia_number), context.getString(R.string.country_colombia_name))); countries.add(new Country(context.getString(R.string.country_comoros_code), context.getString(R.string.country_comoros_number), context.getString(R.string.country_comoros_name))); countries.add(new Country(context.getString(R.string.country_congo_code), context.getString(R.string.country_congo_number), context.getString(R.string.country_congo_name))); countries.add(new Country(context.getString(R.string.country_the_democratic_republic_of_congo_code), context.getString(R.string.country_the_democratic_republic_of_congo_number), context.getString(R.string.country_the_democratic_republic_of_congo_name))); countries.add(new Country(context.getString(R.string.country_cook_islands_code), context.getString(R.string.country_cook_islands_number), context.getString(R.string.country_cook_islands_name))); countries.add(new Country(context.getString(R.string.country_costa_rica_code), context.getString(R.string.country_costa_rica_number), context.getString(R.string.country_costa_rica_name))); countries.add(new Country(context.getString(R.string.country_croatia_code), context.getString(R.string.country_croatia_number), context.getString(R.string.country_croatia_name))); countries.add(new Country(context.getString(R.string.country_cuba_code), context.getString(R.string.country_cuba_number), context.getString(R.string.country_cuba_name))); countries.add(new Country(context.getString(R.string.country_cyprus_code), context.getString(R.string.country_cyprus_number), context.getString(R.string.country_cyprus_name))); countries.add(new Country(context.getString(R.string.country_czech_republic_code), context.getString(R.string.country_czech_republic_number), context.getString(R.string.country_czech_republic_name))); countries.add(new Country(context.getString(R.string.country_denmark_code), context.getString(R.string.country_denmark_number), context.getString(R.string.country_denmark_name))); countries.add(new Country(context.getString(R.string.country_djibouti_code), context.getString(R.string.country_djibouti_number), context.getString(R.string.country_djibouti_name))); countries.add(new Country(context.getString(R.string.country_dominica_code), context.getString(R.string.country_dominica_number), context.getString(R.string.country_dominica_name))); countries.add(new Country(context.getString(R.string.country_dominican_republic_code), context.getString(R.string.country_dominican_republic_number), context.getString(R.string.country_dominican_republic_name))); countries.add(new Country(context.getString(R.string.country_timor_leste_code), context.getString(R.string.country_timor_leste_number), context.getString(R.string.country_timor_leste_name))); countries.add(new Country(context.getString(R.string.country_ecuador_code), context.getString(R.string.country_ecuador_number), context.getString(R.string.country_ecuador_name))); countries.add(new Country(context.getString(R.string.country_egypt_code), context.getString(R.string.country_egypt_number), context.getString(R.string.country_egypt_name))); countries.add(new Country(context.getString(R.string.country_el_salvador_code), context.getString(R.string.country_el_salvador_number), context.getString(R.string.country_el_salvador_name))); countries.add(new Country(context.getString(R.string.country_equatorial_guinea_code), context.getString(R.string.country_equatorial_guinea_number), context.getString(R.string.country_equatorial_guinea_name))); countries.add(new Country(context.getString(R.string.country_eritrea_code), context.getString(R.string.country_eritrea_number), context.getString(R.string.country_eritrea_name))); countries.add(new Country(context.getString(R.string.country_estonia_code), context.getString(R.string.country_estonia_number), context.getString(R.string.country_estonia_name))); countries.add(new Country(context.getString(R.string.country_ethiopia_code), context.getString(R.string.country_ethiopia_number), context.getString(R.string.country_ethiopia_name))); countries.add(new Country(context.getString(R.string.country_falkland_islands_malvinas_code), context.getString(R.string.country_falkland_islands_malvinas_number), context.getString(R.string.country_falkland_islands_malvinas_name))); countries.add(new Country(context.getString(R.string.country_faroe_islands_code), context.getString(R.string.country_faroe_islands_number), context.getString(R.string.country_faroe_islands_name))); countries.add(new Country(context.getString(R.string.country_fiji_code), context.getString(R.string.country_fiji_number), context.getString(R.string.country_fiji_name))); countries.add(new Country(context.getString(R.string.country_finland_code), context.getString(R.string.country_finland_number), context.getString(R.string.country_finland_name))); countries.add(new Country(context.getString(R.string.country_france_code), context.getString(R.string.country_france_number), context.getString(R.string.country_france_name))); countries.add(new Country(context.getString(R.string.country_french_guyana_code), context.getString(R.string.country_french_guyana_number), context.getString(R.string.country_french_guyana_name))); countries.add(new Country(context.getString(R.string.country_french_polynesia_code), context.getString(R.string.country_french_polynesia_number), context.getString(R.string.country_french_polynesia_name))); countries.add(new Country(context.getString(R.string.country_gabon_code), context.getString(R.string.country_gabon_number), context.getString(R.string.country_gabon_name))); countries.add(new Country(context.getString(R.string.country_gambia_code), context.getString(R.string.country_gambia_number), context.getString(R.string.country_gambia_name))); countries.add(new Country(context.getString(R.string.country_georgia_code), context.getString(R.string.country_georgia_number), context.getString(R.string.country_georgia_name))); countries.add(new Country(context.getString(R.string.country_germany_code), context.getString(R.string.country_germany_number), context.getString(R.string.country_germany_name))); countries.add(new Country(context.getString(R.string.country_ghana_code), context.getString(R.string.country_ghana_number), context.getString(R.string.country_ghana_name))); countries.add(new Country(context.getString(R.string.country_gibraltar_code), context.getString(R.string.country_gibraltar_number), context.getString(R.string.country_gibraltar_name))); countries.add(new Country(context.getString(R.string.country_greece_code), context.getString(R.string.country_greece_number), context.getString(R.string.country_greece_name))); countries.add(new Country(context.getString(R.string.country_greenland_code), context.getString(R.string.country_greenland_number), context.getString(R.string.country_greenland_name))); countries.add(new Country(context.getString(R.string.country_grenada_code), context.getString(R.string.country_grenada_number), context.getString(R.string.country_grenada_name))); countries.add(new Country(context.getString(R.string.country_guatemala_code), context.getString(R.string.country_guatemala_number), context.getString(R.string.country_guatemala_name))); countries.add(new Country(context.getString(R.string.country_guinea_code), context.getString(R.string.country_guinea_number), context.getString(R.string.country_guinea_name))); countries.add(new Country(context.getString(R.string.country_guinea_bissau_code), context.getString(R.string.country_guinea_bissau_number), context.getString(R.string.country_guinea_bissau_name))); countries.add(new Country(context.getString(R.string.country_guyana_code), context.getString(R.string.country_guyana_number), context.getString(R.string.country_guyana_name))); countries.add(new Country(context.getString(R.string.country_haiti_code), context.getString(R.string.country_haiti_number), context.getString(R.string.country_haiti_name))); countries.add(new Country(context.getString(R.string.country_honduras_code), context.getString(R.string.country_honduras_number), context.getString(R.string.country_honduras_name))); countries.add(new Country(context.getString(R.string.country_hong_kong_code), context.getString(R.string.country_hong_kong_number), context.getString(R.string.country_hong_kong_name))); countries.add(new Country(context.getString(R.string.country_hungary_code), context.getString(R.string.country_hungary_number), context.getString(R.string.country_hungary_name))); countries.add(new Country(context.getString(R.string.country_india_code), context.getString(R.string.country_india_number), context.getString(R.string.country_india_name))); countries.add(new Country(context.getString(R.string.country_indonesia_code), context.getString(R.string.country_indonesia_number), context.getString(R.string.country_indonesia_name))); countries.add(new Country(context.getString(R.string.country_iran_code), context.getString(R.string.country_iran_number), context.getString(R.string.country_iran_name))); countries.add(new Country(context.getString(R.string.country_iraq_code), context.getString(R.string.country_iraq_number), context.getString(R.string.country_iraq_name))); countries.add(new Country(context.getString(R.string.country_ireland_code), context.getString(R.string.country_ireland_number), context.getString(R.string.country_ireland_name))); countries.add(new Country(context.getString(R.string.country_isle_of_man_code), context.getString(R.string.country_isle_of_man_number), context.getString(R.string.country_isle_of_man_name))); countries.add(new Country(context.getString(R.string.country_israel_code), context.getString(R.string.country_israel_number), context.getString(R.string.country_israel_name))); countries.add(new Country(context.getString(R.string.country_italy_code), context.getString(R.string.country_italy_number), context.getString(R.string.country_italy_name))); countries.add(new Country(context.getString(R.string.country_c\u00f4te_d_ivoire_code), context.getString(R.string.country_c\u00f4te_d_ivoire_number), context.getString(R.string.country_c\u00f4te_d_ivoire_name))); countries.add(new Country(context.getString(R.string.country_jamaica_code), context.getString(R.string.country_jamaica_number), context.getString(R.string.country_jamaica_name))); countries.add(new Country(context.getString(R.string.country_japan_code), context.getString(R.string.country_japan_number), context.getString(R.string.country_japan_name))); countries.add(new Country(context.getString(R.string.country_jordan_code), context.getString(R.string.country_jordan_number), context.getString(R.string.country_jordan_name))); countries.add(new Country(context.getString(R.string.country_kazakhstan_code), context.getString(R.string.country_kazakhstan_number), context.getString(R.string.country_kazakhstan_name))); countries.add(new Country(context.getString(R.string.country_kenya_code), context.getString(R.string.country_kenya_number), context.getString(R.string.country_kenya_name))); countries.add(new Country(context.getString(R.string.country_kiribati_code), context.getString(R.string.country_kiribati_number), context.getString(R.string.country_kiribati_name))); countries.add(new Country(context.getString(R.string.country_kuwait_code), context.getString(R.string.country_kuwait_number), context.getString(R.string.country_kuwait_name))); countries.add(new Country(context.getString(R.string.country_kyrgyzstan_code), context.getString(R.string.country_kyrgyzstan_number), context.getString(R.string.country_kyrgyzstan_name))); countries.add(new Country(context.getString(R.string.country_lao_peoples_democratic_republic_code), context.getString(R.string.country_lao_peoples_democratic_republic_number), context.getString(R.string.country_lao_peoples_democratic_republic_name))); countries.add(new Country(context.getString(R.string.country_latvia_code), context.getString(R.string.country_latvia_number), context.getString(R.string.country_latvia_name))); countries.add(new Country(context.getString(R.string.country_lebanon_code), context.getString(R.string.country_lebanon_number), context.getString(R.string.country_lebanon_name))); countries.add(new Country(context.getString(R.string.country_lesotho_code), context.getString(R.string.country_lesotho_number), context.getString(R.string.country_lesotho_name))); countries.add(new Country(context.getString(R.string.country_liberia_code), context.getString(R.string.country_liberia_number), context.getString(R.string.country_liberia_name))); countries.add(new Country(context.getString(R.string.country_libya_code), context.getString(R.string.country_libya_number), context.getString(R.string.country_libya_name))); countries.add(new Country(context.getString(R.string.country_liechtenstein_code), context.getString(R.string.country_liechtenstein_number), context.getString(R.string.country_liechtenstein_name))); countries.add(new Country(context.getString(R.string.country_lithuania_code), context.getString(R.string.country_lithuania_number), context.getString(R.string.country_lithuania_name))); countries.add(new Country(context.getString(R.string.country_luxembourg_code), context.getString(R.string.country_luxembourg_number), context.getString(R.string.country_luxembourg_name))); countries.add(new Country(context.getString(R.string.country_macao_code), context.getString(R.string.country_macao_number), context.getString(R.string.country_macao_name))); countries.add(new Country(context.getString(R.string.country_macedonia_code), context.getString(R.string.country_macedonia_number), context.getString(R.string.country_macedonia_name))); countries.add(new Country(context.getString(R.string.country_madagascar_code), context.getString(R.string.country_madagascar_number), context.getString(R.string.country_madagascar_name))); countries.add(new Country(context.getString(R.string.country_malawi_code), context.getString(R.string.country_malawi_number), context.getString(R.string.country_malawi_name))); countries.add(new Country(context.getString(R.string.country_malaysia_code), context.getString(R.string.country_malaysia_number), context.getString(R.string.country_malaysia_name))); countries.add(new Country(context.getString(R.string.country_maldives_code), context.getString(R.string.country_maldives_number), context.getString(R.string.country_maldives_name))); countries.add(new Country(context.getString(R.string.country_mali_code), context.getString(R.string.country_mali_number), context.getString(R.string.country_mali_name))); countries.add(new Country(context.getString(R.string.country_malta_code), context.getString(R.string.country_malta_number), context.getString(R.string.country_malta_name))); countries.add(new Country(context.getString(R.string.country_marshall_islands_code), context.getString(R.string.country_marshall_islands_number), context.getString(R.string.country_marshall_islands_name))); countries.add(new Country(context.getString(R.string.country_martinique_code), context.getString(R.string.country_martinique_number), context.getString(R.string.country_martinique_name))); countries.add(new Country(context.getString(R.string.country_mauritania_code), context.getString(R.string.country_mauritania_number), context.getString(R.string.country_mauritania_name))); countries.add(new Country(context.getString(R.string.country_mauritius_code), context.getString(R.string.country_mauritius_number), context.getString(R.string.country_mauritius_name))); countries.add(new Country(context.getString(R.string.country_mayotte_code), context.getString(R.string.country_mayotte_number), context.getString(R.string.country_mayotte_name))); countries.add(new Country(context.getString(R.string.country_mexico_code), context.getString(R.string.country_mexico_number), context.getString(R.string.country_mexico_name))); countries.add(new Country(context.getString(R.string.country_micronesia_code), context.getString(R.string.country_micronesia_number), context.getString(R.string.country_micronesia_name))); countries.add(new Country(context.getString(R.string.country_moldova_code), context.getString(R.string.country_moldova_number), context.getString(R.string.country_moldova_name))); countries.add(new Country(context.getString(R.string.country_monaco_code), context.getString(R.string.country_monaco_number), context.getString(R.string.country_monaco_name))); countries.add(new Country(context.getString(R.string.country_mongolia_code), context.getString(R.string.country_mongolia_number), context.getString(R.string.country_mongolia_name))); countries.add(new Country(context.getString(R.string.country_montserrat_code), context.getString(R.string.country_montserrat_number), context.getString(R.string.country_montserrat_name))); countries.add(new Country(context.getString(R.string.country_montenegro_code), context.getString(R.string.country_montenegro_number), context.getString(R.string.country_montenegro_name))); countries.add(new Country(context.getString(R.string.country_morocco_code), context.getString(R.string.country_morocco_number), context.getString(R.string.country_morocco_name))); countries.add(new Country(context.getString(R.string.country_mozambique_code), context.getString(R.string.country_mozambique_number), context.getString(R.string.country_mozambique_name))); countries.add(new Country(context.getString(R.string.country_namibia_code), context.getString(R.string.country_namibia_number), context.getString(R.string.country_namibia_name))); countries.add(new Country(context.getString(R.string.country_nauru_code), context.getString(R.string.country_nauru_number), context.getString(R.string.country_nauru_name))); countries.add(new Country(context.getString(R.string.country_nepal_code), context.getString(R.string.country_nepal_number), context.getString(R.string.country_nepal_name))); countries.add(new Country(context.getString(R.string.country_netherlands_code), context.getString(R.string.country_netherlands_number), context.getString(R.string.country_netherlands_name))); countries.add(new Country(context.getString(R.string.country_new_caledonia_code), context.getString(R.string.country_new_caledonia_number), context.getString(R.string.country_new_caledonia_name))); countries.add(new Country(context.getString(R.string.country_new_zealand_code), context.getString(R.string.country_new_zealand_number), context.getString(R.string.country_new_zealand_name))); countries.add(new Country(context.getString(R.string.country_nicaragua_code), context.getString(R.string.country_nicaragua_number), context.getString(R.string.country_nicaragua_name))); countries.add(new Country(context.getString(R.string.country_niger_code), context.getString(R.string.country_niger_number), context.getString(R.string.country_niger_name))); countries.add(new Country(context.getString(R.string.country_nigeria_code), context.getString(R.string.country_nigeria_number), context.getString(R.string.country_nigeria_name))); countries.add(new Country(context.getString(R.string.country_niue_code), context.getString(R.string.country_niue_number), context.getString(R.string.country_niue_name))); countries.add(new Country(context.getString(R.string.country_north_korea_code), context.getString(R.string.country_north_korea_number), context.getString(R.string.country_north_korea_name))); countries.add(new Country(context.getString(R.string.country_norway_code), context.getString(R.string.country_norway_number), context.getString(R.string.country_norway_name))); countries.add(new Country(context.getString(R.string.country_oman_code), context.getString(R.string.country_oman_number), context.getString(R.string.country_oman_name))); countries.add(new Country(context.getString(R.string.country_pakistan_code), context.getString(R.string.country_pakistan_number), context.getString(R.string.country_pakistan_name))); countries.add(new Country(context.getString(R.string.country_palau_code), context.getString(R.string.country_palau_number), context.getString(R.string.country_palau_name))); countries.add(new Country(context.getString(R.string.country_panama_code), context.getString(R.string.country_panama_number), context.getString(R.string.country_panama_name))); countries.add(new Country(context.getString(R.string.country_papua_new_guinea_code), context.getString(R.string.country_papua_new_guinea_number), context.getString(R.string.country_papua_new_guinea_name))); countries.add(new Country(context.getString(R.string.country_paraguay_code), context.getString(R.string.country_paraguay_number), context.getString(R.string.country_paraguay_name))); countries.add(new Country(context.getString(R.string.country_peru_code), context.getString(R.string.country_peru_number), context.getString(R.string.country_peru_name))); countries.add(new Country(context.getString(R.string.country_philippines_code), context.getString(R.string.country_philippines_number), context.getString(R.string.country_philippines_name))); countries.add(new Country(context.getString(R.string.country_pitcairn_code), context.getString(R.string.country_pitcairn_number), context.getString(R.string.country_pitcairn_name))); countries.add(new Country(context.getString(R.string.country_poland_code), context.getString(R.string.country_poland_number), context.getString(R.string.country_poland_name))); countries.add(new Country(context.getString(R.string.country_portugal_code), context.getString(R.string.country_portugal_number), context.getString(R.string.country_portugal_name))); countries.add(new Country(context.getString(R.string.country_puerto_rico_code), context.getString(R.string.country_puerto_rico_number), context.getString(R.string.country_puerto_rico_name))); countries.add(new Country(context.getString(R.string.country_qatar_code), context.getString(R.string.country_qatar_number), context.getString(R.string.country_qatar_name))); countries.add(new Country(context.getString(R.string.country_r\u00e9union_code), context.getString(R.string.country_r\u00e9union_number), context.getString(R.string.country_r\u00e9union_name))); countries.add(new Country(context.getString(R.string.country_romania_code), context.getString(R.string.country_romania_number), context.getString(R.string.country_romania_name))); countries.add(new Country(context.getString(R.string.country_russian_federation_code), context.getString(R.string.country_russian_federation_number), context.getString(R.string.country_russian_federation_name))); countries.add(new Country(context.getString(R.string.country_rwanda_code), context.getString(R.string.country_rwanda_number), context.getString(R.string.country_rwanda_name))); countries.add(new Country(context.getString(R.string.country_saint_barth\u00e9lemy_code), context.getString(R.string.country_saint_barth\u00e9lemy_number), context.getString(R.string.country_saint_barth\u00e9lemy_name))); countries.add(new Country(context.getString(R.string.country_saint_kitts_and_nevis_code), context.getString(R.string.country_saint_kitts_and_nevis_number), context.getString(R.string.country_saint_kitts_and_nevis_name))); countries.add(new Country(context.getString(R.string.country_saint_lucia_code), context.getString(R.string.country_saint_lucia_number), context.getString(R.string.country_saint_lucia_name))); countries.add(new Country(context.getString(R.string.country_saint_vincent_the_grenadines_code), context.getString(R.string.country_saint_vincent_the_grenadines_number), context.getString(R.string.country_saint_vincent_the_grenadines_name))); countries.add(new Country(context.getString(R.string.country_samoa_code), context.getString(R.string.country_samoa_number), context.getString(R.string.country_samoa_name))); countries.add(new Country(context.getString(R.string.country_san_marino_code), context.getString(R.string.country_san_marino_number), context.getString(R.string.country_san_marino_name))); countries.add(new Country(context.getString(R.string.country_sao_tome_and_principe_code), context.getString(R.string.country_sao_tome_and_principe_number), context.getString(R.string.country_sao_tome_and_principe_name))); countries.add(new Country(context.getString(R.string.country_saudi_arabia_code), context.getString(R.string.country_saudi_arabia_number), context.getString(R.string.country_saudi_arabia_name))); countries.add(new Country(context.getString(R.string.country_senegal_code), context.getString(R.string.country_senegal_number), context.getString(R.string.country_senegal_name))); countries.add(new Country(context.getString(R.string.country_serbia_code), context.getString(R.string.country_serbia_number), context.getString(R.string.country_serbia_name))); countries.add(new Country(context.getString(R.string.country_seychelles_code), context.getString(R.string.country_seychelles_number), context.getString(R.string.country_seychelles_name))); countries.add(new Country(context.getString(R.string.country_sierra_leone_code), context.getString(R.string.country_sierra_leone_number), context.getString(R.string.country_sierra_leone_name))); countries.add(new Country(context.getString(R.string.country_singapore_code), context.getString(R.string.country_singapore_number), context.getString(R.string.country_singapore_name))); countries.add(new Country(context.getString(R.string.country_sint_maarten_code), context.getString(R.string.country_sint_maarten_number), context.getString(R.string.country_sint_maarten_name))); countries.add(new Country(context.getString(R.string.country_slovakia_code), context.getString(R.string.country_slovakia_number), context.getString(R.string.country_slovakia_name))); countries.add(new Country(context.getString(R.string.country_slovenia_code), context.getString(R.string.country_slovenia_number), context.getString(R.string.country_slovenia_name))); countries.add(new Country(context.getString(R.string.country_solomon_islands_code), context.getString(R.string.country_solomon_islands_number), context.getString(R.string.country_solomon_islands_name))); countries.add(new Country(context.getString(R.string.country_somalia_code), context.getString(R.string.country_somalia_number), context.getString(R.string.country_somalia_name))); countries.add(new Country(context.getString(R.string.country_south_africa_code), context.getString(R.string.country_south_africa_number), context.getString(R.string.country_south_africa_name))); countries.add(new Country(context.getString(R.string.country_south_korea_code), context.getString(R.string.country_south_korea_number), context.getString(R.string.country_south_korea_name))); countries.add(new Country(context.getString(R.string.country_spain_code), context.getString(R.string.country_spain_number), context.getString(R.string.country_spain_name))); countries.add(new Country(context.getString(R.string.country_sri_lanka_code), context.getString(R.string.country_sri_lanka_number), context.getString(R.string.country_sri_lanka_name))); countries.add(new Country(context.getString(R.string.country_saint_helena_code), context.getString(R.string.country_saint_helena_number), context.getString(R.string.country_saint_helena_name))); countries.add(new Country(context.getString(R.string.country_saint_pierre_and_miquelon_code), context.getString(R.string.country_saint_pierre_and_miquelon_number), context.getString(R.string.country_saint_pierre_and_miquelon_name))); countries.add(new Country(context.getString(R.string.country_sudan_code), context.getString(R.string.country_sudan_number), context.getString(R.string.country_sudan_name))); countries.add(new Country(context.getString(R.string.country_suriname_code), context.getString(R.string.country_suriname_number), context.getString(R.string.country_suriname_name))); countries.add(new Country(context.getString(R.string.country_swaziland_code), context.getString(R.string.country_swaziland_number), context.getString(R.string.country_swaziland_name))); countries.add(new Country(context.getString(R.string.country_sweden_code), context.getString(R.string.country_sweden_number), context.getString(R.string.country_sweden_name))); countries.add(new Country(context.getString(R.string.country_switzerland_code), context.getString(R.string.country_switzerland_number), context.getString(R.string.country_switzerland_name))); countries.add(new Country(context.getString(R.string.country_syrian_arab_republic_code), context.getString(R.string.country_syrian_arab_republic_number), context.getString(R.string.country_syrian_arab_republic_name))); countries.add(new Country(context.getString(R.string.country_taiwan_code), context.getString(R.string.country_taiwan_number), context.getString(R.string.country_taiwan_name))); countries.add(new Country(context.getString(R.string.country_tajikistan_code), context.getString(R.string.country_tajikistan_number), context.getString(R.string.country_tajikistan_name))); countries.add(new Country(context.getString(R.string.country_tanzania_code), context.getString(R.string.country_tanzania_number), context.getString(R.string.country_tanzania_name))); countries.add(new Country(context.getString(R.string.country_thailand_code), context.getString(R.string.country_thailand_number), context.getString(R.string.country_thailand_name))); countries.add(new Country(context.getString(R.string.country_togo_code), context.getString(R.string.country_togo_number), context.getString(R.string.country_togo_name))); countries.add(new Country(context.getString(R.string.country_tokelau_code), context.getString(R.string.country_tokelau_number), context.getString(R.string.country_tokelau_name))); countries.add(new Country(context.getString(R.string.country_tonga_code), context.getString(R.string.country_tonga_number), context.getString(R.string.country_tonga_name))); countries.add(new Country(context.getString(R.string.country_trinidad_tobago_code), context.getString(R.string.country_trinidad_tobago_number), context.getString(R.string.country_trinidad_tobago_name))); countries.add(new Country(context.getString(R.string.country_tunisia_code), context.getString(R.string.country_tunisia_number), context.getString(R.string.country_tunisia_name))); countries.add(new Country(context.getString(R.string.country_turkey_code), context.getString(R.string.country_turkey_number), context.getString(R.string.country_turkey_name))); countries.add(new Country(context.getString(R.string.country_turkmenistan_code), context.getString(R.string.country_turkmenistan_number), context.getString(R.string.country_turkmenistan_name))); countries.add(new Country(context.getString(R.string.country_turks_and_caicos_islands_code), context.getString(R.string.country_turks_and_caicos_islands_number), context.getString(R.string.country_turks_and_caicos_islands_name))); countries.add(new Country(context.getString(R.string.country_tuvalu_code), context.getString(R.string.country_tuvalu_number), context.getString(R.string.country_tuvalu_name))); countries.add(new Country(context.getString(R.string.country_united_arab_emirates_code), context.getString(R.string.country_united_arab_emirates_number), context.getString(R.string.country_united_arab_emirates_name))); countries.add(new Country(context.getString(R.string.country_uganda_code), context.getString(R.string.country_uganda_number), context.getString(R.string.country_uganda_name))); countries.add(new Country(context.getString(R.string.country_united_kingdom_code), context.getString(R.string.country_united_kingdom_number), context.getString(R.string.country_united_kingdom_name))); countries.add(new Country(context.getString(R.string.country_ukraine_code), context.getString(R.string.country_ukraine_number), context.getString(R.string.country_ukraine_name))); countries.add(new Country(context.getString(R.string.country_uruguay_code), context.getString(R.string.country_uruguay_number), context.getString(R.string.country_uruguay_name))); countries.add(new Country(context.getString(R.string.country_united_states_code), context.getString(R.string.country_united_states_number), context.getString(R.string.country_united_states_name))); countries.add(new Country(context.getString(R.string.country_us_virgin_islands_code), context.getString(R.string.country_us_virgin_islands_number), context.getString(R.string.country_us_virgin_islands_name))); countries.add(new Country(context.getString(R.string.country_uzbekistan_code), context.getString(R.string.country_uzbekistan_number), context.getString(R.string.country_uzbekistan_name))); countries.add(new Country(context.getString(R.string.country_vanuatu_code), context.getString(R.string.country_vanuatu_number), context.getString(R.string.country_vanuatu_name))); countries.add(new Country(context.getString(R.string.country_holy_see_vatican_city_state_code), context.getString(R.string.country_holy_see_vatican_city_state_number), context.getString(R.string.country_holy_see_vatican_city_state_name))); countries.add(new Country(context.getString(R.string.country_venezuela_code), context.getString(R.string.country_venezuela_number), context.getString(R.string.country_venezuela_name))); countries.add(new Country(context.getString(R.string.country_viet_nam_code), context.getString(R.string.country_viet_nam_number), context.getString(R.string.country_viet_nam_name))); countries.add(new Country(context.getString(R.string.country_wallis_and_futuna_code), context.getString(R.string.country_wallis_and_futuna_number), context.getString(R.string.country_wallis_and_futuna_name))); countries.add(new Country(context.getString(R.string.country_yemen_code), context.getString(R.string.country_yemen_number), context.getString(R.string.country_yemen_name))); countries.add(new Country(context.getString(R.string.country_zambia_code), context.getString(R.string.country_zambia_number), context.getString(R.string.country_zambia_name))); countries.add(new Country(context.getString(R.string.country_zimbabwe_code), context.getString(R.string.country_zimbabwe_number), context.getString(R.string.country_zimbabwe_name))); return countries; }",
                        "max_stars_repo_name": "NA",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "NA",
                        "__cluster__": 295
                },
                {
                        "real_dup": "3"
                }
        ],


        [
                {
                        "id": "test_api-misuse-repair-single_data_163",
                        "content": "public void type(char character) { switch(character) { case 'a': doType(KeyEvent.VK_A); break; case 'b': doType(KeyEvent.VK_B); break; case 'c': doType(KeyEvent.VK_C); break; case 'd': doType(KeyEvent.VK_D); break; case 'e': doType(KeyEvent.VK_E); break; case 'f': doType(KeyEvent.VK_F); break; case 'g': doType(KeyEvent.VK_G); break; case 'h': doType(KeyEvent.VK_H); break; case 'i': doType(KeyEvent.VK_I); break; case 'j': doType(KeyEvent.VK_J); break; case 'k': doType(KeyEvent.VK_K); break; case 'l': doType(KeyEvent.VK_L); break; case 'm': doType(KeyEvent.VK_M); break; case 'n': doType(KeyEvent.VK_N); break; case 'o': doType(KeyEvent.VK_O); break; case 'p': doType(KeyEvent.VK_P); break; case 'q': doType(KeyEvent.VK_Q); break; case 'r': doType(KeyEvent.VK_R); break; case 's': doType(KeyEvent.VK_S); break; case 't': doType(KeyEvent.VK_T); break; case 'u': doType(KeyEvent.VK_U); break; case 'v': doType(KeyEvent.VK_V); break; case 'w': doType(KeyEvent.VK_W); break; case 'x': doType(KeyEvent.VK_X); break; case 'y': doType(KeyEvent.VK_Y); break; case 'z': doType(KeyEvent.VK_Z); break; case 'A': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_A); break; case 'B': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_B); break; case 'C': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_C); break; case 'D': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_D); break; case 'E': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_E); break; case 'F': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_F); break; case 'G': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_G); break; case 'H': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_H); break; case 'I': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_I); break; case 'J': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_J); break; case 'K': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_K); break; case 'L': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_L); break; case 'M': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_M); break; case 'N': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_N); break; case 'O': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_O); break; case 'P': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_P); break; case 'Q': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_Q); break; case 'R': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_R); break; case 'S': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_S); break; case 'T': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_T); break; case 'U': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_U); break; case 'V': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_V); break; case 'W': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_W); break; case 'X': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_X); break; case 'Y': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_Y); break; case 'Z': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_Z); break; case '`': doType(KeyEvent.VK_BACK_QUOTE); break; case '0': doType(KeyEvent.VK_0); break; case '1': doType(KeyEvent.VK_1); break; case '2': doType(KeyEvent.VK_2); break; case '3': doType(KeyEvent.VK_3); break; case '4': doType(KeyEvent.VK_4); break; case '5': doType(KeyEvent.VK_5); break; case '6': doType(KeyEvent.VK_6); break; case '7': doType(KeyEvent.VK_7); break; case '8': doType(KeyEvent.VK_8); break; case '9': doType(KeyEvent.VK_9); break; case '-': doType(KeyEvent.VK_MINUS); break; case '=': doType(KeyEvent.VK_EQUALS); break; case '~': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_BACK_QUOTE); break; case '!': doType(KeyEvent.VK_EXCLAMATION_MARK); break; case '@': doType(KeyEvent.VK_AT); break; case '#': doType(KeyEvent.VK_NUMBER_SIGN); break; case '$': doType(KeyEvent.VK_DOLLAR); break; case '%': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_5); break; case '^': doType(KeyEvent.VK_CIRCUMFLEX); break; case '&': doType(KeyEvent.VK_AMPERSAND); break; case '*': doType(KeyEvent.VK_ASTERISK); break; case '(': doType(KeyEvent.VK_LEFT_PARENTHESIS); break; case ')': doType(KeyEvent.VK_RIGHT_PARENTHESIS); break; case '_': doType(KeyEvent.VK_UNDERSCORE); break; case '+': doType(KeyEvent.VK_PLUS); break; case '\\t': doType(KeyEvent.VK_TAB); break; case '\\n': doType(KeyEvent.VK_ENTER); break; case '[': doType(KeyEvent.VK_OPEN_BRACKET); break; case ']': doType(KeyEvent.VK_CLOSE_BRACKET); break; case '\\\\': doType(KeyEvent.VK_BACK_SLASH); break; case '{': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_OPEN_BRACKET); break; case '}': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_CLOSE_BRACKET); break; case '|': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_BACK_SLASH); break; case ';': doType(KeyEvent.VK_SEMICOLON); break; case ':': doType(KeyEvent.VK_COLON); break; case '\\'': doType(KeyEvent.VK_QUOTE); break; case '\"': doType(KeyEvent.VK_QUOTEDBL); break; case ',': doType(KeyEvent.VK_COMMA); break; case '<': doType(KeyEvent.VK_LESS); break; case '.': doType(KeyEvent.VK_PERIOD); break; case '>': doType(KeyEvent.VK_GREATER); break; case '/': doType(KeyEvent.VK_SLASH); break; case '?': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_SLASH); break; case ' ': doType(KeyEvent.VK_SPACE); break; default: throw new IllegalArgumentException(\"Cannot type character \" + character); } }\npublic void type(char character) { switch(character) { case 'a': doType(KeyEvent.VK_A); break; case 'b': doType(KeyEvent.VK_B); break; case 'c': doType(KeyEvent.VK_C); break; case 'd': doType(KeyEvent.VK_D); break; case 'e': doType(KeyEvent.VK_E); break; case 'f': doType(KeyEvent.VK_F); break; case 'g': doType(KeyEvent.VK_G); break; case 'h': doType(KeyEvent.VK_H); break; case 'i': doType(KeyEvent.VK_I); break; case 'j': doType(KeyEvent.VK_J); break; case 'k': doType(KeyEvent.VK_K); break; case 'l': doType(KeyEvent.VK_L); break; case 'm': doType(KeyEvent.VK_M); break; case 'n': doType(KeyEvent.VK_N); break; case 'o': doType(KeyEvent.VK_O); break; case 'p': doType(KeyEvent.VK_P); break; case 'q': doType(KeyEvent.VK_Q); break; case 'r': doType(KeyEvent.VK_R); break; case 's': doType(KeyEvent.VK_S); break; case 't': doType(KeyEvent.VK_T); break; case 'u': doType(KeyEvent.VK_U); break; case 'v': doType(KeyEvent.VK_V); break; case 'w': doType(KeyEvent.VK_W); break; case 'x': doType(KeyEvent.VK_X); break; case 'y': doType(KeyEvent.VK_Y); break; case 'z': doType(KeyEvent.VK_Z); break; case 'A': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_A); break; case 'B': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_B); break; case 'C': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_C); break; case 'D': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_D); break; case 'E': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_E); break; case 'F': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_F); break; case 'G': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_G); break; case 'H': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_H); break; case 'I': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_I); break; case 'J': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_J); break; case 'K': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_K); break; case 'L': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_L); break; case 'M': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_M); break; case 'N': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_N); break; case 'O': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_O); break; case 'P': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_P); break; case 'Q': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_Q); break; case 'R': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_R); break; case 'S': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_S); break; case 'T': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_T); break; case 'U': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_U); break; case 'V': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_V); break; case 'W': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_W); break; case 'X': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_X); break; case 'Y': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_Y); break; case 'Z': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_Z); break; case '`': doType(KeyEvent.VK_BACK_QUOTE); break; case '0': doType(KeyEvent.VK_0); break; case '1': doType(KeyEvent.VK_1); break; case '2': doType(KeyEvent.VK_2); break; case '3': doType(KeyEvent.VK_3); break; case '4': doType(KeyEvent.VK_4); break; case '5': doType(KeyEvent.VK_5); break; case '6': doType(KeyEvent.VK_6); break; case '7': doType(KeyEvent.VK_7); break; case '8': doType(KeyEvent.VK_8); break; case '9': doType(KeyEvent.VK_9); break; case '-': doType(KeyEvent.VK_MINUS); break; case '=': doType(KeyEvent.VK_EQUALS); break; case '~': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_BACK_QUOTE); break; case '!': doType(KeyEvent.VK_EXCLAMATION_MARK); break; case '@': doType(KeyEvent.VK_AT); break; case '#': doType(KeyEvent.VK_NUMBER_SIGN); break; case '$': doType(KeyEvent.VK_DOLLAR); break; case '%': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_5); break; case '^': doType(KeyEvent.VK_CIRCUMFLEX); break; case '&': doType(KeyEvent.VK_AMPERSAND); break; case '*': doType(KeyEvent.VK_ASTERISK); break; case '(': doType(KeyEvent.VK_LEFT_PARENTHESIS); break; case ')': doType(KeyEvent.VK_RIGHT_PARENTHESIS); break; case '_': doType(KeyEvent.VK_UNDERSCORE); break; case '+': doType(KeyEvent.VK_PLUS); break; case '\\t': doType(KeyEvent.VK_TAB); break; case '\\n': doType(KeyEvent.VK_ENTER); break; case '[': doType(KeyEvent.VK_OPEN_BRACKET); break; case ']': doType(KeyEvent.VK_CLOSE_BRACKET); break; case '\\\\': doType(KeyEvent.VK_BACK_SLASH); break; case '{': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_OPEN_BRACKET); break; case '}': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_CLOSE_BRACKET); break; case '|': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_BACK_SLASH); break; case ';': doType(KeyEvent.VK_SEMICOLON); break; case ':': doType(KeyEvent.VK_COLON); break; case '\\'': doType(KeyEvent.VK_QUOTE); break; case '\"': doType(KeyEvent.SHIFT_MASK, KeyEvent.VK_QUOTE); break; case ',': doType(KeyEvent.VK_COMMA); break; case '<': doType(KeyEvent.VK_LESS); break; case '.': doType(KeyEvent.VK_PERIOD); break; case '>': doType(KeyEvent.VK_GREATER); break; case '/': doType(KeyEvent.VK_SLASH); break; case '?': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_SLASH); break; case ' ': doType(KeyEvent.VK_SPACE); break; default: throw new IllegalArgumentException(\"Cannot type character \" + character); } }",
                        "max_stars_repo_name": "NA",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "NA",
                        "__cluster__": 162
                },
                {
                        "id": "pretrain_java_data_7952348",
                        "content": "package main;\nimport java.awt.Robot;\nimport java.awt.event.KeyEvent;\npublic class Keyboard {\nprivate Robot robot;\npublic Keyboard()\n{\ntry\n{\nrobot = new Robot();\n}\ncatch(Exception e){ System.out.println(\"error in Creating robot\");}\n}\npublic void specialKey(int key_code){\nint key;\nswitch(key_code)\n{\ncase 19: key = KeyEvent.VK_UP; break;\ncase 20: key = KeyEvent.VK_DOWN; break;\ncase 21: key = KeyEvent.VK_LEFT; break;\ncase 22: key = KeyEvent.VK_RIGHT; break;\ncase 66: key = KeyEvent.VK_ENTER; break;\ncase 67: key = KeyEvent.VK_BACK_SPACE; break;\ndefault: key = -1; break;\n}\nkeyBoardPress(key);\n}\npublic void type(char character) {\nswitch (character) {\ncase 'a': keyBoardPress(KeyEvent.VK_A); break;\ncase 'b': keyBoardPress(KeyEvent.VK_B); break;\ncase 'c': keyBoardPress(KeyEvent.VK_C); break;\ncase 'd': keyBoardPress(KeyEvent.VK_D); break;\ncase 'e': keyBoardPress(KeyEvent.VK_E); break;\ncase 'f': keyBoardPress(KeyEvent.VK_F); break;\ncase 'g': keyBoardPress(KeyEvent.VK_G); break;\ncase 'h': keyBoardPress(KeyEvent.VK_H); break;\ncase 'i': keyBoardPress(KeyEvent.VK_I); break;\ncase 'j': keyBoardPress(KeyEvent.VK_J); break;\ncase 'k': keyBoardPress(KeyEvent.VK_K); break;\ncase 'l': keyBoardPress(KeyEvent.VK_L); break;\ncase 'm': keyBoardPress(KeyEvent.VK_M); break;\ncase 'n': keyBoardPress(KeyEvent.VK_N); break;\ncase 'o': keyBoardPress(KeyEvent.VK_O); break;\ncase 'p': keyBoardPress(KeyEvent.VK_P); break;\ncase 'q': keyBoardPress(KeyEvent.VK_Q); break;\ncase 'r': keyBoardPress(KeyEvent.VK_R); break;\ncase 's': keyBoardPress(KeyEvent.VK_S); break;\ncase 't': keyBoardPress(KeyEvent.VK_T); break;\ncase 'u': keyBoardPress(KeyEvent.VK_U); break;\ncase 'v': keyBoardPress(KeyEvent.VK_V); break;\ncase 'w': keyBoardPress(KeyEvent.VK_W); break;\ncase 'x': keyBoardPress(KeyEvent.VK_X); break;\ncase 'y': keyBoardPress(KeyEvent.VK_Y); break;\ncase 'z': keyBoardPress(KeyEvent.VK_Z); break;\ncase 'A': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_A); break;\ncase 'B': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_B); break;\ncase 'C': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_C); break;\ncase 'D': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_D); break;\ncase 'E': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_E); break;\ncase 'F': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_F); break;\ncase 'G': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_G); break;\ncase 'H': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_H); break;\ncase 'I': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_I); break;\ncase 'J': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_J); break;\ncase 'K': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_K); break;\ncase 'L': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_L); break;\ncase 'M': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_M); break;\ncase 'N': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_N); break;\ncase 'O': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_O); break;\ncase 'P': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_P); break;\ncase 'Q': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_Q); break;\ncase 'R': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_R); break;\ncase 'S': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_S); break;\ncase 'T': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_T); break;\ncase 'U': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_U); break;\ncase 'V': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_V); break;\ncase 'W': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_W); break;\ncase 'X': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_X); break;\ncase 'Y': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_Y); break;\ncase 'Z': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_Z); break;\ncase '`': keyBoardPress(KeyEvent.VK_BACK_QUOTE); break;\ncase '0': keyBoardPress(KeyEvent.VK_0); break;\ncase '1': keyBoardPress(KeyEvent.VK_1); break;\ncase '2': keyBoardPress(KeyEvent.VK_2); break;\ncase '3': keyBoardPress(KeyEvent.VK_3); break;\ncase '4': keyBoardPress(KeyEvent.VK_4); break;\ncase '5': keyBoardPress(KeyEvent.VK_5); break;\ncase '6': keyBoardPress(KeyEvent.VK_6); break;\ncase '7': keyBoardPress(KeyEvent.VK_7); break;\ncase '8': keyBoardPress(KeyEvent.VK_8); break;\ncase '9': keyBoardPress(KeyEvent.VK_9); break;\ncase '-': keyBoardPress(KeyEvent.VK_MINUS); break;\ncase '=': keyBoardPress(KeyEvent.VK_EQUALS); break;\ncase '~': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_BACK_QUOTE); break;\ncase '!': keyBoardPress(KeyEvent.VK_EXCLAMATION_MARK); break;\ncase '@': keyBoardPress(KeyEvent.VK_AT); break;\ncase '#': keyBoardPress(KeyEvent.VK_NUMBER_SIGN); break;\ncase '$': keyBoardPress(KeyEvent.VK_DOLLAR); System.out.println(\"dollor\"); break;\ncase '%': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_5); break;\ncase '^': keyBoardPress(KeyEvent.VK_CIRCUMFLEX); break;\ncase '&': keyBoardPress(KeyEvent.VK_AMPERSAND); break;\ncase '*': keyBoardPress(KeyEvent.VK_ASTERISK); break;\ncase '(': keyBoardPress(KeyEvent.VK_LEFT_PARENTHESIS); break;\ncase ')': keyBoardPress(KeyEvent.VK_RIGHT_PARENTHESIS); break;\ncase '_': keyBoardPress(KeyEvent.VK_UNDERSCORE); break;\ncase '+': keyBoardPress(KeyEvent.VK_PLUS); break;\ncase '\\t': keyBoardPress(KeyEvent.VK_TAB); break;\ncase '\\n': keyBoardPress(KeyEvent.VK_ENTER); break;\ncase '[': keyBoardPress(KeyEvent.VK_OPEN_BRACKET); break;\ncase ']': keyBoardPress(KeyEvent.VK_CLOSE_BRACKET); break;\ncase '\\\\': keyBoardPress(KeyEvent.VK_BACK_SLASH); break;\ncase '{': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_OPEN_BRACKET); break;\ncase '}': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_CLOSE_BRACKET); break;\ncase '|': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_BACK_SLASH); break;\ncase ';': keyBoardPress(KeyEvent.VK_SEMICOLON); break;\ncase ':': keyBoardPress(KeyEvent.VK_COLON); break;\ncase '\\'': keyBoardPress(KeyEvent.VK_QUOTE); break;\ncase '\"': keyBoardPress(KeyEvent.VK_QUOTEDBL); break;\ncase ',': keyBoardPress(KeyEvent.VK_COMMA); break;\ncase '<': keyBoardPress(KeyEvent.VK_LESS); break;\ncase '.': keyBoardPress(KeyEvent.VK_PERIOD); break;\ncase '>': keyBoardPress(KeyEvent.VK_GREATER); break;\ncase '/': keyBoardPress(KeyEvent.VK_SLASH); break;\ncase '?': keyBoardPress(KeyEvent.VK_SHIFT, KeyEvent.VK_SLASH); break;\ncase ' ': keyBoardPress(KeyEvent.VK_SPACE); break;\ndefault: System.out.println(\"Character \" + character); break;\n}\n}\npublic void keyBoardPress(int key){\ntry{\nrobot.keyPress(key);\nrobot.keyRelease(key);\n}catch(Exception e){}\n}\npublic void keyBoardPress(int key, int key2){\ntry{\nrobot.keyPress(key);\nrobot.keyPress(key2);\nrobot.keyRelease(key2);\nrobot.keyRelease(key);\n}catch(Exception e){}\n}\n}",
                        "max_stars_repo_name": "ArunBonagiri/my-remote-server",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "src/main/Keyboard.java",
                        "__cluster__": 162
                },
                {
                        "real_dup": "1"
                }
        ],


        [
                {
                        "id": "test_api-misuse-repair-single_data_163",
                        "content": "public void type(char character) { switch(character) { case 'a': doType(KeyEvent.VK_A); break; case 'b': doType(KeyEvent.VK_B); break; case 'c': doType(KeyEvent.VK_C); break; case 'd': doType(KeyEvent.VK_D); break; case 'e': doType(KeyEvent.VK_E); break; case 'f': doType(KeyEvent.VK_F); break; case 'g': doType(KeyEvent.VK_G); break; case 'h': doType(KeyEvent.VK_H); break; case 'i': doType(KeyEvent.VK_I); break; case 'j': doType(KeyEvent.VK_J); break; case 'k': doType(KeyEvent.VK_K); break; case 'l': doType(KeyEvent.VK_L); break; case 'm': doType(KeyEvent.VK_M); break; case 'n': doType(KeyEvent.VK_N); break; case 'o': doType(KeyEvent.VK_O); break; case 'p': doType(KeyEvent.VK_P); break; case 'q': doType(KeyEvent.VK_Q); break; case 'r': doType(KeyEvent.VK_R); break; case 's': doType(KeyEvent.VK_S); break; case 't': doType(KeyEvent.VK_T); break; case 'u': doType(KeyEvent.VK_U); break; case 'v': doType(KeyEvent.VK_V); break; case 'w': doType(KeyEvent.VK_W); break; case 'x': doType(KeyEvent.VK_X); break; case 'y': doType(KeyEvent.VK_Y); break; case 'z': doType(KeyEvent.VK_Z); break; case 'A': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_A); break; case 'B': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_B); break; case 'C': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_C); break; case 'D': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_D); break; case 'E': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_E); break; case 'F': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_F); break; case 'G': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_G); break; case 'H': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_H); break; case 'I': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_I); break; case 'J': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_J); break; case 'K': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_K); break; case 'L': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_L); break; case 'M': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_M); break; case 'N': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_N); break; case 'O': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_O); break; case 'P': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_P); break; case 'Q': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_Q); break; case 'R': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_R); break; case 'S': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_S); break; case 'T': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_T); break; case 'U': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_U); break; case 'V': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_V); break; case 'W': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_W); break; case 'X': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_X); break; case 'Y': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_Y); break; case 'Z': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_Z); break; case '`': doType(KeyEvent.VK_BACK_QUOTE); break; case '0': doType(KeyEvent.VK_0); break; case '1': doType(KeyEvent.VK_1); break; case '2': doType(KeyEvent.VK_2); break; case '3': doType(KeyEvent.VK_3); break; case '4': doType(KeyEvent.VK_4); break; case '5': doType(KeyEvent.VK_5); break; case '6': doType(KeyEvent.VK_6); break; case '7': doType(KeyEvent.VK_7); break; case '8': doType(KeyEvent.VK_8); break; case '9': doType(KeyEvent.VK_9); break; case '-': doType(KeyEvent.VK_MINUS); break; case '=': doType(KeyEvent.VK_EQUALS); break; case '~': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_BACK_QUOTE); break; case '!': doType(KeyEvent.VK_EXCLAMATION_MARK); break; case '@': doType(KeyEvent.VK_AT); break; case '#': doType(KeyEvent.VK_NUMBER_SIGN); break; case '$': doType(KeyEvent.VK_DOLLAR); break; case '%': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_5); break; case '^': doType(KeyEvent.VK_CIRCUMFLEX); break; case '&': doType(KeyEvent.VK_AMPERSAND); break; case '*': doType(KeyEvent.VK_ASTERISK); break; case '(': doType(KeyEvent.VK_LEFT_PARENTHESIS); break; case ')': doType(KeyEvent.VK_RIGHT_PARENTHESIS); break; case '_': doType(KeyEvent.VK_UNDERSCORE); break; case '+': doType(KeyEvent.VK_PLUS); break; case '\\t': doType(KeyEvent.VK_TAB); break; case '\\n': doType(KeyEvent.VK_ENTER); break; case '[': doType(KeyEvent.VK_OPEN_BRACKET); break; case ']': doType(KeyEvent.VK_CLOSE_BRACKET); break; case '\\\\': doType(KeyEvent.VK_BACK_SLASH); break; case '{': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_OPEN_BRACKET); break; case '}': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_CLOSE_BRACKET); break; case '|': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_BACK_SLASH); break; case ';': doType(KeyEvent.VK_SEMICOLON); break; case ':': doType(KeyEvent.VK_COLON); break; case '\\'': doType(KeyEvent.VK_QUOTE); break; case '\"': doType(KeyEvent.VK_QUOTEDBL); break; case ',': doType(KeyEvent.VK_COMMA); break; case '<': doType(KeyEvent.VK_LESS); break; case '.': doType(KeyEvent.VK_PERIOD); break; case '>': doType(KeyEvent.VK_GREATER); break; case '/': doType(KeyEvent.VK_SLASH); break; case '?': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_SLASH); break; case ' ': doType(KeyEvent.VK_SPACE); break; default: throw new IllegalArgumentException(\"Cannot type character \" + character); } }\npublic void type(char character) { switch(character) { case 'a': doType(KeyEvent.VK_A); break; case 'b': doType(KeyEvent.VK_B); break; case 'c': doType(KeyEvent.VK_C); break; case 'd': doType(KeyEvent.VK_D); break; case 'e': doType(KeyEvent.VK_E); break; case 'f': doType(KeyEvent.VK_F); break; case 'g': doType(KeyEvent.VK_G); break; case 'h': doType(KeyEvent.VK_H); break; case 'i': doType(KeyEvent.VK_I); break; case 'j': doType(KeyEvent.VK_J); break; case 'k': doType(KeyEvent.VK_K); break; case 'l': doType(KeyEvent.VK_L); break; case 'm': doType(KeyEvent.VK_M); break; case 'n': doType(KeyEvent.VK_N); break; case 'o': doType(KeyEvent.VK_O); break; case 'p': doType(KeyEvent.VK_P); break; case 'q': doType(KeyEvent.VK_Q); break; case 'r': doType(KeyEvent.VK_R); break; case 's': doType(KeyEvent.VK_S); break; case 't': doType(KeyEvent.VK_T); break; case 'u': doType(KeyEvent.VK_U); break; case 'v': doType(KeyEvent.VK_V); break; case 'w': doType(KeyEvent.VK_W); break; case 'x': doType(KeyEvent.VK_X); break; case 'y': doType(KeyEvent.VK_Y); break; case 'z': doType(KeyEvent.VK_Z); break; case 'A': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_A); break; case 'B': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_B); break; case 'C': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_C); break; case 'D': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_D); break; case 'E': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_E); break; case 'F': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_F); break; case 'G': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_G); break; case 'H': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_H); break; case 'I': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_I); break; case 'J': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_J); break; case 'K': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_K); break; case 'L': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_L); break; case 'M': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_M); break; case 'N': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_N); break; case 'O': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_O); break; case 'P': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_P); break; case 'Q': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_Q); break; case 'R': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_R); break; case 'S': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_S); break; case 'T': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_T); break; case 'U': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_U); break; case 'V': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_V); break; case 'W': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_W); break; case 'X': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_X); break; case 'Y': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_Y); break; case 'Z': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_Z); break; case '`': doType(KeyEvent.VK_BACK_QUOTE); break; case '0': doType(KeyEvent.VK_0); break; case '1': doType(KeyEvent.VK_1); break; case '2': doType(KeyEvent.VK_2); break; case '3': doType(KeyEvent.VK_3); break; case '4': doType(KeyEvent.VK_4); break; case '5': doType(KeyEvent.VK_5); break; case '6': doType(KeyEvent.VK_6); break; case '7': doType(KeyEvent.VK_7); break; case '8': doType(KeyEvent.VK_8); break; case '9': doType(KeyEvent.VK_9); break; case '-': doType(KeyEvent.VK_MINUS); break; case '=': doType(KeyEvent.VK_EQUALS); break; case '~': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_BACK_QUOTE); break; case '!': doType(KeyEvent.VK_EXCLAMATION_MARK); break; case '@': doType(KeyEvent.VK_AT); break; case '#': doType(KeyEvent.VK_NUMBER_SIGN); break; case '$': doType(KeyEvent.VK_DOLLAR); break; case '%': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_5); break; case '^': doType(KeyEvent.VK_CIRCUMFLEX); break; case '&': doType(KeyEvent.VK_AMPERSAND); break; case '*': doType(KeyEvent.VK_ASTERISK); break; case '(': doType(KeyEvent.VK_LEFT_PARENTHESIS); break; case ')': doType(KeyEvent.VK_RIGHT_PARENTHESIS); break; case '_': doType(KeyEvent.VK_UNDERSCORE); break; case '+': doType(KeyEvent.VK_PLUS); break; case '\\t': doType(KeyEvent.VK_TAB); break; case '\\n': doType(KeyEvent.VK_ENTER); break; case '[': doType(KeyEvent.VK_OPEN_BRACKET); break; case ']': doType(KeyEvent.VK_CLOSE_BRACKET); break; case '\\\\': doType(KeyEvent.VK_BACK_SLASH); break; case '{': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_OPEN_BRACKET); break; case '}': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_CLOSE_BRACKET); break; case '|': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_BACK_SLASH); break; case ';': doType(KeyEvent.VK_SEMICOLON); break; case ':': doType(KeyEvent.VK_COLON); break; case '\\'': doType(KeyEvent.VK_QUOTE); break; case '\"': doType(KeyEvent.SHIFT_MASK, KeyEvent.VK_QUOTE); break; case ',': doType(KeyEvent.VK_COMMA); break; case '<': doType(KeyEvent.VK_LESS); break; case '.': doType(KeyEvent.VK_PERIOD); break; case '>': doType(KeyEvent.VK_GREATER); break; case '/': doType(KeyEvent.VK_SLASH); break; case '?': doType(KeyEvent.VK_SHIFT, KeyEvent.VK_SLASH); break; case ' ': doType(KeyEvent.VK_SPACE); break; default: throw new IllegalArgumentException(\"Cannot type character \" + character); } }",
                        "max_stars_repo_name": "NA",
                        "max_stars_count": 0,
                        "max_stars_repo_path": "NA",
                        "__cluster__": 162
                },
                {
                        "id": "pretrain_java_data_11197674",
                        "content": "package ellus.ESM.roboSys;\nimport static java.awt.event.KeyEvent.VK_0;\nimport static java.awt.event.KeyEvent.VK_1;\nimport static java.awt.event.KeyEvent.VK_2;\nimport static java.awt.event.KeyEvent.VK_3;\nimport static java.awt.event.KeyEvent.VK_4;\nimport static java.awt.event.KeyEvent.VK_5;\nimport static java.awt.event.KeyEvent.VK_6;\nimport static java.awt.event.KeyEvent.VK_7;\nimport static java.awt.event.KeyEvent.VK_8;\nimport static java.awt.event.KeyEvent.VK_9;\nimport static java.awt.event.KeyEvent.VK_A;\nimport static java.awt.event.KeyEvent.VK_ALT;\nimport static java.awt.event.KeyEvent.VK_AMPERSAND;\nimport static java.awt.event.KeyEvent.VK_ASTERISK;\nimport static java.awt.event.KeyEvent.VK_AT;\nimport static java.awt.event.KeyEvent.VK_B;\nimport static java.awt.event.KeyEvent.VK_BACK_QUOTE;\nimport static java.awt.event.KeyEvent.VK_BACK_SLASH;\nimport static java.awt.event.KeyEvent.VK_C;\nimport static java.awt.event.KeyEvent.VK_CIRCUMFLEX;\nimport static java.awt.event.KeyEvent.VK_CLOSE_BRACKET;\nimport static java.awt.event.KeyEvent.VK_COLON;\nimport static java.awt.event.KeyEvent.VK_COMMA;\nimport static java.awt.event.KeyEvent.VK_D;\nimport static java.awt.event.KeyEvent.VK_DOLLAR;\nimport static java.awt.event.KeyEvent.VK_E;\nimport static java.awt.event.KeyEvent.VK_ENTER;\nimport static java.awt.event.KeyEvent.VK_EQUALS;\nimport static java.awt.event.KeyEvent.VK_EXCLAMATION_MARK;\nimport static java.awt.event.KeyEvent.VK_F;\nimport static java.awt.event.KeyEvent.VK_G;\nimport static java.awt.event.KeyEvent.VK_H;\nimport static java.awt.event.KeyEvent.VK_I;\nimport static java.awt.event.KeyEvent.VK_J;\nimport static java.awt.event.KeyEvent.VK_K;\nimport static java.awt.event.KeyEvent.VK_L;\nimport static java.awt.event.KeyEvent.VK_LEFT_PARENTHESIS;\nimport static java.awt.event.KeyEvent.VK_M;\nimport static java.awt.event.KeyEvent.VK_MINUS;\nimport static java.awt.event.KeyEvent.VK_N;\nimport static java.awt.event.KeyEvent.VK_NUMBER_SIGN;\nimport static java.awt.event.KeyEvent.VK_O;\nimport static java.awt.event.KeyEvent.VK_OPEN_BRACKET;\nimport static java.awt.event.KeyEvent.VK_P;\nimport static java.awt.event.KeyEvent.VK_PERIOD;\nimport static java.awt.event.KeyEvent.VK_PLUS;\nimport static java.awt.event.KeyEvent.VK_Q;\nimport static java.awt.event.KeyEvent.VK_QUOTE;\nimport static java.awt.event.KeyEvent.VK_QUOTEDBL;\nimport static java.awt.event.KeyEvent.VK_R;\nimport static java.awt.event.KeyEvent.VK_RIGHT_PARENTHESIS;\nimport static java.awt.event.KeyEvent.VK_S;\nimport static java.awt.event.KeyEvent.VK_SEMICOLON;\nimport static java.awt.event.KeyEvent.VK_SHIFT;\nimport static java.awt.event.KeyEvent.VK_SLASH;\nimport static java.awt.event.KeyEvent.VK_SPACE;\nimport static java.awt.event.KeyEvent.VK_T;\nimport static java.awt.event.KeyEvent.VK_TAB;\nimport static java.awt.event.KeyEvent.VK_U;\nimport static java.awt.event.KeyEvent.VK_UNDERSCORE;\nimport static java.awt.event.KeyEvent.VK_V;\nimport static java.awt.event.KeyEvent.VK_W;\nimport static java.awt.event.KeyEvent.VK_X;\nimport static java.awt.event.KeyEvent.VK_Y;\nimport static java.awt.event.KeyEvent.VK_Z;\nimport java.awt.AWTException;\nimport java.awt.Robot;\nimport java.util.TimerTask;\npublic class keyboard extends TimerTask {\nprivate static Robot\trobot\t= null;\nprivate static boolean\tinit\t= false;\nprivate String\t\t\tmsg;\npublic keyboard( String msg ) throws AWTException {\nthis.msg= msg;\n}\n@Override\npublic void run() {\ntypeC( msg );\n}\npublic static void type( String str ) {\ntypeC( str );\n}\npublic void type_TabAlt() {\ndoType( VK_ALT, VK_TAB );\n}\nprivate static void type( char character ) {\nswitch( character ){\ncase 'a' :\ndoType( VK_A );\nbreak;\ncase 'b' :\ndoType( VK_B );\nbreak;\ncase 'c' :\ndoType( VK_C );\nbreak;\ncase 'd' :\ndoType( VK_D );\nbreak;\ncase 'e' :\ndoType( VK_E );\nbreak;\ncase 'f' :\ndoType( VK_F );\nbreak;\ncase 'g' :\ndoType( VK_G );\nbreak;\ncase 'h' :\ndoType( VK_H );\nbreak;\ncase 'i' :\ndoType( VK_I );\nbreak;\ncase 'j' :\ndoType( VK_J );\nbreak;\ncase 'k' :\ndoType( VK_K );\nbreak;\ncase 'l' :\ndoType( VK_L );\nbreak;\ncase 'm' :\ndoType( VK_M );\nbreak;\ncase 'n' :\ndoType( VK_N );\nbreak;\ncase 'o' :\ndoType( VK_O );\nbreak;\ncase 'p' :\ndoType( VK_P );\nbreak;\ncase 'q' :\ndoType( VK_Q );\nbreak;\ncase 'r' :\ndoType( VK_R );\nbreak;\ncase 's' :\ndoType( VK_S );\nbreak;\ncase 't' :\ndoType( VK_T );\nbreak;\ncase 'u' :\ndoType( VK_U );\nbreak;\ncase 'v' :\ndoType( VK_V );\nbreak;\ncase 'w' :\ndoType( VK_W );\nbreak;\ncase 'x' :\ndoType( VK_X );\nbreak;\ncase 'y' :\ndoType( VK_Y );\nbreak;\ncase 'z' :\ndoType( VK_Z );\nbreak;\ncase 'A' :\ndoType( VK_SHIFT, VK_A );\nbreak;\ncase 'B' :\ndoType( VK_SHIFT, VK_B );\nbreak;\ncase 'C' :\ndoType( VK_SHIFT, VK_C );\nbreak;\ncase 'D' :\ndoType( VK_SHIFT, VK_D );\nbreak;\ncase 'E' :\ndoType( VK_SHIFT, VK_E );\nbreak;\ncase 'F' :\ndoType( VK_SHIFT, VK_F );\nbreak;\ncase 'G' :\ndoType( VK_SHIFT, VK_G );\nbreak;\ncase 'H' :\ndoType( VK_SHIFT, VK_H );\nbreak;\ncase 'I' :\ndoType( VK_SHIFT, VK_I );\nbreak;\ncase 'J' :\ndoType( VK_SHIFT, VK_J );\nbreak;\ncase 'K' :\ndoType( VK_SHIFT, VK_K );\nbreak;\ncase 'L' :\ndoType( VK_SHIFT, VK_L );\nbreak;\ncase 'M' :\ndoType( VK_SHIFT, VK_M );\nbreak;\ncase 'N' :\ndoType( VK_SHIFT, VK_N );\nbreak;\ncase 'O' :\ndoType( VK_SHIFT, VK_O );\nbreak;\ncase 'P' :\ndoType( VK_SHIFT, VK_P );\nbreak;\ncase 'Q' :\ndoType( VK_SHIFT, VK_Q );\nbreak;\ncase 'R' :\ndoType( VK_SHIFT, VK_R );\nbreak;\ncase 'S' :\ndoType( VK_SHIFT, VK_S );\nbreak;\ncase 'T' :\ndoType( VK_SHIFT, VK_T );\nbreak;\ncase 'U' :\ndoType( VK_SHIFT, VK_U );\nbreak;\ncase 'V' :\ndoType( VK_SHIFT, VK_V );\nbreak;\ncase 'W' :\ndoType( VK_SHIFT, VK_W );\nbreak;\ncase 'X' :\ndoType( VK_SHIFT, VK_X );\nbreak;\ncase 'Y' :\ndoType( VK_SHIFT, VK_Y );\nbreak;\ncase 'Z' :\ndoType( VK_SHIFT, VK_Z );\nbreak;\ncase '`' :\ndoType( VK_BACK_QUOTE );\nbreak;\ncase '0' :\ndoType( VK_0 );\nbreak;\ncase '1' :\ndoType( VK_1 );\nbreak;\ncase '2' :\ndoType( VK_2 );\nbreak;\ncase '3' :\ndoType( VK_3 );\nbreak;\ncase '4' :\ndoType( VK_4 );\nbreak;\ncase '5' :\ndoType( VK_5 );\nbreak;\ncase '6' :\ndoType( VK_6 );\nbreak;\ncase '7' :\ndoType( VK_7 );\nbreak;\ncase '8' :\ndoType( VK_8 );\nbreak;\ncase '9' :\ndoType( VK_9 );\nbreak;\ncase '-' :\ndoType( VK_MINUS );\nbreak;\ncase '=' :\ndoType( VK_EQUALS );\nbreak;\ncase '~' :\ndoType( VK_SHIFT, VK_BACK_QUOTE );\nbreak;\ncase '!' :\ndoType( VK_EXCLAMATION_MARK );\nbreak;\ncase '@' :\ndoType( VK_AT );\nbreak;\ncase '#' :\ndoType( VK_NUMBER_SIGN );\nbreak;\ncase '$' :\ndoType( VK_DOLLAR );\nbreak;\ncase '%' :\ndoType( VK_SHIFT, VK_5 );\nbreak;\ncase '^' :\ndoType( VK_CIRCUMFLEX );\nbreak;\ncase '&' :\ndoType( VK_AMPERSAND );\nbreak;\ncase '*' :\ndoType( VK_ASTERISK );\nbreak;\ncase '(' :\ndoType( VK_LEFT_PARENTHESIS );\nbreak;\ncase ')' :\ndoType( VK_RIGHT_PARENTHESIS );\nbreak;\ncase '_' :\ndoType( VK_UNDERSCORE );\nbreak;\ncase '+' :\ndoType( VK_PLUS );\nbreak;\ncase '\\t' :\ndoType( VK_TAB );\nbreak;\ncase '\\n' :\ndoType( VK_ENTER );\nbreak;\ncase '[' :\ndoType( VK_OPEN_BRACKET );\nbreak;\ncase ']' :\ndoType( VK_CLOSE_BRACKET );\nbreak;\ncase '\\\\' :\ndoType( VK_BACK_SLASH );\nbreak;\ncase '{' :\ndoType( VK_SHIFT, VK_OPEN_BRACKET );\nbreak;\ncase '}' :\ndoType( VK_SHIFT, VK_CLOSE_BRACKET );\nbreak;\ncase '|' :\ndoType( VK_SHIFT, VK_BACK_SLASH );\nbreak;\ncase ';' :\ndoType( VK_SEMICOLON );\nbreak;\ncase ':' :\ndoType( VK_COLON );\nbreak;\ncase '\\'' :\ndoType( VK_QUOTE );\nbreak;\ncase '\"' :\ndoType( VK_QUOTEDBL );\nbreak;\ncase ',' :\ndoType( VK_COMMA );\nbreak;\ncase '<' :\ndoType( VK_SHIFT, VK_COMMA );\nbreak;\ncase '.' :\ndoType( VK_PERIOD );\nbreak;\ncase '>' :\ndoType( VK_SHIFT, VK_PERIOD );\nbreak;\ncase '/' :\ndoType( VK_SLASH );\nbreak;\ncase '?' :\ndoType( VK_SHIFT, VK_SLASH );\nbreak;\ncase ' ' :\ndoType( VK_SPACE );\nbreak;\ndefault :\nthrow new IllegalArgumentException( \"Cannot type character \"\n+ character );\n}\n}\nprivate static void doType( int... keyCodes ) {\ndoType( keyCodes, 0, keyCodes.length );\n}\nprivate static void doType( int[] keyCodes, int offset, int length ) {\nif( length == 0 ){\nreturn;\n}\nrobot.keyPress( keyCodes[offset] );\ndoType( keyCodes, offset + 1, length - 1 );\nrobot.keyRelease( keyCodes[offset] );\n}\nprivate static synchronized void typeC( String characters ) {\nif( !init )\ninit();\nif( characters == null )\nreturn;\nint length= characters.length();\nfor( int i= 0; i < length; i++ ){\nchar character= characters.charAt( i );\ntype( character );\n}\n}\nprivate static void init() {\ntry{\nrobot= new Robot();\ninit= true;\n}catch ( AWTException e ){\ne.printStackTrace();\n}\n}\n}",
                        "max_stars_repo_name": "e11us/ESM",
                        "max_stars_count": 1,
                        "max_stars_repo_path": "src/ellus/ESM/roboSys/keyboard.java",
                        "__cluster__": 162
                },
                {
                        "real_dup": "1"
                }
        ]
]